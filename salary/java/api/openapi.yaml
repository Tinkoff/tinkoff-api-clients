openapi: 3.0.3
info:
  description: "# Введение \n\n**Tinkoff Business OpenApi** помогает автоматизиров\
    ать бизнес-процессы с помощью интеграции ваших сервисов с сервисами Тинькофф:\
    \ получение выписки со счетов, выставление счета, совершение платежей и других\
    .  \nДва способа подключения:  \n[Партнерский сценарий](#section/Partnerskij-scenarij)\
    \ - чтобы подключить данные из Тинькофф Бизнеса к другим сервисам.  \n[Селф-Се\
    рвис](#section/Scenarij-Self-Servis) - чтобы получить доступ через API к своей\
    \ компании в Тинькофф Бизнесе.\n\n# Терминология\n\n* **Access Token** — токен\
    , который дает доступ до методов Tinkoff Business OpenApi. Для партнерского сц\
    енария, токен будет активен (т.е. по нему можно будет вызывать методы) 30 мину\
    т: потом его надо будет переполучить. Для сценария \"Селф-Сервис\" токен будет\
    \ активен 1 год.\n* **Refresh Token** — токен, активный 1 год, который дает во\
    зможность получить новый Access Token, если он устарел, чтобы восстановить дос\
    туп до методов Tinkoff Business OpenApi.\n* **redirect_uri** — uri для переход\
    а, который вы указываете при регистрации партнера. На него будет произведен ре\
    директ для получения Access и Refresh токенов. Подробнее про формат запросов,\
    \ который должен обрабатывать эндпоинт на этом uri, можно почитать [здесь.](#section/Partnerskij-scenarij/Opisanie-processa-avtorizacii)\
    \  \n* **client_id** - уникальный идентификатор партнера, которые вы получаете\
    \ при регистрации  \n* **scope** - механизм, [используемый в OAuth 2.0](https://oauth.net/2/scope/),\
    \ который ограничивает права доступа вашего приложения к пользовательским данн\
    ым. Выпущенный в личном кабинете токен будет ограничен выбранными в меню досту\
    пами.\n\n# Авторизация в Tinkoff Id\n\n**Tinkoff Id** — единая точка авторизац\
    ии для всего Тинькофф банка, работающая по протоколам [**OAuth 2.0**]( https://oauth.net/2/)\
    \ и **[OpenID Connect](https://openid.net/connect/)**. Авторизация для всех ме\
    тодов Tinkoff Business OpenApi работает путем отправки Access Token в заголовк\
    е запроса. \n# Партнерский сценарий\n\n## Регистрация \n\nДля начала работы с\
    \ Tinkoff Business OpenApi в качестве партнера заполните заявку на подключение\
    \ на [этой странице](https://www.tinkoff.ru/business/open-api/). После рассмот\
    рения вашей заявки вы получите **client_id** и пароль.\n\n## Описание процесса\
    \ авторизации\n\nВ процессе регистрации вас попросят указать redirect_uri. Вам\
    \ понадобится создать эндпоинт, доступный по ```redirect_uri```, который закан\
    чивает процесс авторизации, путем обмена кода на Access и Refresh токены. Для\
    \ удобства, здесь и далее, он будет лежать на  ```https://myintegration.ru/auth/complete```,\
    \ где ```https://myintegration.ru``` - это ваше приложение.\n\nОписание процес\
    са авторизации:\n\n1. Клиент начинает процесс авторизации. \n2. Вам понадобитс\
    я сгенерировать параметр state и связать его с браузером пользователя для защи\
    ты от CSRF-атак.  \n`state` параметр служит для повышения надежности процесса\
    \ авторизации. Правильное его использование повышает безопасность вашей интегр\
    ации с `Tinkoff Business OpenApi`. Почитать про лучшие практики использования\
    \ `state` можно [здесь.](https://tools.ietf.org/html/draft-ietf-oauth-security-topics-14#section-4.7)\n\
    3. Вызвать метод ```GET https://id.tinkoff.ru/auth/authorize``` со следующими\
    \ параметрами:\n* client_id: идентификатор, полученный при регистрации партнер\
    а\n* redirect_uri: ```https://myintegration.ru/auth/complete```\n* state: стро\
    ка из пункта 2\n* response_type: ```code```\n* scope_parameters: URL закодиров\
    анный json с ИНН и КПП компании клиента. Эти данные необходимо для того, чтобы\
    \ уметь однозначно определять к какой именно компании давать доступ клиенту. Е\
    сли у компании клиента нет КПП, передайте вместо него \"0\". Пример JSON до ко\
    дирования: \n\n```\n{ \n    \"inn\" : \"7743180892\", \n    \"kpp\" : \"773101001\"\
    \ \n} \n```\n\nПример запроса:\n\n```\nGET https://id.tinkoff.ru/auth/authorize?client_id=%client_id%&redirect_uri=https://myintegration.ru/auth/complete&state=ABCxyz&response_type=code&scope_parameters=%20%7B%20%22inn%22%20:%20%227743180892%22,%20%22kpp%22%20:%20%22773101001%22%20%7D\n\
    ```\n\n4. Клиенту откроется окно с выбором доступов:\n\n![](https://business.cdn-tinkoff.ru/static/images/opensme/consents-pop-up.jpg)\n\
    \n\nЕсли клиент поставит галочки напротив всех полей в списке и нажмет \"Продо\
    лжить\", при следующих авторизациях это окно открываться не будет.\n\nПосле на\
    жатия кнопки \"Продолжить\", запрос закончится редиректом на ```https://myintegration.ru/auth/complete```.\n\
    \n5. На ```https://myintegration.ru/auth/complete``` придет запрос вида:\n\n```\n\
    https://myintegration.ru/auth/complete?state=ABCxyz&code=c.1aGiAXX3Ni&session_state=hU7GNp0Y3kgs3nx0H3RTj3JzCSrdaqaDhU6lS87eiUw.i4kl6dsEB1SQogzq0Nj0\n\
    ```\n \nДалее вам нужно провалидировать параметр state. Если все правильно, то\
    \ вам надо забрать строку из параметра ```code```  для того, чтобы обменять ее\
    \ на Access и Refresh токены.\n\n6. Для того, чтобы получить Access и Refresh\
    \ токены, вам нужно вызвать метод ```POST https://id.tinkoff.ru/auth/token```.\n\
    \nФормат запроса:\n\n* Authorization: Basic, где username и password соответст\
    вуют client-id и паролю из пункта 2. [Примеры составления в разных языках](https://gist.github.com/brandonmwest/a2632d0a65088a20c00a)\n\
    * Content-type: ```application/x-www-form-urlencoded```\n* grant_type: ```authorization_code```\n\
    * redirect_uri: ```https://myintegration.ru/auth/complete```\n* code: код из п\
    ункта 5.\n\nПример запроса:\n``` \ncurl -X POST \\\n     https://id.tinkoff.ru/auth/token\
    \ \\\n     -H 'Authorization: Basic ' \\\n     -H 'Content-Type: application/x-www-form-urlencoded'\
    \ \\\n     -d 'grant_type=authorization_code&redirect_uri=https://myintegration.ru/auth/complete&code=c.1aGiAXX3Ni'\n\
    ```\nПример ответа:\n```\n{\n    \"access_token\": \"t.mzucgRIDwalMAQ_at2Y2kmJB6yhNAQlWMNucp3w45xMcKknxWyl_8sWkkp5_3Nq8i_UvddDroJvd3elz-QH5hQ\"\
    ,\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 1791, // Время жизни т\
    окена в секундах\n    \"refresh_token\": \"LShO9uuTkeWqozxO8WP2eGsJpLBQQ-3QBGYUeNzUv4LTtjudU6zPofXbiMwToznuCOLv65tpCJn04fsLvsYH2Q\"\
    \n}\n```\n\n7. После того как вы получили токен, мы рекомендуем вам проверить\
    , что клиент предоставил нужные доступы и что вы правильно передали данные в scope_parameters.\
    \ Для того, чтобы это сделать, вам нужно вызвать метод ```POST https://id.tinkoff.ru/auth/introspect```\
    \ и проверить данные в поле scope в ответе:\n\nФормат запроса:\n \n* Authorization:\
    \ Basic, где username и password соответствуют client-id и паролю из пункта 2.\
    \ [Примеры составления в разных языках](https://gist.github.com/brandonmwest/a2632d0a65088a20c00a)\n\
    * Content-type: ```application/x-www-form-urlencoded```\n* token — тело токена\
    , полученного на предыдущем шаге.\n\nПример запроса:\n``` \ncurl -X POST \\\n\
    \     https://id.tinkoff.ru/auth/introspect \\\n     -H 'Authorization: Basic\
    \ ' \\\n     -H 'Content-Type: application/x-www-form-urlencoded' \\\n     -d\
    \ 'token=t.mzucgRIDwalMAQ_at2Y2kmJB6yhNAQlWMNucp3w45xMcKknxWyl_8sWkkp5_3Nq8i_UvddDroJvd3elz-QH5hQ'\n\
    ```\n\nПример ответа:\n```\n{\n   \"active\":true,\n   \"scope\":[\n      \"device_id\"\
    ,\n      \"opensme/inn/[7743180892]/kpp/[773101001]/payments/draft/create\"\n\
    \      \"opensme\"\n   ],\n   \"client_id\":\"opensme\",\n   \"token_type\":\"\
    access_token\",\n   \"exp\":1585728196,\n   \"iat\":1585684996,\n   \"sub\":\"\
    2f1d967c-8596-4a1d-9bc5-b448a07e15ba\",\n   \"aud\":[\n     \"ibsme\",\n     \"\
    companyInfo\"\n   ],\n   \"iss\":\"https://id.tinkoff.ru/\"\n}\n```\n\nВ ответ\
    е вас интересует поле scope — в нем содержится список доступов, которые предос\
    тавил пользователь. В этом поле вам надо найти нужный для вас доступ. Для кажд\
    ого метода в Tinkoff Business OpenApi в описании вы можете найти шаблон доступ\
    а, который должен присутствовать в поле scope, чтобы метод отработал успешно.\
    \ По токену, который вы получили в предыдущем шаге, можно создавать черновики\
    \ платежных поручений по компании с инн ```7743180892``` и кпп ```773101001```\
    \  (потому что есть доступ ```opensme/inn/[7743180892]/kpp/[773101001]/payments/draft/create```),\
    \ но по этому токену нельзя посмотреть информацию по компании (так как нет дос\
    тупа ```opensme/inn/[7743180892]/kpp/[773101001]/company-info/get```). Проверя\
    йте и наличие доступов и правильность переданных данных.\n\n## SDK\n**SDK** -\
    \ готовые реализации API Tinkoff ID для наиболее распространенных платформ. Ис\
    пользование SDK упрощает разработку и сокращает время на интеграцию ваших моби\
    льных приложений.  \nПодробная информация выложена в соответствующие репозитор\
    ии по ссылкам ниже:\n * [Android SDK](https://github.com/tinkoff-mobile-tech/TinkoffID-Android)\n\
    \ * [iOS SDK](https://github.com/tinkoff-mobile-tech/TinkoffID-iOS) \n \n Для\
    \ ознакомления со стайлгайдами перейдите по [ссылке](https://www.figma.com/file/TsgXOeAqFEePVIosk0W7kP/Tinkoff-ID?node-id=16%3A723).\n\
    # Сценарий Селф-Сервис\n\n## Общие сведения\n\nСелф-сервис в Tinkoff Business\
    \ OpenApi позволяет вам выпускать долгоживущий (до одного года) Access Token в\
    \ личное пользование для своей компании. В данный момент, доступ до выпуска то\
    кена есть только у директоров компаний, у которых подключен продукт \"Счета и\
    \ Платежи\". **Внимание: не передавайте данный токен третьим лицам, так как он\
    и могут получить доступ ко всей финансовой деятельности вашей компании.**\n\n\
    ## Получение токена\n\nЧто нужно для того, чтобы получить токен:\n\n1. Откройт\
    е меню.\n2. Выберите *Интеграции*:\n   ![](https://business.cdn-tinkoff.ru/static/images/opensme/menu.png)\n\
    3. Нажмите на кнопку *Подключить* в блоке \"Интеграция с Тинькофф по API\":\n\
    \   ![](https://business.cdn-tinkoff.ru/static/images/opensme/integrations.png)\n\
    4. Откроется следующий экран:\n   ![](https://business.cdn-tinkoff.ru/static/images/opensme/token-ip-scope-form.png)\n\
    5. Введите IP адреса, с которых вы будете делать запросы в Tinkoff Business OpenApi.\
    \ Для того чтобы ввести более одного ip адреса,введите их через запятую. \n6.\
    \ В выпадающем списке выберите, к чему можно будет получить доступ по выпущенн\
    ому токену:\n   ![](https://business.cdn-tinkoff.ru/static/images/opensme/token-scope-form.png)\n\
    7. Нажмите на кнопку \"Выпустить токен\".\n8. На экране отобразится выпущенный\
    \ токен:\n   ![](https://business.cdn-tinkoff.ru/static/images/opensme/token-revealed.jpg)\n\
    9. В этом окне вы сможете скопировать свой Access Token. **Учтите, что этот то\
    кен будет работать в контексте той компании, которая была выбрана в разделе \"\
    Интеграции\" на момент выпуска токена**.\n\n## Отзыв токена\n\nЕсли вы хотите\
    \ деактивировать токен, вам понадобится:\n\n1. Выбрать в шапке пункт [\"Личный\
    \ Кабинет\"](https://business.tinkoff.ru/account). Откроется такая панель:\n \
    \  ![](https://business.cdn-tinkoff.ru/static/images/opensme/control-panel.png)\n\
    2. В ней нажать на [\"Настройки профиля\"](https://business.tinkoff.ru/account/settings/security/login)\n\
    3. Прокрутить до блока с названием \"Приложения, у которых есть доступ к аккау\
    нту\".  \n   ![](https://business.cdn-tinkoff.ru/static/images/opensme/Token-tab.png)\n\
    4. Выпущенные для селф-сервиса токены будут иметь название \"Tinkoff Business\
    \ OpenApi\". Открыв вкладку с таким токеном, его можно отозвать нажав на кнопк\
    у \"Удалить доступ\".\n# Работа с полученными токенами\n\n## Работа с Access т\
    океном\n\nДля того, чтобы использовать Access Token, добавьте заголовок Authorization\
    \ со значением ```Bearer %token%```.\n\nПример использования:\n```\ncurl -X GET\
    \ \\\n  https://business.tinkoff.ru/openapi/api/v1/company \\\n  -H 'Authorization:\
    \ Bearer t.L4c14_rCVNbXueBPC2dFJ9fNqk9BnQuRGGz2fztHpwlFGLYxWNfTI0u_CZPEd0dMWCt0kA9P6TUgToC2_BRT7g'\
    \ \\\n  -H 'Content-Type: application/json' \\\n```\n\n\n## Работа с Refresh т\
    океном\n\nДля того, чтобы, имея Refresh Token, получить новые Access и Refresh\
    \ токены, нужно вызвать метод ```POST https://id.tinkoff.ru/auth/token```.\n\n\
    Формат запроса: \n\n* Authorization: Basic, где username и password соответств\
    уют client-id, которые были получены после регистрации.  [Примеры составления\
    \ в разных языках](https://gist.github.com/brandonmwest/a2632d0a65088a20c00a)\n\
    * Content-type: ```application/x-www-form-urlencoded```\n* grant_type: ```refresh_token```\n\
    * refresh_token: в это поле передать ваш токен.\n\nПример запроса:\n```\ncurl\
    \ -X POST \\\n  https://id.tinkoff.ru/auth/token \\\n  -H 'Content-Type: application/x-www-form-urlencoded'\
    \ \\\n  -d 'grant_type=refresh_token&refresh_token=LShO9uuTkeWqozxO8WP2eGsJpLBQQ-3QBGYUeNzUv4LTtjudU6zPofXbiMwToznuCOLv65tpCJn04fsLvsYH2Q'\n\
    ```\n\nПример ответа:\n```\n{\n    \"access_token\": \"t.mzucgRIDwalMAQ_at2Y2kmJB6yhNAQlWMNucp3w45xMcKknxWyl_8sWkkp5_3Nq8i_UvddDroJvd3elz-QH5hQ\"\
    ,\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 1791, //Время жизни то\
    кена в секундах\n    \"refresh_token\": \"WvcsjowaPtv1t8r4KDeTyRk89NsSK0lTczBt8CqUSHyx3Xbh7SaWAsGhNIBEHBwqng8l2UZtBFeJCQL0GQrfoG\"\
    \n}\n```\n\n**Внимание**\n\nУбедитесь, что ваши обращения выполняются с актуал\
    ьным Refresh token. \nЕсли при обращении с Refresh token получена ошибка ```invalid_grant```,\
    \ то срок действия токена истек, или он был отозван пользователям. \nПосле пол\
    учения ошибки ```invalid_grant``` важно не производить дальнейшие вызовы обмен\
    а токена, так как данный токен уже инвалидирован. \nДля дальнейшей работы поль\
    зователю нужно повторно пройти авторизацию. \n# Сертификаты\nВ качестве дополн\
    ительной защиты на методах, расположенных на \n[secured-openapi.business.tinkoff.ru](https://secured-openapi.business.tinkoff.ru),\
    \ \nиспользуется [Mutual TLS](https://en.wikipedia.org/wiki/Mutual_authentication).\
    \ Эти методы имеют в описании символ \U0001f512.\nДля использования Mutual TLS\
    \ потребуется выпустить сертификат от Тинькофф. Срок действия сертификата - **1\
    \ год**. \n\n## Выпуск сертификата\n* Для выпуска сертификата потребуется сген\
    ерировать приватный ключ \nи [CSR](https://en.wikipedia.org/wiki/Certificate_signing_request).\
    \ Для этого нужно:\n  * На компьютере иметь установленный [openssl](https://www.openssl.org/)\n\
    \  * Скачать [конфигурацию для генерации ключа](/openapi/downloads/config.cfg)\n\
    \  * Запустить в консоли `openssl req -new -config config.cfg -newkey rsa:2048\
    \ -nodes -keyout private.key -out request.csr`\n  и ввести ответы на соответст\
    вующие вопросы\n```bash\nlocalhost:~$ openssl req -new -config config.cfg -newkey\
    \ rsa:2048 -nodes -keyout private.key -out request.csr\nGenerating a 2048 bit\
    \ RSA private key\n..\n..\nwriting new private key to 'private.key'\nYou are about\
    \ to be asked to enter information that will be incorporated\ninto your certificate\
    \ request.\nWhat you are about to enter is what is called a Distinguished Name\
    \ or a DN.\nThere are quite a few fields but you can leave some blank\nFor some\
    \ fields there will be a default value,\nIf you enter '.', the field will be left\
    \ blank.\nCountry Name (RU) []:RU\nState or Province - субъект федерации, где\
    \ зарегистрирована организация (например, MOSKVA  или KRASNOYARSKIJ KRAJ) []:KRASNOYARSKIJ\
    \ KRAJ\nLocality Name - город, населенный пункт или муниципальное образование\
    \ (например, MOSKVA или KRASNOYARSK) []:MOSKVA\nOrganization Name - cокращенно\
    е наименование организации в соответствии с Выпиской из ЕГРЮЛ []:IP IVANOV IVAN\
    \ IVANOVICH\nOrganization Unit Name - наименование отдела (может отсутствовать\
    ) []:\nСокращенное наименование организации в соответствии с Выпиской из ЕГРЮЛ\
    \ (ФИО для ИП) []:IVANOV IVAN IVANOVICH\nEmail - адрес электронной почты уполн\
    омоченного лица []:ivanov@email.com  \nPlease enter the following 'extra' attributes\n\
    to be sent with your certificate request\nA challenge password []:\n```\n\n\n\
    \   <details>\n      <summary markdown=\"span\">\n        Для ввода ответов на\
    \ вопросы используйте следующие правила транслитерации:\n      </summary>\n  \n\
    \  <sup>\n  \n|А|Б|В|Г|Д|Е|Е|Ж|З|И|Й|К|Л|М|Н|О|\n|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n\
    |A|B|V|G|D|E|E|ZH|Z|I|I|K|L|M|N|O|\n   \n|П|Р|С|Т|У|Ф|Х|Ц|Ч|Ш|Щ|Ы|Ъ|Э|Ю|Я|\n|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n\
    |P|R|S|T|U|F|KH|TS|CH|SH|SHCH|Y|IE|E|IU|IA|   \n   \n</sup>\n   \n</details>\n\
    \n\n---\n\n  * В папке, в которой запускали генерацию, появятся файлы `request.csr`\
    \ и \n  `private.key`. `private.key`<a name=\"secret\"></a> - секрет, с помощь\
    ю которого будут подписываться запросы.\n  `request.csr` потребуется в заявлен\
    ии на выпуск сертификата (далее)\n* Далее требуется заполнить [заявку на выпус\
    к сертификата](/openapi/downloads/Заявка%20на%20SSL%20сертификат.docx)\n  * За\
    полнение должно соответствовать выпущенному `CSR`, сгенерированному шагом выше\
    \n  * В поле `CSR-запрос на сертификат` вставить содержимое файла `request.csr`\
    \ (можно открыть обычным блокнотом)\n  * Заявка должна уместиться на одну стра\
    ницу\n* Cкан распечатанной и подписанной заявки, Word-файл с Заявкой, а также\
    \ CSR-запрос (`request.csr`) нужно отправить \nписьмом на электронную почту openapi@tinkoff.ru.\n\
    Письмо должно прийти с email директора компании, который был указан при регист\
    рации в Тинькофф Бизнес. \nВ течение двух рабочих дней ответным письмом придет\
    \ файл сертификата <a name=\"certificate\"></a>. \nВ случае ошибок в заявке ил\
    и CSR-запросе ответным письмом придет письмо с описанием ошибок.\n\n## Использ\
    ование сертификата \nПолученный сертификат [`open-api-cert.pem`](#certificate)\
    \ дает возможность использовать методы защищенные \n[Mutual TLS](https://en.wikipedia.org/wiki/Mutual_authentication),\
    \ которые расположены на\n[secured-openapi.business.tinkoff.ru](https://secured-openapi.business.tinkoff.ru).\n\
    Чтобы сделать такой запрос Вам понадобится, помимо сертификата, сгенерированны\
    й ранее [секрет](#secret).\n\nСделать запрос можно разными способами. Например\
    :\n* Через curl. Для этого используя [полученный файл](#certificate) и [секрет\
    ](#secret) выполните запрос:\n  `curl --cert open-api-cert.pem --key private.key\
    \ https://secured-openapi.business.tinkoff.ru/...`\n* Через HTTP-клиент. Чтобы\
    \ сделать такой запрос воспользуйтесь документацией используемого клиента. \nН\
    иже приведено несколько примеров:\n  * Java - [Async Http Client](https://asynchttpclient.github.io/async-http-client/ssl.html)\n\
    \  * PHP - Guzzle 6 ([cert](http://docs.guzzlephp.org/en/stable/request-options.html#cert)\
    \ и \n  [ssl-key](http://docs.guzzlephp.org/en/stable/request-options.html#ssl-key))\n\
    \  * Python - [Requests](https://requests.readthedocs.io/en/master/user/advanced/#client-side-certificates)\n\
    \  * JavaScript - пример на [Axios](https://github.com/axios/axios):\n  ```js\n\
    \  const fs = require('fs');\n  const https = require('https');\n  const axios\
    \ = require('axios');\n  // ...\n  const httpsAgent = new https.Agent({\n    \
    \  cert: fs.readFileSync('open-api-cert.pem'),\n      key: fs.readFileSync('private.key')\n\
    \  });\n  // ...\n  const result = await axios.get('https://secured-openapi.business.tinkoff.ru/...',\
    \ { httpsAgent });\n  ```\n# Трейсинг в Tinkoff Business OpenApi\n\nВ ответе к\
    аждого запроса к Tinkoff Business OpenApi будет лежать заголовок ```X-Request-Id```\
    \ — уникальный идентификатор запроса. Для диагностики работы вашего приложения\
    , этот идентификатор с вашей стороны стоит сохранять или логировать.\n# Песочн\
    ица\n\n[Песочница](/openapi/sandbox/docs) предоставляет возможность воспользов\
    аться методами openApi в ознакомительном режиме. \nДействия с песочницей не во\
    здействуют на реальные данные. В данной версии песочницы вам не нужно получать\
    \ токен. \nФункциональность песочницы находится в доработке, поэтому возможны\
    \ достаточно частые изменения ее домена и префиксов\nпутей.\n# Обратная связь\n\
    \nЕсли во время работы с Tinkoff Business OpenApi у вас возникли  вопросы, сме\
    ло задавайте их путем отправки письма на openapi@tinkoff.ru. Если вы хотите пр\
    едложить улучшения, создавайте issue в нашем [гитхаб репозитории](https://github.com/TinkoffCreditSystems/business-openapi).\
    \ Информация по релизам будет в [телеграм канале](https://t.me/TinkoffBusinessOpenApi).\n\
    # Release Notes\n\n## 26 апреля 2021\n### Компании\n#### GET /api/v1/company\n\
    * [Смена юридического адреса Тинькофф Банка](https://www.tinkoff.ru/about/news/19032021-tinkoff-notifies-change-legal-address/).\n\
    \n## 22 апреля 2021\n### Платежи\n#### POST /api/v1/payment/ruble-transfer/pay\n\
    * Метод создания платежа поддерживает налоговые платежи и налоговые платежи за\
    \ третьих лиц.\n\n## 5 апреля 2021\n### Бизнес-карты\n* Добавлены [методы для\
    \ перевыпуска виртуальных карт](#operation/postApiV1CardVirtualReissue):\n  *\
    \ POST /api/v1/card/virtual/reissue\n  * GET  /api/v1/card/virtual/reissue/result\n\
    \n## 2 апреля 2021\n### Счета и выписки\n#### GET /api/v1/bank-statement\n* В\
    \ ответ метода добавлено новое поле `operationId`, которое содержит уникальный\
    \ идентификатор операции\n\n### OpenApi\n* Добавлена [песочница](https://business.tinkoff.ru/openapi/sandbox/docs)\n\
    \n## 25 марта 2021\n### Сценарий Селф-Сервис\n* Перенесли возможность выпуска\
    \ токена для сценария селф-сервис в раздел \"Интеграции\". \n(См. [\"Получение\
    \ токена\"](#section/Scenarij-Self-Servis/Poluchenie-tokena).)\n\n## 18 марта\
    \ 2021\n### OpenApi\n* Добавлена спецификация ошибки при большой нагрузке на с\
    ервис\n\n### Зарплатный проект\n* Добавлены [методы для реестровых выплат сотр\
    удникам](#tag/Zarplatnyj-proekt):\n  * POST /api/v1/salary/payment-registry/submit\n\
    \  * GET  /api/v1/salary/payment-registry/submit/result\n  \n## 15 марта 2021\n\
    ### Счета и выписки\n#### GET /api/v3/bank-accounts\n* Добавлен новый метод дл\
    я получения расчетных счетов. Отличия от старого метода:\n  * Добавлены спец.с\
    чета и счета бизнес-копилки\n#### GET /api/v2/bank-accounts\n* Метод теперь сч\
    итается устаревшим\n\n## 25 февраля 2021\n### SDK\n* Добавлены SDK для партнер\
    ской авторизации \n\n## 19 февраля 2021\n### Самозанятые\n#### POST /api/v1/self-employed/payment-registry/create\n\
    * Добавлен флаг для автоматического удержания налога `taxHolding`\n#### POST /api/v1/self-employed/payment-registry/create\n\
    * Добавлен выбор способа создания платежного реестра `registryCreateType`\n\n\
    ### Зарплатный проект\n#### POST /api/v1/salary/payment-registry/create\n* Доб\
    авлен выбор способа создания платежного реестра `registryCreateType`\n\n### Пл\
    атежи\n#### POST /api/v1/salary/payment-registry/create\n* В запрос добавилось\
    \ опциональное строковое поле `revenueTypeCode`. Оно может принимать значения\
    \ \"1\", \"2\" или \"3\". Подробнее смотри [тут](https://www.audit-it.ru/news/account/1013406.html).\n\
    * В запрос добавилось опциональное числовое поле `collectionAmount` - yдержанн\
    ая сумма в рублях. Актуально только при платежах в пользу физлиц.\n\n## 8 февр\
    аля 2021\n### Платежи\n#### POST /api/v1/payment/create\n* Изменён пример нало\
    гового платежа\n\n## 28 января 2021\n### Платежи\n#### POST /api/v1/payment/sbp/pay\n\
    * Отчество получателя `to.middleName`, содержащееся в запросе, стало опциональ\
    ным.\n\n## 21 января 2021\n### Платежи\n#### POST /api/v1/payment/create\n* В\
    \ тело запроса добавлено необязательное поле: корреспондентский счет получател\
    я `recipientCorrAccountNumber` (В связи с [нововведением от 2021 года](https://roskazna.gov.ru/dokumenty/sistema-kaznacheyskikh-platezhey/kaznacheyskie-scheta/),\
    \ данное поле будет обязательным для налоговых платежей)\n\n### Счета и выписк\
    и\n#### GET /api/v2/bank-accounts\n* Исправлены неточности в документации\n\n\
    ## 18 января 2021\n### Торговый эквайринг\n#### GET /api/v1/tacq/operations/terminal/{terminalKey}\n\
    * Добавлен [метод для получения операций Торгового эквайринга по терминалу](#tag/Torgovyj-ekvajring)\n\
    \  * GET /api/v1/tacq/operations/terminal/{terminalKey}\n\n### Платежи\n#### POST\
    \ /api/v1/payment/sbp/pay\n*  Добавлен [метод для совершения выплаты с рублевы\
    х счетов компании на счета физлиц через\nсистему быстрых платежей](#tag/Platezhi):\n\
    \    * POST /api/v1/payment/sbp/pay\n\n## 12 января 2021\n### Самозанятые\n####\
    \ GET /api/v1/self-employed/payment-registry/receipts/result\n* Добавлен идент\
    ификатор самозанятого в `SelfEmployedReceipt.selfEmployedInfo`\n\n### Специфик\
    ация OpenApi\n* Методы, закрытые [MTLS сертификатом](#section/Sertifikaty), им\
    еют в описании символ \U0001f512\n\n### Счета и выписки\n#### GET /api/v1/bank-statement\n\
    * Исправлено описание и добавлена валидация на поле `operationType`\n\n## 10 д\
    екабря 2020\n### Информация о пользователе\n* Добавлен [метод для получения ин\
    формации об активных дебетовых счетах клиента](#tag/Informaciya-o-polzovatele)\n\
    \  * GET /api/v1/individual/accounts/debit \n\n## 8 декабря 2020\n### Самозаня\
    тые\n#### GET /api/v1/self-employed/payment-registry/\n* Добавлены айди самоза\
    нятого в `selfEmployedInfo`\n\n### Зарплатный проект\n#### GET /api/v1/salary/payment-registry/\n\
    * Добавлены айди сотрудника в `employeeInfo`\n\n### Счета и выписки\n#### GET\
    \ /api/v2/bank-accounts\n* Добавлен новый метод для получения расчетных счетов\
    . Отличия от старого метода:\n  * Информация о транзитном счете возвращается в\
    месте с основным счетом\n  * Возвращается информация о наименовании и типе сче\
    та, бике банка получателя\n\n## 3 декабря 2020\n### Партнерская доставка\n* До\
    бавлен [метод, позволяющий загрузить документ в задание на партнерскую доставк\
    у](#tag/Partnerskaya-dostavka)\n  * POST /api/v1/delivery/documents\n* Добавле\
    н [метод, позволяющий выгрузить документ по его идентификатору](#tag/Partnerskaya-dostavka)\n\
    \  * GET /api/v1/delivery/documents/{id}\n\n### Информация о пользователе\nДоб\
    авлен [метод для получения информации о статусе самозанятого](#tag/Informaciya-o-polzovatele):\n\
    * GET /api/v1/individual/self-employed/status\n\n## 26 ноября 2020\n### Специф\
    икация OpenApi\n* Скорректирована спецификация ошибки 400: ошибка отдается в в\
    иде json\n* Исправлен формат вывода ошибок перечисления\n\n## 16 ноября 2020\n\
    ### Бизнес-карты \n#### GET /api/v1/card\n* Метод теперь доступен без сертифик\
    ата mTLS\n* Убрали поле expiryDate из ответа метода\n\n#### GET /api/v1/card/{ucid}\n\
    \n* Метод теперь доступен без сертификата mTLS\n* Убрали поле expiryDate из от\
    вета метода\n\n### Спецификация OpenApi\n* Обновлена спецификация ошибки 403:\
    \ добавлена информация о причинах ошибки\n\n## 9 ноября 2020\n### Выставление\
    \ счета\n#### POST api/v1/invoice/send\n* В запрос добавлено опциональное поле\
    \ `accountNumber`. Теперь отправитель счета может сам выбирать счет на который\
    \n он хочет получить оплату.\n* Поля плательщика `payer.inn`, `payer.name` ста\
    ли опциональными, как и само поле `payer`, чтобы \nпользователь мог выставлять\
    \ счета физическим лицам не указывая лишних данных, если в них нет необходимос\
    ти.\n* Добавлено новое опциональное поле `kpp` для плательщика. Пользователи п\
    о желанию смогут передать дополнительную \nинформацию о плательщике в счет.\n\n\
    ### Информация о пользователе\n* Добавлено описание [метода получения учётных\
    \ данных](#section/Poluchenie-uchyotnyh-dannyh)\n\n### Партнерская доставка\n\
    * Все методы [партнерской доставки](#tag/Partnerskaya-dostavka) закрыты mTLS\n\
    \n### Бизнес-карты\n#### GET /api/v1/card\n* Добавлен новый метод для получени\
    я данных о картах компании\n* В запросе есть опциональный строковый параметр `agreementNumber`.\
    \ Он передается, если нужен список с данными карт компании, привязанных к зада\
    нному расчетному счету.\n* В запросе есть опциональный числовой параметр `offset`\
    \ - количество карт, которые необходимо пропустить. По умолчанию offset = 0.\n\
    * В запросе есть опциональный числовой параметр `limit` - количество карт, кот\
    орые необходимо вывести. По умолчанию limit = 1000. Значение для этого парамет\
    ра не может быть больше 1000.\n#### GET /api/v1/card/{ucid}\n* Добавлен метод\
    \ для получения данных об одной карте по UCID\n\n## 2 ноября 2020\n### Специфи\
    кация OpenApi\n#### GET /openapi/docs/openapi.yaml\n* Скорректирован формат за\
    гружаемого файла спецификации с .json на .yaml\n\n### Бизнес-карты\n* Изменено\
    \ название раздела \"Корпоративные карты\" на \"Бизнес-карты\"\n\n### Платежи\n\
    #### POST /api/v1/payment/create\n* Добавлена валидация номера документа при с\
    оздании платежей. Строковое поле должно содержать не более 6 цифр.\n\n### Инфо\
    рмация о пользователе\nДобавлены [методы для получения информации о пользовате\
    ле](#tag/Informaciya-o-polzovatele):\n  * GET /api/v1/individual/documents/passport\n\
    \  * GET /api/v1/individual/documents/driver-licenses\n  * GET /api/v1/individual/documents/inn\n\
    \  * GET /api/v1/individual/documents/snils\n  * GET /api/v1/individual/addresses\n\
    \  * GET /api/v1/individual/identification/status\n  \n  \n### Партнерская дос\
    тавка\nДобавлены [методы, предоставлющие функционал доставки для партнеров](#tag/Partnerskaya-dostavka)\n\
    \  * GET   /api/v1/delivery/tasks/{id}\n  * PUT   /api/v1/delivery/tasks/{id}\n\
    \  * POST  /api/v1/delivery/tasks\n  * POST  /api/v1/delivery/tasks/{id}/cancel\n\
    \  * POST  /api/v1/delivery/meetings\n  * POST  /api/v1/delivery/intervals\n\n\
    ### Сертификаты\n* Указано правило транслитерации\n\n## 13 октября 2020\n### С\
    чета и выписки\n#### GET /api/v1/bank-statement\n* Поправлена ошибка, возникаю\
    щая у некоторых клиентов при запросе больших выписок. \n\n## 5 октября 2020\n\
    ### Платежи\n#### POST /api/v1/payment/create\n* Поле `inn`, содержащееся в за\
    просе, теперь может иметь значение \"0\". Такое допустимо, если платеж выполня\
    ется в пользу физического лица и \nего ИНН неизвестен.\n* В документации обнов\
    лены описания полей `inn` и `kpp`, содержащиеся в запросах.\n\n## 24 сентября\
    \ 2020\n### Платежи\n#### POST /api/v1/payment/ruble-transfer/pay\n* В докумен\
    тацию добавлено описание лимитов, установленных по умолчанию, на выполнение пл\
    атежей:\n    * максимальная сумма одного платежа - 100000 рублей\n    * максим\
    альная сумма платеже в день - 100000 рублей\n    * максимальная сумма платежей\
    \ в месяц - 1000000 рублей\n    * максимальное количество платежей в день на о\
    дного контрагента - 3\n    \n### Селф-сервис\n* Добавлена возможность выпускат\
    ь токены с определенными скопами. Для подробностей смотри: Сценарий Селф-Серви\
    с, Получение токена, n.6\n\n### Самозанятые\nДобавлены [методы для реестровых\
    \ выплат самозанятым](#tag/Samozanyatye):\n  * POST /api/v1/self-employed/recipients/create\n\
    \  * GET /api/v1/self-employed/recipients/create/result\n  * POST /api/v1/self-employed/recipients/list\n\
    \  * POST /api/v1/self-employed/payment-registry/create\n  * GET /api/v1/self-employed/payment-registry/create/result\n\
    \  * GET /api/v1/self-employed/payment-registry/{paymentRegistryId}\n  * POST\
    \ /api/v1/self-employed/payment-registry/submit\n  * GET /api/v1/self-employed/payment-registry/submit/result\n\
    \  * POST /api/v1/self-employed/payment-registry/fiscalize\n  * GET /api/v1/self-employed/payment-registry/fiscalize/result\n\
    \  * POST /api/v1/self-employed/payment-registry/receipts\n  * GET /api/v1/self-employed/payment-registry/receipts/result\n\
    \n## 14 сентября 2020\n\n### Счета и выписки\n#### GET /api/v1/bank-statement\n\
    * Поле `recipientInn`, содержащееся в ответе, стало опциональным. Оно может от\
    сутствовать, например, в случае, если идет расчет с контрагентами, так как дан\
    ное\nполе не является обязательным для совершения перевода.\n* Поле `payerAccount`,\
    \ содержащееся в ответе, стало опциональным. Оно может отсутствовать, например\
    , в случае, если, плательщиком является кредитная организация\nили филиал кред\
    итной организации.\n\n### Платежи\n#### POST /api/v1/payment/create\n* В запро\
    с добавилось опциональное строковое поле `revenueTypeCode`. Оно может принимат\
    ь значения \"1\", \"2\" или \"3\". Подробнее смотри [тут](https://www.audit-it.ru/news/account/1013406.html).\n\
    * В запрос добавилось опциональное числовое поле `collectionAmount` - yдержанн\
    ая сумма в рублях. Актуально только при платежах в пользу физлиц.\n\n### Cерти\
    фикаты\n* Выпущенные с данного момента сертификаты предоставляются в формате `pem`,\
    \ что избавляет их владельцев от необходимости конвертации сертификатов перед\
    \ использованием."
  title: Tinkoff Business OpenApi
  version: "1.0"
  x-logo:
    backgroundColor: '#616871'
    url: https://business.cdn-tinkoff.ru/static/projects/openapi/logo.png
servers:
- url: https://secured-openapi.business.tinkoff.ru
tags:
- description: Методы для перевода денег сотрудникам и выпуска зарплатных карт
  name: Salary
- description: Методы для перевода денег самозанятым и выпуска им карт
  name: SelfEmployed
- description: Метод для выставления счетов контрагентам
  name: Invoice
- description: Методы для совершения платежей, создания черновиков, платежных поручений
    и платежей через СБП
  name: Payments
- description: Метод для получения данных о компании и ее реквизитов
  name: Companies
- description: Методы для получения информации по счетам
  name: Excerpts
- description: Метод для получения подробной информации по операциям в терминале
  name: TradeAcquiring
- description: Методы для получения данных по картам компании и установки по ним лимитов
  name: BusinessCards
- description: "Методы доступны только в партнерском сценарии. Данные методы прина\
    длежат API Tinkoff-ID и нужны для получения информации о физических лицах.\n\n\
    \n## Получение учётных данных\n\nНеобходимо согласие пользователя на предостав\
    ление следующих данных: \"Полное имя\", \"E-mail\", \"Номер телефона\". \nПере\
    чень scopes у токена для получения учетных данных:\n * profile\n * phone \n *\
    \ email\n\n\n### Входные параметры:\n\n * заголовок `Authorization = Bearer \\\
    {access_token}`\n\n * поля формы `application/x-www-form-urlencoded`:\n\n\t *\
    \ `client_id` - id клиента\n\n\t * `client_secret` - пароль клиента\n\n\n### Ф\
    ормат ответа\n\n\nОтвет метода представлен в формате `application/json`. Поля\
    \ json документа (зависит от scope, не фиксированный список):\n\n * `sub` - ид\
    ентификатор авторизированного пользователя\n\n * `name` - фамилия, имя\n\n * `gender`\
    \ -  пол\n\n * `birthdate` -  дата рождения в формате **yyyy-mm-dd**\n\n * `family_name`\
    \ - фамилия\n\n * `given_name` - имя\n\n * `middle_name` - отчество\n\n * `phone_number`\
    \ - телефон в формате **+(международный идентификатор страны)(номер абонента)**\n\
    \n * `email` - почтовый адрес\n\n\n### Пример запроса\n\n```java\nPOST https://id.tinkoff.ru/userinfo/userinfo\n\
    ```\n\n\n### Пример ответа \n\n```java\n{\n \"email\": \"tinkoff@mail.ru\",\n\
    \ \"family_name\": \"Иванов\",\n \"birthdate\": \"2000-01-01\",\n \"sub\": \"\
    923d4812-148c-45v4-a56b-eed15cdd2857\",\n \"name\": \"Иванов Олег\",\n \"phone_number\"\
    : \"+79998887766\",\n \"middle_name\": \"Юрьевич\",\n \"given_name\": \"Олег\"\
    ,\n}\n```\n            "
  name: UserInfo
- description: 'Методы доступны только в сценарии селф-сервис. Они нужны, чтобы чтобы
    создавать задания представителю Тинькофф: удостоверить личность, сделать фотографии
    документов, провести опрос, доставить и активировать продукты. Для подключения
    к линии доставки Tinkoff напишите на почту openapi@tinkoff.ru'
  name: PartnerDelivery
- description: Методы доступны только в сценарии селф-сервис. Они помогают получить
    информацию о спецпредложениях, доступных клиенту.
  name: SpecialOffersAndCashback
paths:
  /api/v1/bank-accounts:
    get:
      deprecated: true
      description: 'Необходимо согласие пользователя на доступ к: "Информации о счетах
        компании". В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/bank-accounts/get,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.'
      operationId: getApiV1Bank-accounts
      responses:
        "200":
          content:
            application/json:
              examples:
                Расчетные счета:
                  value:
                  - accountNumber: "40802678901234567890"
                    balance:
                      authorized: 0
                      otb: 45089
                      pendingPayments: 0
                      pendingRequisitions: 0
                    currency: "643"
              schema:
                items:
                  $ref: '#/components/schemas/AccountInfo'
                type: array
          description: Расчетные счета
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить счета
      tags:
      - Excerpts
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/bank-statement:
    get:
      description: 'Необходимо согласие пользователя на: "Доступ к информации об операциях
        компании". В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/bank-statements/get,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента. Запросы выписок с количеством
        операций более 50 000 на данный момент не поддерживаются и будут возвращать
        ошибку.'
      operationId: getApiV1Bank-statement
      parameters:
      - description: Номер счета клиента
        example: 40702810410000000214
        explode: true
        in: query
        name: accountNumber
        required: true
        schema:
          type: string
        style: form
      - description: Дата начала периода. Будет приравнен значению (дата конца - 1
          месяц), если параметр не передать.
        example: 2015-12-12
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Дата конца периода. Будет приравнен текущей дате, если параметр
          не передать.
        example: 2015-12-12
        explode: true
        in: query
        name: till
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                accountNumber: "99998888777766665555"
                income: 500
                operation:
                - amount: 500
                  chargeDate: 2015-09-03
                  creatorStatus: ""
                  date: 2015-04-01
                  drawDate: 2015-05-01
                  executionOrder: "5"
                  id: "1234567890123456789"
                  kbk: "44445555666677778888"
                  oktmo: "44445555"
                  operationId: 12345_89765
                  operationType: "01"
                  payerAccount: "99998888777766665555"
                  payerBank: банк 'Лидеров'
                  payerBic: "76543277778"
                  payerCorrAccount: "40244447777333300000"
                  payerInn: "987654321987"
                  payerName: Иванов Иван Иванович
                  paymentPurpose: материальная помощь
                  paymentType: ""
                  recipient: Петров Петр Петрович
                  recipientAccount: "77774444222277772222"
                  recipientBank: банк 'Чемпионов'
                  recipientBic: "12345678901"
                  recipientCorrAccount: "40299998888777700000"
                  recipientInn: "765432198765"
                  taxDocDate: "0"
                  taxDocNumber: "0"
                  taxEvidence: ТП
                  taxPeriod: ГД.00.2019
                  taxType: taxType
                  uin: "0"
                outcome: 500
                saldoIn: 500
                saldoOut: 500
              schema:
                $ref: '#/components/schemas/BankStatement'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить выписку по счету клиента за определенный период
      tags:
      - Excerpts
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/card:
    get:
      description: 'Необходимо согласие пользователя на: "Получение информации о картах
        компании". В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/card/get,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.'
      operationId: getApiV1Card
      parameters:
      - description: Номер расчетного счета, к которому привязана карта
        example: 40802810000000144655
        explode: true
        in: query
        name: accountNumber
        required: false
        schema:
          type: string
        style: form
      - description: Количество карт, которые необходимо пропустить. По умолчанию
          offset = 0
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Количество карт, которые необходимо вывести. По умолчанию limit
          = 1000
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                cards:
                - accountNumber: "40802810000000144655"
                  cardBin: "553420"
                  cardLastFourDigits: "2781"
                  embossedName: IVAN IVANOV
                  isActive: true
                  status: NORM
                  ucid: 1074372738
                limit: 1
                offset: 0
                totalNumber: 2
              schema:
                $ref: '#/components/schemas/CardInfoSeqResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить данные по картам компании
      tags:
      - BusinessCards
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/card/virtual/reissue:
    post:
      description: 'Необходимо согласие пользователя на: "Перевыпуск виртуальных карт
        компании". В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/card/virtual/reissue,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.'
      operationId: postApiV1CardVirtualReissue
      requestBody:
        content:
          application/json:
            example:
              ucid: 1074372738
            schema:
              $ref: '#/components/schemas/ReissueVirtualCardRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                correlationId: 24166fc5-ae8a-412a-8eb0-2e86d3c8dc73
              schema:
                $ref: '#/components/schemas/ReissueVirtualCardResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Отправить заявку на перевыпуск виртуальной карты
      tags:
      - BusinessCards
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/card/virtual/reissue/result:
    get:
      description: 'Необходимо согласие пользователя на: "Перевыпуск виртуальных карт
        компании". В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/card/virtual/reissue,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.'
      operationId: getApiV1CardVirtualReissueResult
      parameters:
      - description: Идентификатор заявки на перевыпуск виртуальной карты
        example: 24166fc5-ae8a-412a-8eb0-2e86d3c8dc73
        explode: true
        in: query
        name: correlationId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Заявка была исполнена, карта перевыпущена:
                  value:
                    info:
                      cardBin: "553420"
                      cardLastFourDigits: "2781"
                      newUcid: 1095637483
                      oldUcid: 1074372738
                    status: READY
                Заявка находится в работе:
                  value:
                    status: IN_PROGRESS
                Произошла ошибка при обработке заявки:
                  value:
                    status: ERROR
              schema:
                $ref: '#/components/schemas/ReissueVirtualCardResultResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Получить статус заявки на перевыпуск виртуальной карты
      tags:
      - BusinessCards
      x-accepts: application/json
  /api/v1/card/{ucid}:
    get:
      description: 'Необходимо согласие пользователя на: "Получение информации о картах
        компании". В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/card/get,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.'
      operationId: getApiV1CardUcid
      parameters:
      - description: Уникальный идентификатор карты
        example: 1074372738
        explode: false
        in: path
        name: ucid
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accountNumber: "40802810000000144655"
                cardBin: "553420"
                cardLastFourDigits: "2781"
                embossedName: IVAN IVANOV
                isActive: true
                status: NORM
                ucid: 1074372738
              schema:
                $ref: '#/components/schemas/CardInfoResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить данные по одной карте компании
      tags:
      - BusinessCards
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/card/{ucid}/cash-limit:
    post:
      description: 'Необходимо согласие пользователя на: "Изменение лимитов по всем
        картам компании". В поле scope у токена должен присутствовать доступ вида
        opensme/inn/[{inn}]/kpp/[{kpp}]/card/limit/set, где {inn} — ИНН клиента, а
        {kpp} — КПП клиента. '
      operationId: postApiV1CardUcidCash-limit
      parameters:
      - description: Уникальный идентификатор карты
        example: 1074372738
        explode: false
        in: path
        name: ucid
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              limitPeriod: DAY
              limitValue: 5000
            schema:
              $ref: '#/components/schemas/SetLimitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema:
                $ref: '#/components/schemas/Empty'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Установить лимит на снятия наличных по карте
      tags:
      - BusinessCards
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/card/{ucid}/limits:
    get:
      description: 'Необходимо согласие пользователя на: "Получение информации о лимитах
        и остатках по всем картам компании". В поле scope у токена должен присутствовать
        доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/card/limit/get, где {inn} — ИНН
        клиента, а {kpp} — КПП клиента. '
      operationId: getApiV1CardUcidLimits
      parameters:
      - description: Уникальный идентификатор карты
        example: 1074372738
        explode: false
        in: path
        name: ucid
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cashLimit:
                  limitPeriod: DAY
                  limitRemain: 3000
                  limitValue: 5000
                spendLimit:
                  limitPeriod: IRREGULAR
                  limitRemain: 7000
                  limitValue: 9001
                ucid: 1074372738
              schema:
                $ref: '#/components/schemas/CardLimitsResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Получить установленные лимиты по карте, доступный карточный остаток
      tags:
      - BusinessCards
      x-accepts: application/json
  /api/v1/card/{ucid}/spend-limit:
    post:
      description: 'Необходимо согласие пользователя на: "Изменение лимитов по всем
        картам компании". В поле scope у токена должен присутствовать доступ вида
        opensme/inn/[{inn}]/kpp/[{kpp}]/card/limit/set, где {inn} — ИНН клиента, а
        {kpp} — КПП клиента. '
      operationId: postApiV1CardUcidSpend-limit
      parameters:
      - description: Уникальный идентификатор карты
        example: 1074372738
        explode: false
        in: path
        name: ucid
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              limitPeriod: IRREGULAR
              limitValue: 9001
            schema:
              $ref: '#/components/schemas/SetLimitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema:
                $ref: '#/components/schemas/Empty'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Установить расходный лимит по карте
      tags:
      - BusinessCards
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/company:
    get:
      description: 'Необходимо согласие пользователя на: "Доступ к просмотру информации
        по компании". В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/company-info/get,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.'
      operationId: getApiV1Company
      responses:
        "200":
          content:
            application/json:
              example:
                bank:
                  bankAddress: г. Москва, ул. Правобережная 8
                  bankBic: "68590468905486"
                  bankInn: "1234567890"
                  bankName: Воскресенье
                  corrAccount: "85452134134134"
                city: Москва
                name: ООО "Рога и Копыта"
                registrationDate: 2019-01-01
                requisites:
                  address: г. Москва
                  fullName: Общество с ограниченной ответственностью "Рога и Копыта"
                  inn: "1234567890"
                  kpp: "123456789"
                  ogrn: "5183493905840938503"
              schema:
                $ref: '#/components/schemas/CompanyInfoResponse'
          description: Информация о компании
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить информацию по компании
      tags:
      - Companies
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/delivery/documents:
    post:
      description: |2

        Метод позволяет загрузить документ и его метаданные, привязать документ к заданию.
        Необходимо согласие пользователя на: "Загрузку документа к заданию".
        В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/delivery/documents/create,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.
      operationId: postApiV1DeliveryDocuments
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadTaskFileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: f17123gGSAG23
              schema:
                $ref: '#/components/schemas/UploadTaskFileResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Загрузить документ к заданию
      tags:
      - PartnerDelivery
      x-contentType: multipart/form-data
      x-accepts: application/json
  /api/v1/delivery/documents/{id}:
    get:
      description: |2

        Метод позволяет выгрузить документ по его id.
        Необходимо согласие пользователя на: "Получение документа".
        В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/delivery/documents/create,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.
      operationId: getApiV1DeliveryDocumentsId
      parameters:
      - description: Идентификатор документа
        example: f123
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Выгрузить документ по id
      tags:
      - PartnerDelivery
      x-accepts: application/json
  /api/v1/delivery/meetings:
    post:
      description: |2

        Метод позволяет подтвердить временной интервал из списка, полученного
        в методе получения интервалов, и назначить на него встречу для заданий.
        Необходимо согласие пользователя на: "Создание встречи".
        В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/delivery/tasks/create,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.
      operationId: DeliveryCreateMeeting
      requestBody:
        content:
          application/json:
            example:
              appointmentId: ffee2bcb49f6
              commentForAgent: Test comment
              intervalEndTime: 2020-11-23T10:00
              intervalStartTime: 2020-11-23T10:00
            schema:
              $ref: '#/components/schemas/CreateMeetingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                meetingId: ffee2bcb49f6
              schema:
                $ref: '#/components/schemas/CreateMeetingResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Назначить встречу
      tags:
      - PartnerDelivery
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/delivery/meetings/intervals:
    post:
      description: |2

        Метод позволяет получить доступные временные интервалы для назначения встреч.
        Временной интервал - промежуток времени, в который может быть проведена встреча.
        Необходимо согласие пользователя на: "Получение временных интервалов для назначения встречи".
        В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/delivery/tasks/create,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.
      operationId: DeliveryGetIntervals
      requestBody:
        content:
          application/json:
            example:
              address:
                area: Москва
                building: "3"
                city: Москва
                construction: "2"
                country: Россия
                flat: "12"
                fullAddress: г. Москва, 3-я улица Строителей, д.25, кв.12
                house: "12"
                region: Москва
                settlement: ""
                street: 3-я улица Строителей
                zipCode: "1234"
              taskIds:
              - ffee2bcb49f6
            schema:
              $ref: '#/components/schemas/GetIntervalsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                appointmentId: ffee2bcb49f6
                intervals:
                - endInterval: 2020-11-23T10:00
                  startInterval: 2020-11-23T10:00
                timeOffset: +03:00
              schema:
                $ref: '#/components/schemas/GetIntervalsResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Получить доступные временные интервалы для назначения встречи
      tags:
      - PartnerDelivery
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/delivery/tasks:
    post:
      description: |2-

        Метод создает задание и возвращает в ответ его id для возможности дальнейшего взаимодействия.
        Необходимо согласие пользователя на: "Создание задания на доставку".
        В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/delivery/tasks/create,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.
      operationId: DeliveryCreateTask
      requestBody:
        content:
          application/json:
            example:
              commentForAgent: Проверить паспорт
              contacts:
              - birthDate: 1990-05-05
                documents:
                - divisionName: УВД Раменского района
                  issueDate: 1990-05-05
                  number: "123467"
                  series: "3456"
                  type: PASSPORT
                firstName: Иван
                id: ffee2bcb49f6
                lastName: Иванов
                middleName: Иванович
                phones:
                - number: +79546523687
                  type: MOBILE
                role: Риэлтор
              template: PartnerDelivery
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: ffee2bcb49f6
              schema:
                $ref: '#/components/schemas/CreateTaskResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Создать задание на доставку
      tags:
      - PartnerDelivery
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/delivery/tasks/{id}:
    get:
      description: |2

        Метод возвращает информацию о текущем состоянии задания.
        Необходимо согласие пользователя на: "Получение текущего состояния задания на доставку".
        В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/delivery/tasks/create,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.
      operationId: DeliveryGetTask
      parameters:
      - description: Идентификатор задания
        example: ffee2bcb49f6
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                documents:
                - id: ffee2bcb49f6
                  type: Договор аренды
                id: ffee2bcb49f6
                meetResult: Успешная встреча
                resolution: Документы подписаны
                status: New
                subResolution: Подписан договор аренды
                template: Partner Delivery
              schema:
                $ref: '#/components/schemas/DeliveryTask'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Получить информацию по заданию на доставку
      tags:
      - PartnerDelivery
      x-accepts: application/json
    put:
      description: "\nМетод позволяет обновить уже созданное задание по его id. \n\
        В ответ возвращается ошибка или пустой объект в случае успешной обработки\
        \ вызова.\nНеобходимо согласие пользователя на: \"Обновление задания на до\
        ставку\".\nВ поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/delivery/tasks/update,\n\
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n"
      operationId: DeliveryUpdateTask
      parameters:
      - description: Идентификатор задания
        example: ffee2bcb49f6
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              commentForAgent: Проверить паспорт
              contacts:
              - birthDate: 1990-05-05
                documents:
                - divisionName: УВД Раменского района
                  issueDate: 1990-05-05
                  number: "123467"
                  series: "3456"
                  type: PASSPORT
                firstName: Иван
                id: ffee2bcb49f6
                lastName: Иванов
                middleName: Иванович
                phones:
                - number: +79546523687
                  type: MOBILE
                role: Риэлтор
              template: PartnerDelivery
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Обновить задание на доставку
      tags:
      - PartnerDelivery
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/delivery/tasks/{id}/cancel:
    post:
      description: "\nМетод позволяет отменить задание. После отмены дальнейшая ра\
        бота по заданию производиться не будет. \nНеобходимо согласие пользователя\
        \ на: \"Отмену задания на доставку\".\nВ поле scope у токена должен присут\
        ствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/delivery/tasks/create,\n\
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n"
      operationId: DeliveryCancelTask
      parameters:
      - description: Идентификатор задания
        example: ffee2bcb49f6
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              reason: Отказ клиента
            schema:
              $ref: '#/components/schemas/CancelTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Отменить задание на доставку
      tags:
      - PartnerDelivery
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/individual/accounts/debit:
    get:
      description: |2

        Необходимо согласие пользователя на получение реквизитов дебетовых счетов.
        В поле scope у токена должен присутствовать доступ вида `opensme/individual/accounts/debit/get`
      operationId: getApiV1IndividualAccountsDebit
      responses:
        "200":
          content:
            application/json:
              example:
                accounts:
                - accountNumber: "40802123456789012345"
                  bank:
                    bik: 4.4525974E7
                    corAccount: "30101810145250000974"
                    name: АО "ТИНЬКОФФ БАНК"
                  name: Иванов Иван Иванович
              schema:
                $ref: '#/components/schemas/DebitAccountsResponse'
          description: Активные дебетовые счета
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получение информации об активных дебетовых счетах клиента
      tags:
      - UserInfo
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/individual/addresses:
    get:
      description: |2

        Необходимо согласие пользователя на получение информации об адресах.
        В поле scope у токена должен присутствовать доступ вида `opensme/individual/addresses/get`
      operationId: getApiV1IndividualAddresses
      responses:
        "200":
          content:
            application/json:
              example:
                addresses:
                - address: 150001, РОССИЯ, ЯРОСЛАВСКАЯ ОБЛ, Г ЯРОСЛАВЛЬ, УЛ ПРАВДЫ,
                    д. 120, кв. 100
                  addressType: REGISTRATION_ADDRESS
                  apartment: "100"
                  city: Г ЯРОСЛАВЛЬ
                  claddrCode: "1200000600010530123"
                  country: РОССИЯ
                  fiasCode: 567845f8-72vb-45f3-ad16-bd4d12e06162
                  house: "120"
                  latitude: 57.1234
                  longitude: 39.5678
                  primary: false
                  region: ЯРОСЛАВСКАЯ ОБЛ
                  street: УЛ ПРАВДЫ
                  zipCode: "150001"
              schema:
                $ref: '#/components/schemas/AddressesResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получение адресов
      tags:
      - UserInfo
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/individual/documents/driver-licenses:
    get:
      description: |2

        Необходимо согласие пользователя на получение информации о водительских удостоверениях.
        В поле scope у токена должен присутствовать доступ вида `opensme/individual/driver-licenses/get`
      operationId: getApiV1IndividualDocumentsDriver-licenses
      responses:
        "200":
          content:
            application/json:
              example:
                licenses:
                - docNumber: "1122334455"
                  issueDate: 2020-10-01
              schema:
                $ref: '#/components/schemas/DriverLicensesResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получение водительских удостоверений
      tags:
      - UserInfo
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/individual/documents/inn:
    get:
      description: |2

        Необходимо согласие пользователя на получение информации об ИНН.
        В поле scope у токена должен присутствовать доступ вида `opensme/individual/inn/get`
      operationId: getApiV1IndividualDocumentsInn
      responses:
        "200":
          content:
            application/json:
              example:
                inn: "123456789876"
              schema:
                $ref: '#/components/schemas/InnResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получение ИНН
      tags:
      - UserInfo
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/individual/documents/passport:
    get:
      description: |2

        Необходимо согласие пользователя на получение информации о паспортных данных.
        В поле scope у токена должен присутствовать доступ вида `opensme/individual/passport/get`
      operationId: getApiV1IndividualDocumentsPassport
      responses:
        "200":
          content:
            application/json:
              example:
                birthDate: 2020-09-01
                birthPlace: Г. МОСКВА
                citizenship: РФ
                issueDate: 2020-09-01
                maritalStatus: Женат/замужем
                marriageDate: 2020-09-01
                numberOfChildren: 0
                resident: true
                serialNumber: "1234567890"
                unitCode: 123-456
                unitName: УМВД РОССИИ ПО Г. МОСКВЕ
                validTo: 2020-09-01
              schema:
                $ref: '#/components/schemas/PassportResponse'
          description: Паспорт гражданина РФ
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получение паспортных данных
      tags:
      - UserInfo
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/individual/documents/snils:
    get:
      description: |2

        Необходимо согласие пользователя на получение информации о СНИЛС.
        В поле scope у токена должен присутствовать доступ вида `opensme/individual/snils/get`
      operationId: getApiV1IndividualDocumentsSnils
      responses:
        "200":
          content:
            application/json:
              example:
                snils: "12345678901"
              schema:
                $ref: '#/components/schemas/SnilsResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получение СНИЛС
      tags:
      - UserInfo
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/individual/identification/status:
    get:
      description: |2

        Необходимо согласие пользователя на получение информации об идентификации.
        В поле scope у токена должен присутствовать доступ вида `opensme/individual/identification/status/get`
      operationId: getApiV1IndividualIdentificationStatus
      responses:
        "200":
          content:
            application/json:
              example:
                isIdentified: true
              schema:
                $ref: '#/components/schemas/IdentificationStatusResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получение информации об идентификации пользователя
      tags:
      - UserInfo
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/individual/self-employed/status:
    get:
      description: |2

        Необходимо согласие пользователя на получение информации о его статусе как самозанятого.
        В поле scope у токена должен присутствовать доступ вида `opensme/individual/self-employed/status/get`
      operationId: getApiV1IndividualSelf-employedStatus
      responses:
        "200":
          content:
            application/json:
              example:
                isSelfEmployed: true
              schema:
                $ref: '#/components/schemas/SelfEmployedStatusResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получение информации о статусе самозанятого
      tags:
      - UserInfo
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/invoice/send:
    post:
      description: 'Необходимо согласие пользователя на: "Доступ к созданию и отправке
        счетов на оплату контрагенту". В поле scope у токена должен присутствовать
        доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/invoice/submit, где {inn} — ИНН
        клиента, а {kpp} — КПП клиента.'
      operationId: postApiV1InvoiceSend
      requestBody:
        content:
          application/json:
            example:
              accountNumber: "40802123456789012345"
              contacts:
              - email: example@mail.com
              dueDate: 2020-08-22
              invoiceDate: 2020-07-23
              invoiceNumber: "12345"
              items:
              - amount: 10
                name: Рога
                price: 10
                unit: Шт
                vat: None
              - amount: 2
                name: Копыта
                price: 100
                unit: Шт
                vat: "20"
              payer:
                inn: "730990470834"
                kpp: "123456789"
                name: ООО Рога и Копыта
            schema:
              $ref: '#/components/schemas/CreateAndSendInvoiceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                pdfUrl: https://example.com/qwetq
              schema:
                $ref: '#/components/schemas/CreateAndSendInvoiceResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Выставление счета
      tags:
      - Invoice
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/loyalty/clients/cashback/balance:
    post:
      deprecated: true
      operationId: postApiV1LoyaltyClientsCashbackBalance
      parameters:
      - description: Если передается 'true', то будут использоваться тестовые данные.
          Иначе продовые.
        example: true
        explode: true
        in: query
        name: test
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              phoneNumber: "79990001122"
            schema:
              $ref: '#/components/schemas/CashbackBalanceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                allTimeCashback: 15530.99
                balance: 320.5
                monthCashback: 530.79
              schema:
                $ref: '#/components/schemas/CashbackBalanceResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить баланс клиента и информацию по кэшбэку
      tags:
      - SpecialOffersAndCashback
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/loyalty/clients/cashback/history:
    post:
      deprecated: true
      operationId: postApiV1LoyaltyClientsCashbackHistory
      parameters:
      - description: Если передается 'true', то будут использоваться тестовые данные.
          Иначе продовые.
        example: true
        explode: true
        in: query
        name: test
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              limit: 5
              offset: 0
              phoneNumber: "79990001122"
            schema:
              $ref: '#/components/schemas/CashbackHistoryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - receipt:
                    date: 2021-02-03T00:00:00.001+03:00
                    qrCodeAsString: t=20210115T1712&s=316.00&fn=9287440300782352&i=12747&fp=3093752358&n=1
                  status: PENDING
                - receipt:
                    date: 2021-03-03T00:00:00.001+03:00
                    qrCodeAsString: t=20210115T1713&s=316.00&fn=9287440300782352&i=12747&fp=3093752358&n=1
                  status: PENDING
                - cancellationInfo:
                    message: Превышен лимит
                    type: CASHBACK_LIMIT_ERROR
                  receipt:
                    date: 2021-04-03T00:00:00.001+03:00
                    qrCodeAsString: t=20210115T1714&s=316.00&fn=9287440300782352&i=12747&fp=3093752358&n=1
                  status: CANCELED
                - cashback:
                  - amount: 22.5
                    date: 2021-02-08T00:00:00.001+03:00
                    offerId: 1231
                  - amount: 51.3
                    date: 2021-02-07T00:00:00.001+03:00
                    offerId: 546
                  receipt:
                    date: 2021-05-03T00:00:00.001+03:00
                    qrCodeAsString: t=20210115T1715&s=316.00&fn=9287440300782352&i=12747&fp=3093752358&n=1
                  status: PAID
              schema:
                $ref: '#/components/schemas/CashbackHistoryResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить историю кэшбэка клиента
      tags:
      - SpecialOffersAndCashback
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/loyalty/offers/active:
    get:
      deprecated: true
      description: Получить список всех активных офферов с неперсонализированной информацией
        по ним
      operationId: getApiV1LoyaltyOffersActive
      parameters:
      - description: Если передается 'true', то будут использоваться тестовые данные.
          Иначе продовые.
        example: true
        explode: true
        in: query
        name: test
        required: false
        schema:
          type: boolean
        style: form
      - description: На данный момент не учитывается. Отдаются все элементы. Сдвиг
          от начала списка офферов.
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: На данный момент не учитывается. Отдаются все элементы. Кол-во
          офферов на странице.
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - advert:
                    text: Рекламный текст.
                    textFormatted: <p>Форматированный текст. <strong>Форматированный
                      текст.</strong></p>
                    title: 10 месяцев
                  boundMoneyMax: 0
                  boundMoneyMin: 0
                  brandId: 242
                  cashbackAmount: 0
                  cashbackPercent: 0
                  clientRate: 0
                  closeDate: 2021-02-28T00:00:00.001+03:00
                  id: 12895
                  image1252: https://samplecdn.ru/1233.png
                  image280: https://samplecdn.ru/123.png
                  image626: https://samplecdn.ru/12345.png
                  merchantCategories: []
                  merchantId: 5813
                  merchantName: Магазин
                  merchantSubcategory: Электроника
                  numberOfContacts: 5985
                  numberOfRealised: 0
                  offerType: SPECIAL_CREDIT
                  onlineSale: false
                  openDate: 2020-11-23T00:00:00.001+03:00
                  quantityGraceStatement: 1
                  single: false
                  topBorder: 0
                  trancheDuration: 0
                  trancheStatementCount: 10
                  web: https://www.shop.ru/
                - advert:
                    text: Рекламный текст
                    textFormatted: <p>Форматированный текст</p>
                  boundMoneyMax: 0
                  boundMoneyMin: 0
                  brandId: 239
                  cashbackAmount: 0
                  cashbackPercent: 10
                  clientRate: 0
                  closeDate: 2021-11-12T00:00:00.001+03:00
                  id: 9993
                  image1252: https://samplecdn.ru/3321.png
                  image280: https://samplecdn.ru/321.png
                  image626: https://samplecdn.ru/54321.png
                  merchantCategories: []
                  merchantId: 4683
                  merchantName: Онлайн Магазин
                  numberOfContacts: 1
                  numberOfRealised: 0
                  offerType: STANDARD
                  onlineSale: true
                  openDate: 2019-10-25T00:00:00.001+03:00
                  quantityGraceStatement: 0
                  single: false
                  trancheDuration: 0
                  trancheStatementCount: 0
                  web: https://onlineshop.ru/
              schema:
                $ref: '#/components/schemas/ActiveOffersResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить все активные доступные спецпредложения
      tags:
      - SpecialOffersAndCashback
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/loyalty/offers/client:
    post:
      deprecated: true
      description: Получить список всех офферов, доступных клиенту
      operationId: postApiV1LoyaltyOffersClient
      parameters:
      - description: Если передается 'true', то будут использоваться тестовые данные.
          Иначе продовые.
        example: true
        explode: true
        in: query
        name: test
        required: false
        schema:
          type: boolean
        style: form
      - description: На данный момент не учитывается. Отдаются все элементы. Сдвиг
          от начала списка офферов.
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: На данный момент не учитывается. Отдаются все элементы. Кол-во
          офферов на странице.
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            example:
              phoneNumber: "79990001122"
              region: "02"
            schema:
              $ref: '#/components/schemas/ClientOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - cbAmount: 0
                  cbPercent: 50
                  countOfRealised: 0
                  id: 15872
                  merchantCategories:
                  - categoryId: 18
                    categoryWeight: 82
                    merchantCategoryWeight: 0
                  - categoryId: 602
                    categoryWeight: 290
                    merchantCategoryWeight: 0
                  - categoryId: 617
                    categoryWeight: 100
                    merchantCategoryWeight: 0
                  viewDate: 2021-02-03T00:00:00.001+03:00
                  weight: 0
                - cbAmount: 0
                  cbPercent: 20
                  countOfRealised: 2
                  id: 9987
                  merchantCategories:
                  - categoryId: 18
                    categoryWeight: 82
                    merchantCategoryWeight: 50
                  - categoryId: 395
                    categoryWeight: 99
                    merchantCategoryWeight: 100
                  viewDate: 2019-10-25T00:00:00.001+03:00
                  web: http://example.ru/ru/
                  weight: 10
              schema:
                $ref: '#/components/schemas/ClientOffersResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить все спецпредложения, доступные клиенту
      tags:
      - SpecialOffersAndCashback
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/loyalty/offers/client/{phoneNumber}:
    get:
      deprecated: true
      description: Получить список всех офферов, доступных клиенту
      operationId: getApiV1LoyaltyOffersClientPhonenumber
      parameters:
      - description: Номер телефона клиента в формате E.164
        example: 79990001122
        explode: false
        in: path
        name: phoneNumber
        required: true
        schema:
          type: string
        style: simple
      - example: "02"
        explode: true
        in: query
        name: region
        required: true
        schema:
          description: Регион клиента в формте КЛАДР - Классификатор адресов Российской
            Федерации. См. подробнее https://kladr-rf.ru/
          pattern: \d{2}
          type: string
        style: form
      - description: Если передается 'true', то будут использоваться тестовые данные.
          Иначе продовые.
        example: true
        explode: true
        in: query
        name: test
        required: false
        schema:
          type: boolean
        style: form
      - description: На данный момент не учитывается. Отдаются все элементы. Сдвиг
          от начала списка офферов.
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: На данный момент не учитывается. Отдаются все элементы. Кол-во
          офферов на странице.
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - cbAmount: 0
                  cbPercent: 50
                  countOfRealised: 0
                  id: 15872
                  merchantCategories:
                  - categoryId: 18
                    categoryWeight: 82
                    merchantCategoryWeight: 0
                  - categoryId: 602
                    categoryWeight: 290
                    merchantCategoryWeight: 0
                  - categoryId: 617
                    categoryWeight: 100
                    merchantCategoryWeight: 0
                  viewDate: 2021-02-03T00:00:00.001+03:00
                  weight: 0
                - cbAmount: 0
                  cbPercent: 20
                  countOfRealised: 2
                  id: 9987
                  merchantCategories:
                  - categoryId: 18
                    categoryWeight: 82
                    merchantCategoryWeight: 50
                  - categoryId: 395
                    categoryWeight: 99
                    merchantCategoryWeight: 100
                  viewDate: 2019-10-25T00:00:00.001+03:00
                  web: http://example.ru/ru/
                  weight: 10
              schema:
                $ref: '#/components/schemas/ClientOffersResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить все спецпредложения, доступные клиенту
      tags:
      - SpecialOffersAndCashback
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/loyalty/offers/view:
    post:
      deprecated: true
      operationId: postApiV1LoyaltyOffersView
      parameters:
      - description: Если передается 'true', то будут использоваться тестовые данные.
          Иначе продовые.
        example: true
        explode: true
        in: query
        name: test
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              offerId: 123242442
              phoneNumber: "79990001122"
            schema:
              $ref: '#/components/schemas/OfferViewRequest'
        required: true
      responses:
        "200":
          description: Просмотр оффера клиентом зафиксирован
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Зафиксировать просмотр оффера клиентом
      tags:
      - SpecialOffersAndCashback
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/loyalty/receipt:
    post:
      deprecated: true
      operationId: postApiV1LoyaltyReceipt
      parameters:
      - description: Если передается 'true', то будут использоваться тестовые данные.
          Иначе продовые.
        example: true
        explode: true
        in: query
        name: test
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              phoneNumber: "79990001122"
              qrCodeAsString: t=20210115T1715&s=312.00&fn=9287440300782352&i=12747&fp=3093752358&n=1
            schema:
              $ref: '#/components/schemas/SendReceiptRequest'
        required: true
      responses:
        "200":
          description: Чек принят в обработку
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Отправить чек на обработку. Результат обработки будет в истории кэшбэка
      tags:
      - SpecialOffersAndCashback
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/loyalty/receipt/sync:
    post:
      deprecated: true
      operationId: postApiV1LoyaltyReceiptSync
      parameters:
      - description: Если передается 'true', то будут использоваться тестовые данные.
          Иначе продовые.
        example: true
        explode: true
        in: query
        name: test
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            example:
              phoneNumber: "79990001122"
              qrCodeAsString: t=20210115T1715&s=312.00&fn=9287440300782352&i=12747&fp=3093752358&n=1
            schema:
              $ref: '#/components/schemas/SendReceiptRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                cashbackAmount: 56.7
                offerIds:
                - 123
                totalBalance: 123.4
              schema:
                $ref: '#/components/schemas/SendReceiptResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Отправить чек на обработку. Возвращает информацию о начислении.
      tags:
      - SpecialOffersAndCashback
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/payment/create:
    post:
      description: 'Необходимо согласие пользователя на: "Доступ к созданию черновиков
        платежных поручений". Подробнее про поля платежного поручения и их форматы
        можно почитать здесь: https://glavkniga.ru/situations/k503207. В поле scope
        у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/payments/draft/create,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.'
      operationId: postApiV1PaymentCreate
      requestBody:
        content:
          application/json:
            examples:
              Пример налогового платежа:
                summary: Пример налогового платежа
                value:
                  accountNumber: "40802810501234567890"
                  amount: 1.0
                  bankAcnt: "03100643000000015100"
                  bankBik: 1.500495E7
                  date: 2021-12-30T00:00+03:00[Europe/Moscow]
                  documentNumber: "514462"
                  inn: "7710140679"
                  kbk: "18210301000011000110"
                  kpp: "771301001"
                  oktmo: "50701000"
                  paymentPurpose: Налоги на прибыль
                  recipientCorrAccountNumber: "40102810445370000043"
                  recipientName: СИБИРСКОЕ ГУ БАНКА РОССИИ//УФК по Новосибирской области
                    г. Новосибирск
                  taxDocDate: 10.01.2020
                  taxDocNumber: "1"
                  taxEvidence: ТП
                  taxPayerStatus: "01"
                  taxPeriod: ГД.00.2021
                  uin: "12345678912345678900"
              Пример платежа в пользу физического лица:
                summary: Пример платежа в пользу физического лица
                value:
                  accountNumber: "99998888777766665555"
                  amount: 500
                  bankAcnt: "55554444333322221111"
                  bankBik: "76543277778"
                  collectionAmountNumber: 987654321
                  date: 2015-09-03T12:30+03:00[Europe/Moscow]
                  documentNumber: "654321"
                  executionOrder: 5
                  inn: "987654321987"
                  kbk: "33335555666677778888"
                  kpp: "0"
                  oktmo: "33335555"
                  paymentPurpose: оплата товара
                  recipientCorrAccountNumber: "22228888333366661111"
                  recipientName: Петров Петр Петрович
                  revenueTypeCode: "2"
                  taxDocDate: "0"
                  taxDocNumber: "0"
                  taxEvidence: ТП
                  taxPayerStatus: 9.0
                  taxPeriod: ГД.00.2019
                  uin: "0"
              Пример платежа в пользу юридического лица:
                summary: Пример платежа в пользу юридического лица
                value:
                  accountNumber: "55554444333322221111"
                  amount: 50000
                  bankAcnt: "99998888777766665555"
                  bankBik: "76543277778"
                  collectionAmountNumber: 987654321
                  date: 2015-09-03T12:30+03:00[Europe/Moscow]
                  documentNumber: "654321"
                  executionOrder: 5
                  inn: "987654321987"
                  kbk: "33335555666677778888"
                  kpp: "654321654"
                  oktmo: "33335555"
                  paymentPurpose: оплата товара
                  recipientCorrAccountNumber: "66668888000066667777"
                  recipientName: ООО Рога и Копыта
                  revenueTypeCode: "2"
                  taxDocDate: "0"
                  taxDocNumber: "0"
                  taxEvidence: ТП
                  taxPayerStatus: 9.0
                  taxPeriod: ГД.00.2019
                  uin: "0"
            schema:
              $ref: '#/components/schemas/CreatePaymentDraftRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                documentId: 55555000-0000-0000-5555-000011110000
              schema:
                $ref: '#/components/schemas/CreatePaymentDraftResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Создать черновик платежного поручения
      tags:
      - Payments
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/payment/ruble-transfer/pay:
    post:
      description: |2

        Данный метод позволяет выплачивать деньги с рублевых счетов компании.
        Выплаты могут производиться на счета юрлиц и физлиц в банках РФ.
        При передаче информации в блоке "налоги" появляется возможность совершать налоговые платежи и налоговые платежи за третьих лиц.
        Выплата денег со счета производится асинхронно.
        Результат запроса на выплату можно получить, вызвав метод
        <a href="#operation/PaymentsCoreGetStatus">Получить статуса платежа</a>, передав в него соответствующий <b>paymentId</b>.
        В поле scope у токена должен присутствовать доступ вида  opensme/inn/[{inn}]/kpp/[{kpp}]/payments/rub-pay, где {inn} — ИНН клиента, а {kpp} — КПП клиента.

        <b>Все вызовы метода дедуплицируются:</b>

        <b>Селф-сервис:</b>
        Дедупликация происходит по paymentId в контексте вашей компании. Это значит, что paymentId должен быть уникален в рамках всех платежей от лица вашей компании.
        Если будет произведено два и более вызова метода с одинаковыми paymentId в рамках одной компании, то будет создан только один платеж.

        <b>Партерский сценарий:</b>
        Дедупликация происходит по paymentId + clientId. Это значит, что связка paymentId + clientId должна быть уникальна.
        Если будет произведено два и более вызова метода с одинаковыми paymentId и clientId, то будет создан только один платеж.
        clientId выдается при регистрации партнера в tinkoff и отправляется на почту.

        <b>Лимиты:</b>
        По умолчанию на выполнение платежей через API установлены следующие лимиты:
        <ul>
          <li>максимальная сумма одного платежа - 100000 рублей</li>
          <li>максимальная сумма платежей в день - 100000 рублей</li>
          <li>максимальная сумма платежей в месяц - 1000000 рублей</li>
          <li>максимальное количество платежей в день на одного контрагента - 3</li>
        </ul>
        Для изменения лимитов по вашей компании напишите на openapi@tinkoff.ru.
      operationId: PaymentsCorePay
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Пример платежа в пользу юридического лица
                value:
                  amount: 10
                  documentNumber: 100
                  dueDate: 2020-07-01T00:00+03:00
                  executionOrder: 5
                  from:
                    accountNumber: "12345678900987654321"
                  id: "123456"
                  meta:
                    clientCustomField: value
                  purpose: Оплата по договору №123. НДС не облагается
                  to:
                    accountNumber: "11122233344455566677"
                    bankName: Чемпион
                    bik: "444555666"
                    corrAccountNumber: "12345678901234567890"
                    inn: "1234567890"
                    kpp: "111222333"
                    name: ООО "РОГА и КОПЫТА"
              Example1:
                summary: Пример платежа в пользу физического лица
                value:
                  amount: 30000
                  collectionAmount: 500
                  documentNumber: 100
                  dueDate: 2020-07-01T00:00+03:00
                  executionOrder: 5
                  from:
                    accountNumber: "12345678900987654321"
                  id: "123456"
                  meta:
                    clientCustomField: value
                  purpose: //ВЗС//500-00// Выплата заработной платы (30000 руб.) Иванову
                    В.В. за июль 2020 года по ведомости от 30.06.20 №5. НДС не облагается
                  revenueTypeCode: "1"
                  to:
                    accountNumber: "11122233344455566677"
                    bankName: Чемпион
                    bik: "444555666"
                    corrAccountNumber: "12345678901234567890"
                    inn: "0"
                    name: Иванов В.В.
              Example2:
                summary: Пример налогового платежа
                value:
                  amount: 10
                  documentNumber: 100
                  dueDate: 2020-07-01T00:00+03:00
                  executionOrder: 5
                  from:
                    accountNumber: "12345678900987654321"
                  id: "123456"
                  meta:
                    clientCustomField: value
                  purpose: 1234567890//123456789//ООО "Абажур"//НДС за 1 квартал 2017
                    года Пени по ТР. №132235 от 25.07.2017 г
                  tax:
                    docDate: 10.01.2020
                    docNumber: ТР
                    evidence: ТП
                    kbk: "18210301000011000110"
                    oktmo: "50701000"
                    payerStatus: "01"
                    period: ГД.00.2021
                    thirdParty:
                      inn: "563287187294"
                      kpp: "849354728"
                  to:
                    accountNumber: "11122233344455566677"
                    bankName: Чемпион
                    bik: "444555666"
                    corrAccountNumber: "12345678901234567890"
                    inn: "1234567890"
                    kpp: "111222333"
                    name: ООО "РОГА и КОПЫТА"
                  uin: "12345678912345678900"
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
        required: true
      responses:
        "201":
          description: Платеж поставлен в очередь на исполнение
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Выполнить платёж
      tags:
      - Payments
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/payment/sbp/pay:
    post:
      description: |2

        Данный метод позволяет производить выплаты с рублевых счетов компании через
        систему быстрых платежей (СБП). Выплаты производятся по номеру телефона на счета физлиц в банках РФ,
        подключенных к системе быстрых платежей.
        Выплата денег со счета производится асинхронно.
        Результат запроса на выплату можно получить, вызвав метод
        <a href="#operation/PaymentsCoreGetStatus">Получить статуса платежа</a>, передав в него соответствующий <b>paymentId</b>.
        В поле scope у токена должен присутствовать доступ вида  opensme/inn/[{inn}]/kpp/[{kpp}]/payments/sbp-pay, где {inn} — ИНН клиента, а {kpp} — КПП клиента.

        Для совершения выплаты необходимо указать идентификатор банка {bankId} в системе СБП.

        <b>Список банков, поддерживающих переводы физлицам через систему СБП:</b>

        Наименование | bankId
        ----------------------|-------------
        Тинькофф Банк | 100000000004
        ВТБ | 100000000005
        ЮМани | 100000000022
        Банк АВАНГАРД | 100000000028
        Газэнергобанк | 100000000043
        Экспобанк | 100000000044
        КБ ПЛАТИНА | 100000000048
        Банк ВБРР | 100000000049
        ТОЧКА (ФК ОТКРЫТИЕ) | 100000000065
        АБ РОССИЯ | 100000000095
        КБ Модульбанк | 100000000099
        Русское финансовое общество | 100000000104
        МСП Банк | 100000000246

        <b>Все вызовы метода дедуплицируются:</b>

        <b>Селф-сервис:</b>
        Дедупликация происходит по paymentId в контексте вашей компании. Это значит, что paymentId должен быть уникален в рамках всех платежей от лица вашей компании.
        Если будет произведено два и более вызова метода с одинаковыми paymentId в рамках одной компании, то будет создан только один платеж.

        <b>Партерский сценарий:</b>
        Дедупликация происходит по paymentId + clientId. Это значит, что связка paymentId + clientId должна быть уникальна.
        Если будет произведено два и более вызова метода с одинаковыми paymentId и clientId, то будет создан только один платеж.
        clientId выдается при регистрации партнера в tinkoff и отправляется на почту.

        <b>Лимиты:</b>
        По умолчанию на выполнение платежей через API установлены следующие лимиты:
        <ul>
          <li>максимальная сумма одного платежа - 100000 рублей</li>
          <li>максимальная сумма платежей в день - 100000 рублей</li>
          <li>максимальная сумма платежей в месяц - 1000000 рублей</li>
          <li>максимальное количество платежей в день на одного контрагента - 3</li>
        </ul>
        Для изменения лимитов по вашей компании напишите на openapi@tinkoff.ru.
      operationId: SbpPay
      requestBody:
        content:
          application/json:
            example:
              amount: 10
              documentNumber: 100
              from:
                accountNumber: "12345678900987654321"
              id: "123456"
              purpose: Оплата по договору №123. НДС не облагается
              to:
                bankId: "100000000004"
                firstName: Иван
                lastName: Иванов
                middleName: Иванович
                phone: +72561112233
            schema:
              $ref: '#/components/schemas/CreateSbpPaymentRequest'
        required: true
      responses:
        "201":
          description: Платеж поставлен в очередь на исполнение
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Выполнить платёж через систему быстрых платежей (СБП)
      tags:
      - Payments
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/payment/{paymentId}:
    get:
      description: |2

        Данный метод позволяет узнать статус выплаты, произведенной с помощью методов
         <a href="#payment/PaymentsCorePay">Выполнить платеж</a> и <a href="#payment/SbpPay">Выполнить платёж через систему быстрых платежей (СБП)</a>.
        В поле scopes у токена должен присутствовать хотя бы один scope вида:
        opensme/inn/[{inn}]/kpp/[{kpp}]/payments/rub-pay, где {inn} — ИНН клиента, а {kpp} — КПП клиента.
        opensme/inn/[{inn}]/kpp/[{kpp}]/payments/sbp-pay, где {inn} — ИНН клиента, а {kpp} — КПП клиента.

        <b>Примечание для партнёров</b>: В этом методе учитывается clientId, если ваш clientId был изменён, вы не сможете получить статус платежа, созданного
        при использовании старого clientId.
        clientId выдается при регистрации партнера в tinkoff и отправляется на почту.
      operationId: PaymentsCoreGetStatus
      parameters:
      - description: Идентификатор платежа
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                meta:
                  clientCustomField: value
                status: IN_PROGRESS
              schema:
                $ref: '#/components/schemas/PaymentStatusResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Получить статус платежа
      tags:
      - Payments
      x-accepts: application/json
  /api/v1/salary/employees/create:
    post:
      description: "\nЗапрос является асинхронной операцией — его результат можно\
        \ получить, вызвав метод\n<a href=\"#operation/SalaryGetEmployeesCreateResult\"\
        >Получить результат создания сотрудников</a>, передав в него соответствующ\
        ий <b>correlationId</b>.\nВ поле scope у токена должен присутствовать дост\
        уп вида opensme/inn/[{inn}]/kpp/[{kpp}]/salary/employees/manage, где {inn}\
        \ — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SalaryCreateEmployee
      requestBody:
        content:
          application/json:
            examples:
              Гражданин РФ:
                summary: Гражданин РФ
                value:
                  correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
                  employees:
                  - addresses:
                    - apartment: "512"
                      building: "1"
                      city: Санкт-Петербург
                      construction: "1"
                      country: Россия
                      district: Санкт-Петербург
                      house: "12"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Херсонская
                      type: Работы
                    - apartment: "20"
                      building: "8"
                      city: Санкт-Петербург
                      construction: "16"
                      country: Россия
                      district: Санкт-Петербург
                      house: "4"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Таллинская
                      type: Жительства
                    - apartment: "20"
                      building: "8"
                      city: Санкт-Петербург
                      construction: "16"
                      country: РОССИЯ
                      district: Санкт-Петербург
                      house: "4"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Таллинская
                      type: Жительства
                    birthDate: 1967-12-25
                    birthPlace: Санкт-Петербург
                    citizenship: Санкт-Петербург
                    documents:
                    - date: 2015-05-09
                      division: 123-123
                      expireDate: 2025-05-09
                      number: "123456"
                      organization: ФМС
                      serial: "1234"
                      type: Паспорт
                    email: example@example.com
                    firstName: Иван
                    jobInfo:
                      position: программист
                    lastName: Иванов
                    latinFirstName: Ivan
                    latinLastName: Ivanov
                    middleName: Иванович
                    number: 1
                    phones:
                    - number: +72565121024
                      type: Мобильный
              Гражданин РФ + Иностранный гражданин:
                summary: Гражданин РФ + Иностранный гражданин
                value:
                  correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
                  employees:
                  - addresses:
                    - apartment: "512"
                      building: "1"
                      city: Санкт-Петербург
                      construction: "1"
                      country: Россия
                      district: Санкт-Петербург
                      house: "12"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Херсонская
                      type: Работы
                    - apartment: "20"
                      building: "8"
                      city: Санкт-Петербург
                      construction: "16"
                      country: Россия
                      district: Санкт-Петербург
                      house: "4"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Таллинская
                      type: Жительства
                    - apartment: "20"
                      building: "8"
                      city: Санкт-Петербург
                      construction: "16"
                      country: РОССИЯ
                      district: Санкт-Петербург
                      house: "4"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Таллинская
                      type: Жительства
                    birthDate: 1967-12-25
                    birthPlace: Санкт-Петербург
                    citizenship: Санкт-Петербург
                    documents:
                    - date: 2015-05-09
                      division: 123-123
                      expireDate: 2025-05-09
                      number: "123456"
                      organization: ФМС
                      serial: "1234"
                      type: Паспорт
                    email: example@example.com
                    firstName: Иван
                    jobInfo:
                      position: программист
                    lastName: Иванов
                    latinFirstName: Ivan
                    latinLastName: Ivanov
                    middleName: Иванович
                    number: 1
                    phones:
                    - number: +72565121024
                      type: Мобильный
                  - addresses:
                    - apartment: "512"
                      building: "1"
                      city: Санкт-Петербург
                      construction: "1"
                      country: Россия
                      district: Санкт-Петербург
                      house: "12"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Херсонская
                      type: Работы
                    - apartment: "20"
                      building: "8"
                      city: Санкт-Петербург
                      construction: "16"
                      country: Россия
                      district: Санкт-Петербург
                      house: "4"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Таллинская
                      type: Жительства
                    - apartment: "20"
                      building: "8"
                      city: Санкт-Петербург
                      construction: "16"
                      country: РОССИЯ
                      district: Санкт-Петербург
                      house: "4"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Таллинская
                      type: Жительства
                    birthDate: 1934-03-09
                    birthPlace: Эдинбург
                    citizenship: Соединенное Королевство
                    documents:
                    - date: 2015-05-09
                      expireDate: 2025-05-09
                      number: "123456"
                      organization: Migration service of the United Kingdom
                      serial: "1234"
                      type: Загр. паспорт иностранного гр.
                    - date: 2015-05-09
                      expireDate: 2025-05-09
                      number: "123456"
                      organization: ФМС
                      serial: "1234"
                      type: Вид на жительство
                    email: example@example.com
                    firstName: Шерлок
                    jobInfo:
                      position: детектив
                    lastName: Холмс
                    latinFirstName: Sherlock
                    latinLastName: Holmes
                    number: 2
                    phones:
                    - number: +72565121024
                      type: Мобильный
              Иностранный гражданин:
                summary: Иностранный гражданин
                value:
                  correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
                  employees:
                  - addresses:
                    - apartment: "512"
                      building: "1"
                      city: Санкт-Петербург
                      construction: "1"
                      country: Россия
                      district: Санкт-Петербург
                      house: "12"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Херсонская
                      type: Работы
                    - apartment: "20"
                      building: "8"
                      city: Санкт-Петербург
                      construction: "16"
                      country: Россия
                      district: Санкт-Петербург
                      house: "4"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Таллинская
                      type: Жительства
                    - apartment: "20"
                      building: "8"
                      city: Санкт-Петербург
                      construction: "16"
                      country: РОССИЯ
                      district: Санкт-Петербург
                      house: "4"
                      postalCode: "123123"
                      settlement: Санкт-Петербург
                      state: Санкт-Петербург
                      street: ул. Таллинская
                      type: Жительства
                    birthDate: 1934-03-09
                    birthPlace: Эдинбург
                    citizenship: Соединенное Королевство
                    documents:
                    - date: 2015-05-09
                      expireDate: 2025-05-09
                      number: "123456"
                      organization: Migration service of the United Kingdom
                      serial: "1234"
                      type: Загр. паспорт иностранного гр.
                    - date: 2015-05-09
                      expireDate: 2025-05-09
                      number: "123456"
                      organization: ФМС
                      serial: "1234"
                      type: Вид на жительство
                    email: example@example.com
                    firstName: Шерлок
                    jobInfo:
                      position: детектив
                    lastName: Холмс
                    latinFirstName: Sherlock
                    latinLastName: Holmes
                    number: 1
                    phones:
                    - number: +72565121024
                      type: Мобильный
            schema:
              $ref: '#/components/schemas/CreateEmployeesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
              schema:
                $ref: '#/components/schemas/CreateEmployeesResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Создать черновики анкет сотрудников
      tags:
      - Salary
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/salary/employees/create/result:
    get:
      description: "\nМетод возвращает результат запроса на <a href=\"#operation/SalaryCreateEmployee\"\
        >создание черновиков анкет сотрудников</a>.\nОтвет на запрос создания хран\
        ится в течение 2-х дней.<br>\nВ поле scope у токена должен присутствовать\
        \ доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/salary/employees/manage, где\
        \ {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SalaryGetEmployeesCreateResult
      parameters:
      - description: Уникальный идентификатор(тип <a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">UUID</a>),
          связывающий запрос создания с запросом получения ответа (должен быть сформирован
          на стороне клиента)
        example: cf99df08-0829-4614-8da3-0e440fd23fe0
        explode: true
        in: query
        name: correlationId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example0:
                  value:
                    employeeResults:
                    - employeeId: 2
                      errors: []
                      firstName: Иван
                      lastName: Иванов
                      middleName: Иванович
                      number: 1
                      status: CREATED
                Example1:
                  value:
                    employeeResults:
                    - errors:
                      - errorDescription: Вам должно быть от 14 до 100 лет
                        fieldName: Дата рождения
                      - errorDescription: Дата должна быть не ранее 01.07.1997
                        fieldName: Документ
                      - errorDescription: Отсутствует адрес данного типа
                        fieldName: Адрес
                      firstName: Иван
                      lastName: Иванов
                      middleName: Иванович
                      number: 1
                      status: ERROR
              schema:
                $ref: '#/components/schemas/CreateEmployeeResultResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить результат создания черновиков анкет сотрудников
      tags:
      - Salary
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/salary/employees/list:
    post:
      description: "\nМетод вызывается для получения информации по сотрудникам. Вы\
        зывать необходимо не чаще, чем раз в 10 минут.<br>\nЗаявка для добавления\
        \ сотрудника создается в статусе DRAFT, после чего ее необходимо отправить\
        \ в Личном кабинете. Отправленный сотрудник перейдет в статус ACTIVE.<br>\n\
        В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/salary/employees/manage,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SalaryGetEmployeesList
      requestBody:
        content:
          application/json:
            example:
              employeeIds:
              - 217
            schema:
              $ref: '#/components/schemas/EmployeesInfoRequest'
        description: Список идентификаторов сотрудников
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                employees:
                - bankInfo:
                    accountNumber: "40802123456789012345"
                    agreementNumber: "1234567890"
                  birthDate: 1967-12-25
                  documents:
                  - date: 2015-05-09
                    division: 123-123
                    expireDate: 2025-05-09
                    number: "123456"
                    organization: ФМС
                    serial: "1234"
                    type: Паспорт
                  firstName: Иван
                  id: 217
                  jobInfo:
                    position: программист
                  lastName: Иванов
                  middleName: Иванович
                  phones:
                  - number: +72565121024
                    type: Мобильный
                  status: DRAFT
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить информацию по сотрудникам
      tags:
      - Salary
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/salary/payment-registry/create:
    post:
      description: "\nЗапрос является асинхронной операцией — его результат можно\
        \ получить, вызвав метод\n<a href=\"#operation/SalaryGetPaymentRegistryCreateResult\"\
        >Получить результат создания платежного реестра</a>, передав в него соотве\
        тствующий <b>correlationId</b>.<br>\n<u>Вы можете добавлять в реестр сотру\
        дников, которые находятся в статусах ACTIVE и FIRED</u><br>\nВ поле scope\
        \ у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/salary/payment-registry/manage,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SalaryCreatePaymentRegistry
      requestBody:
        content:
          application/json:
            example:
              companyAccountNumber: "40802123456789012345"
              correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
              loadDate: 2015-05-09T12:30
              payments:
              - accountNumber: "12345678901234567890"
                collectionAmount: 50
                employeeInfo:
                  firstName: Петр
                  lastName: Петров
                  middleName: Петрович
                number: 1
                paymentPurpose: Зарплата
                periodEnd: 2016-05-09
                periodStart: 2015-05-09
                revenueTypeCode: "2"
                sum: 65000
              registryCreateType: FAIL_ERRORS
            schema:
              $ref: '#/components/schemas/CreatePaymentRegistryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
              schema:
                $ref: '#/components/schemas/CreatePaymentRegistryResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Создание черновика платежного реестра
      tags:
      - Salary
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/salary/payment-registry/create/result:
    get:
      description: "\nМетод возвращает результат запроса на <a href=\"#operation/SalaryCreatePaymentRegistry\"\
        >создание платежного реестра</a>.\nРезультат создания хранится в течение 2-х\
        \ дней.<br>\nВ поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/salary/payment-registry/manage,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SalaryGetPaymentRegistryCreateResult
      parameters:
      - description: Идентификатор, связывающий запрос создания с запросом получения
          ответа
        example: cf99df08-0829-4614-8da3-0e440fd23fe0
        explode: true
        in: query
        name: correlationId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example0:
                  value:
                    paymentErrors: []
                    paymentRegistryId: 1
                    status: CREATED
                Example1:
                  value:
                    error:
                      errorDescription: Непредвиденная ошибка. Пожалуйста, попробуйте
                        позже.
                      fieldName: Ошибка создания платежного реестра
                    paymentErrors:
                    - accountNumber: "40802123456789012345"
                      errors:
                      - errorDescription: Неверный номер счёта
                        fieldName: Номер счета
                      - errorDescription: Номер договора не найден
                        fieldName: Номер договора
                      - errorDescription: Не удалось найти среди активных и бывших
                          сотрудников компании
                        fieldName: Статус сотрудника
                      number: 1
                    status: ERROR
              schema:
                $ref: '#/components/schemas/CreatePaymentRegistryResultResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить результат создания черновика платежного реестра
      tags:
      - Salary
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/salary/payment-registry/submit:
    post:
      description: "\nЗапрос является асинхронной операцией — его результат можно\
        \ получить, вызвав метод\n<a href=\"#operation/SalaryPaymentRegistrySubmitResult\"\
        >Получить результат подписания платежного реестра</a>, передав в него соот\
        ветствующий <b>correlationId</b>.<br>\nДанный метод позволяет подписать че\
        рновик платёжного реестра.\ncreatePaymentRegistryПодписанный реестр исполн\
        яется после совершения платежа на сумму реестра на транзитный счёт - <b>47422810900000081042</b>.\n\
        Создать и оплатить платёжное поручение можно методом <a href=\"#operation/PaymentsCorePay\"\
        >Выполнить платёж</a>.\nВ назначении необходимо указать слово \"реестр\" и\
        \ номер реестра, который будет исполнен платежом.\nНапример: <em>\"Оплата\
        \ по договору согласно реестру №394 от 24.09.2020. НДС не облагается\"</em>\n\
        <br>\nВ поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/salary/payment-registry/submit,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SalaryPaymentRegistrySubmit
      requestBody:
        content:
          application/json:
            example:
              correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
              paymentRegistryId: 12
            schema:
              $ref: '#/components/schemas/PaymentRegistrySubmitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
              schema:
                $ref: '#/components/schemas/PaymentRegistrySubmitResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Подписание платёжного реестра сотрудников
      tags:
      - Salary
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/salary/payment-registry/submit/result:
    get:
      description: "\nМетод возвращает результат запроса на <a href=\"#operation/SalaryPaymentRegistrySubmit\"\
        >подписания платежного реестра</a>.\nРезультат создания хранится в течение\
        \ 2-х дней.<br>\nВ поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/salary/payment-registry/submit,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SalaryPaymentRegistrySubmitResult
      parameters:
      - description: Идентификатор, связывающий запрос создания с запросом получения
          ответа
        example: cf99df08-0829-4614-8da3-0e440fd23fe0
        explode: true
        in: query
        name: correlationId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example0:
                  value:
                    paymentErrors: []
                    paymentRegistryId: 12
                    status: ACCEPTED
                Example1:
                  value:
                    error:
                      errorCode: INTERNAL_ERROR
                      errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте
                        позже.
                    paymentErrors:
                    - accountNumber: "40802123456789012345"
                      errors:
                      - errorDescription: Неверный номер счёта
                        fieldName: Номер счета
                      - errorDescription: Номер договора не найден
                        fieldName: Номер договора
                      - errorDescription: Не удалось найти среди активных и бывших
                          сотрудников компании
                        fieldName: Статус сотрудника
                      number: 1
                    paymentRegistryId: 12
                    status: ERROR
              schema:
                $ref: '#/components/schemas/PaymentRegistrySubmitResultResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Получить результат подписания платёжного реестра сотрудников
      tags:
      - Salary
      x-accepts: application/json
  /api/v1/salary/payment-registry/{paymentRegistryId}:
    get:
      description: "\nМетод вызывается для получения информации по платежному реес\
        тру.\nВызывать необходимо не чаще, чем раз в 10 минут.<br>\nВ поле scope у\
        \ токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/salary/payment-registry/manage,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SalaryGetPaymentRegistry
      parameters:
      - description: Номер платежного реестра
        example: 5
        explode: false
        in: path
        name: paymentRegistryId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                companyAccountNumber: "40816810800000122870"
                loadDate: 2015-05-09T12:30
                payments:
                - accountNumber: "40802678901234567890"
                  employeeInfo:
                    employeeId: 123456789
                    firstName: Петр
                    lastName: Петров
                    middleName: Петрович
                  number: 1
                  paymentPurpose: Зарплата
                  periodEnd: 2016-05-09
                  periodStart: 2015-05-09
                  status: EXECUTED
                  sum: 750
                - accountNumber: "40802678901234567890"
                  employeeInfo:
                    employeeId: 123456789
                    firstName: Петр
                    lastName: Петров
                    middleName: Петрович
                  number: 1
                  paymentPurpose: Премия
                  periodEnd: 2016-05-09
                  periodStart: 2015-05-09
                  status: EXECUTED
                  sum: 250
                paymentsCount: 2
                status: EXECUTED
                totalSum: 1000
              schema:
                $ref: '#/components/schemas/PaymentRegistry'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получение платежного реестра
      tags:
      - Salary
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/self-employed/payment-registry/create:
    post:
      description: "\nЗапрос является асинхронной операцией — его результат можно\
        \ получить, вызвав метод\n<a href=\"#operation/SelfEmployedGetPaymentRegistryCreateResult\"\
        >Получить результат создания платежного реестра</a>, передав в него соотве\
        тствующий <b>correlationId</b>.<br>\n<u>Вы можете добавлять в реестр самоз\
        янятых, которые находятся в статусах ACTIVE и FIRED</u><br>\nВ поле scope\
        \ у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/payment-registry/manage,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedCreatePaymentRegistry
      requestBody:
        content:
          application/json:
            example:
              correlationId: 87419c5e-9af1-4b10-89ba-06583cd7c752
              loadDate: 2015-05-09T12:30
              payments:
              - accountNumber: "12345678901234567890"
                collectionAmount: 50
                number: 1
                paymentPurpose: Оплата по договору
                revenueTypeCode: "2"
                selfEmployedInfo:
                  firstName: Петр
                  lastName: Петров
                  middleName: Петрович
                sum: 750
              registryCreateType: FAIL_ERRORS
              taxHolding: true
            schema:
              $ref: '#/components/schemas/SelfEmployedCreatePaymentRegistryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                correlationId: 87419c5e-9af1-4b10-89ba-06583cd7c752
              schema:
                $ref: '#/components/schemas/SelfEmployedCreatePaymentRegistryResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Создание черновика платежного реестра
      tags:
      - SelfEmployed
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/self-employed/payment-registry/create/result:
    get:
      description: "\nМетод возвращает результат запроса на <a href=\"#operation/SelfEmployedCreatePaymentRegistry\"\
        >создание платежного реестра</a>.\nРезультат создания хранится в течение 2-х\
        \ дней.<br>\nВ поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/payment-registry/manage,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedGetPaymentRegistryCreateResult
      parameters:
      - description: Идентификатор, связывающий запрос создания с запросом получения
          ответа
        example: 87419c5e-9af1-4b10-89ba-06583cd7c752
        explode: true
        in: query
        name: correlationId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example0:
                  value:
                    paymentErrors: []
                    paymentRegistryId: 1
                    status: CREATED
                Example1:
                  value:
                    error:
                      errorDescription: Непредвиденная ошибка. Пожалуйста, попробуйте
                        позже.
                      fieldName: Ошибка создания платежного реестра
                    paymentErrors:
                    - accountNumber: "40802123456789012345"
                      errors:
                      - errorDescription: Неверный номер счёта
                        fieldName: Номер счета
                      - errorDescription: Номер договора не найден
                        fieldName: Номер договора
                      - errorDescription: Не удалось найти среди активных и бывших
                          сотрудников компании
                        fieldName: Статус сотрудника
                      number: 1
                    status: ERROR
              schema:
                $ref: '#/components/schemas/SelfEmployedCreatePaymentRegistryResultResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить результат создания черновика платежного реестра
      tags:
      - SelfEmployed
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/self-employed/payment-registry/fiscalize:
    post:
      description: "\nМетод по каждому исполненному платежу в платежном реестре за\
        являет доход самозанятого в налоговую.\nСумма чека равна сумме исполненног\
        о платежа. Доход заявляется только по платежам, по которым ранее этого сде\
        лано не было.\nСсылки на чеки можно получить, вызвав операцию Запрос на по\
        лучение чеков.\nДля регистрации дохода реестр должен быть в статусе \"EXECUTED\"\
        \ или \"PART_EXEC\".\nЗапрос на регистрацию дохода является асинхронной оп\
        ерацией - его результат можно получить, вызвав метод\n<a href=\"#operation/SelfEmployedGetPaymentRegistryFiscalizeResult\"\
        >Получить результат регистрации дохода по реестру самозанятых</a>.\nВ поле\
        \ scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/payment-registry/fiscalize,\n\
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedFiscalizePaymentRegistry
      requestBody:
        content:
          application/json:
            example:
              correlationId: 87419c5e-9af1-4b10-89ba-06583cd7c752
              paymentRegistryId: 1
            schema:
              $ref: '#/components/schemas/SelfEmployedFiscalizePaymentRegistryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                correlationId: 87419c5e-9af1-4b10-89ba-06583cd7c752
              schema:
                $ref: '#/components/schemas/SelfEmployedFiscalizePaymentRegistryResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Регистрация дохода по платёжному реестру самозанятых
      tags:
      - SelfEmployed
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/self-employed/payment-registry/fiscalize/result:
    get:
      description: "\nМетод возвращает результат запроса на регистрацию дохода по\
        \ платежному реестру.\nВ поле scope у токена должен присутствовать доступ\
        \ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/payment-registry/fiscalize,\n\
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedGetPaymentRegistryFiscalizeResult
      parameters:
      - description: Идентификатор, связывающий запрос создания с запросом получения
          ответа
        example: 87419c5e-9af1-4b10-89ba-06583cd7c752
        explode: true
        in: query
        name: correlationId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example0:
                  value:
                    status: FINISHED
                Example1:
                  value:
                    error:
                      errorCode: INTERNAL_ERROR
                      errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте
                        позже.
                    status: ERROR
              schema:
                $ref: '#/components/schemas/SelfEmployedFiscalizePaymentRegistryResultResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Получить результат регистрации дохода по платёжному реестру самозанятых
      tags:
      - SelfEmployed
      x-accepts: application/json
  /api/v1/self-employed/payment-registry/receipts:
    post:
      description: "\nМетод позволяет запрашивать ссылки на чеки, полученных в рез\
        ультате метода Регистрация дохода по реестру самозанятых.\nЗапрос является\
        \ асинхронной операцией, его результат можно получить, вызвав метод\n<a href=\"\
        #operation/SelfEmployedReceiptsResult\">Получить результат запроса на полу\
        чение чеков</a>, передав в него соответствующий <b>correlationId</b>.<br>\n\
        В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/payment-registry/fiscalize,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedReceipts
      requestBody:
        content:
          application/json:
            example:
              correlationId: 87419c5e-9af1-4b10-89ba-06583cd7c752
              paymentRegistryId: 777
            schema:
              $ref: '#/components/schemas/SelfEmployedReceiptsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                correlationId: 87419c5e-9af1-4b10-89ba-06583cd7c752
              schema:
                $ref: '#/components/schemas/SelfEmployedReceiptsResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Запрос на получение чеков по платежному реестру самозанятых
      tags:
      - SelfEmployed
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/self-employed/payment-registry/receipts/result:
    get:
      description: "\nМетод возвращает результат запроса на получение чеков.\nВ по\
        ле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/payment-registry/fiscalize,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedReceiptsResult
      parameters:
      - description: Идентификатор, связывающий запрос создания с запросом получения
          ответа
        example: 87419c5e-9af1-4b10-89ba-06583cd7c752
        explode: true
        in: query
        name: correlationId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example0:
                  value:
                    receipts:
                    - link: http://link.example
                      number: 777
                      selfEmployedInfo:
                        firstName: Иван
                        lastName: Иванов
                        middleName: Иванович
                        recipientId: 123456789
                      status: SUCCESS
                    status: FINISHED
                Example1:
                  value:
                    error:
                      errorCode: INTERNAL_ERROR
                      errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте
                        позже.
                    receipts:
                    - error:
                        errorCode: INTERNAL_ERROR
                        errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте
                          позже.
                      number: 777
                      selfEmployedInfo:
                        firstName: Иван
                        lastName: Иванов
                        middleName: Иванович
                        recipientId: 123456789
                      status: ERROR
                    status: ERROR
              schema:
                $ref: '#/components/schemas/SelfEmployedReceipts'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Получить результат запроса на получение чеков
      tags:
      - SelfEmployed
      x-accepts: application/json
  /api/v1/self-employed/payment-registry/submit:
    post:
      description: "\nЗапрос является асинхронной операцией — его результат можно\
        \ получить, вызвав метод\n<a href=\"#operation/SelfEmployedGetPaymentRegistrySubmitResult\"\
        >Получить результат подписания платежного реестра</a>, передав в него соот\
        ветствующий <b>correlationId</b>.<br>\nДанный метод позволяет подписать че\
        рновик платёжного реестра.\nПодписанный реестр исполняется после совершени\
        я платежа на сумму реестра на транзитный счёт - <b>47422810900000081042</b>.\n\
        Создать и оплатить платёжное поручение можно методом <a href=\"#operation/PaymentsCorePay\"\
        >Выполнить платёж</a>.\nВ назначении необходимо указать слово \"реестр\" и\
        \ номер реестра, который будет исполнен платежом.\nНапример: <em>\"Оплата\
        \ по договору согласно реестру №394 от 24.09.2020. НДС не облагается\"</em>\n\
        <br>\nВ поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/payment-registry/submit,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedPaymentRegistrySubmit
      requestBody:
        content:
          application/json:
            example:
              correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
              paymentRegistryId: 12
            schema:
              $ref: '#/components/schemas/SelfEmployedPaymentRegistrySubmitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
              schema:
                $ref: '#/components/schemas/SelfEmployedPaymentRegistrySubmitResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Подписание платёжного реестра самозанятых
      tags:
      - SelfEmployed
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/self-employed/payment-registry/submit/result:
    get:
      description: "\nМетод возвращает результат запроса на <a href=\"#operation/SelfEmployedPaymentRegistrySubmit\"\
        >подписания платежного реестра</a>.\nРезультат создания хранится в течение\
        \ 2-х дней.<br>\nВ поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/payment-registry/submit,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedGetPaymentRegistrySubmitResult
      parameters:
      - description: Идентификатор, связывающий запрос создания с запросом получения
          ответа
        example: cf99df08-0829-4614-8da3-0e440fd23fe0
        explode: true
        in: query
        name: correlationId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example0:
                  value:
                    paymentErrors: []
                    paymentRegistryId: 12
                    status: ACCEPTED
                Example1:
                  value:
                    error:
                      errorCode: INTERNAL_ERROR
                      errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте
                        позже.
                    paymentErrors:
                    - accountNumber: "40802123456789012345"
                      errors:
                      - errorDescription: Неверный номер счёта
                        fieldName: Номер счета
                      - errorDescription: Номер договора не найден
                        fieldName: Номер договора
                      - errorDescription: Не удалось найти среди активных и бывших
                          сотрудников компании
                        fieldName: Статус сотрудника
                      number: 1
                    paymentRegistryId: 12
                    status: ERROR
              schema:
                $ref: '#/components/schemas/SelfEmployedPaymentRegistryResultSubmitResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: 🔒 Получить результат подписания платёжного реестра самозанятых
      tags:
      - SelfEmployed
      x-accepts: application/json
  /api/v1/self-employed/payment-registry/{paymentRegistryId}:
    get:
      description: "\nМетод вызывается для получения информации по платежному реес\
        тру.\nВызывать необходимо не чаще, чем раз в 10 минут.<br>\nВ поле scope у\
        \ токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/payment-registry/manage,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedGetPaymentRegistry
      parameters:
      - description: Номер платежного реестра
        example: 12
        explode: false
        in: path
        name: paymentRegistryId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                loadDate: 2015-05-09T12:30
                payments:
                - accountNumber: "40802678901234567890"
                  collectionAmount: 50
                  number: 1
                  paymentPurpose: Оплата по договору
                  revenueTypeCode: "1"
                  selfEmployedInfo:
                    firstName: Петр
                    lastName: Петров
                    middleName: Петрович
                    recipientId: 123456789
                  status: EXECUTED
                  sum: 750
                - accountNumber: "40802678901234567890"
                  collectionAmount: 150
                  number: 1
                  paymentPurpose: Оплата по договору
                  revenueTypeCode: "2"
                  selfEmployedInfo:
                    firstName: Петр
                    lastName: Петров
                    middleName: Петрович
                    recipientId: 123456789
                  status: EXECUTED
                  sum: 250
                paymentsCount: 2
                status: EXECUTED
                totalSum: 1000
              schema:
                $ref: '#/components/schemas/SelfEmployedPaymentRegistry'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получение платежного реестра
      tags:
      - SelfEmployed
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/self-employed/recipients/create:
    post:
      description: "\nЗапрос является асинхронной операцией — его результат можно\
        \ получить, вызвав метод\n<a href=\"#operation/SelfEmployedGetSelfEmployedCreateResult\"\
        >Получить результат создания самозанятого с выпуском карты</a>, передав в\
        \ него соответствующий <b>correlationId</b>.\nВ поле scope у токена должен\
        \ присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/recipients/manage,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedCreateSelfEmployed
      requestBody:
        content:
          application/json:
            example:
              correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
              recipients:
              - addresses:
                - apartment: "512"
                  building: "1"
                  city: Санкт-Петербург
                  construction: "1"
                  country: Россия
                  district: Санкт-Петербург
                  house: "12"
                  postalCode: "123123"
                  settlement: Санкт-Петербург
                  state: Санкт-Петербург
                  street: ул. Херсонская
                  type: Жительства
                - apartment: "512"
                  building: "1"
                  city: Санкт-Петербург
                  construction: "1"
                  country: Россия
                  district: Санкт-Петербург
                  house: "12"
                  postalCode: "123123"
                  settlement: Санкт-Петербург
                  state: Санкт-Петербург
                  street: ул. Херсонская
                  type: Регистрации
                birthDate: 1967-12-25
                birthPlace: Санкт-Петербург
                citizenship: Санкт-Петербург
                documents:
                - date: 2015-05-09
                  division: 256-512
                  expireDate: 2025-05-09
                  number: "131072"
                  organization: ФМС
                  serial: "2048"
                  type: Паспорт
                email: example@example.com
                firstName: Иван
                lastName: Иванов
                latinFirstName: Ivan
                latinLastName: Ivanov
                middleName: Иванович
                number: 1
                phones:
                - number: +72565121024
                  type: Мобильный
                registrationInfo:
                  activityCodes:
                  - "1"
                  - "2"
                  - "3"
                  oktmo: oktmo
            schema:
              $ref: '#/components/schemas/CreateSelfEmployedRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                correlationId: cf99df08-0829-4614-8da3-0e440fd23fe0
              schema:
                $ref: '#/components/schemas/CreateSelfEmployedResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Создать черновики анкет самозанятых
      tags:
      - SelfEmployed
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/self-employed/recipients/create/result:
    get:
      description: "\nМетод возвращает результат запроса на создание самозанятого\
        .\nОтвет на запрос создания хранится в течение 2-х дней.<br>\nВ поле scope\
        \ у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/recipients/manage,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedGetSelfEmployedCreateResult
      parameters:
      - description: Идентификатор, связывающий запрос создания с запросом получения
          ответа
        example: cf99df08-0829-4614-8da3-0e440fd23fe0
        explode: true
        in: query
        name: correlationId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example0:
                  value:
                    recipientResults:
                    - errors: []
                      firstName: Иван
                      lastName: Иванов
                      middleName: Иванович
                      number: 1
                      recipientId: 2
                      status: CREATED
                Example1:
                  value:
                    recipientResults:
                    - errors:
                      - errorDescription: Вам должно быть от 14 до 100 лет
                        fieldName: Дата рождения
                      - errorDescription: Дата должна быть не ранее 01.07.1997
                        fieldName: Документ
                      - errorDescription: Отсутствует адрес данного типа
                        fieldName: Адрес
                      firstName: Иван
                      lastName: Иванов
                      middleName: Иванович
                      number: 1
                      status: ERROR
              schema:
                $ref: '#/components/schemas/CreateSelfEmployedResultResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить результат создания черновиков анкет самозанятых
      tags:
      - SelfEmployed
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/self-employed/recipients/list:
    post:
      description: "\nМетод вызывается для получения информации по самозанятым. Вы\
        зывать необходимо не чаще, чем раз в 10 минут.<br>\nЗаявка для добавление\
        \ самозанятого создается в статусе DRAFT, после чего ее необходимо отправи\
        ть в Личном кабинете. Отправленный самозанятый перейдет в статус ACTIVE.<br>\n\
        В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/self-employed/recipients/manage,\
        \ где {inn} — ИНН клиента, а {kpp} — КПП клиента.\n        "
      operationId: SelfEmployedList
      requestBody:
        content:
          application/json:
            example:
              recipientIds:
              - 1
              - 2
              - 3
            schema:
              $ref: '#/components/schemas/SelfEmployedInfoRequest'
        description: Список идентификаторов самозанятых
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                recipients:
                - bankInfo:
                    accountNumber: "40817678901234567890"
                    agreementNumber: "7007131001"
                  birthDate: 1958-09-05
                  documents:
                  - date: 2015-05-09
                    division: 256-512
                    expireDate: 2025-05-09
                    number: "131072"
                    organization: ФМС Семи Королевств
                    serial: "2048"
                    type: Паспорт
                  firstName: Иван
                  id: 1
                  lastName: Иванов
                  middleName: Иванович
                  phones:
                  - number: +72565121024
                    type: Мобильный
                  registrationInfo:
                    activityCodes:
                    - "1"
                    - "2"
                    - "3"
                    oktmo: oktmo
                  selfEmployedStatus: ACTIVE
                  status: ACTIVE
              schema:
                $ref: '#/components/schemas/SelfEmployedResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить информацию по самозанятым
      tags:
      - SelfEmployed
      x-contentType: application/json
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v1/tacq/operations/terminal/{terminalKey}:
    get:
      description: 'Необходимо согласие пользователя на: "Получение операций по терминалу".
        В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/tacq/operations/get,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента. Запросы с количеством операций
        более 1000 или периодом более одного дня не поддерживаются и будут возвращать
        ошибку.'
      operationId: getApiV1TacqOperationsTerminalTerminalkey
      parameters:
      - description: Серийный номер терминала
        example: 7L594999
        explode: false
        in: path
        name: terminalKey
        required: true
        schema:
          type: string
        style: simple
      - description: Дата начала периода. В формате UTC.
        example: 2015-12-12T13:10:10Z
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: Дата конца периода. В формате UTC.
        example: 2015-12-13T12:10:10Z
        explode: true
        in: query
        name: till
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: Максимальное количество операций.
        example: 1000
        explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int64
          maximum: 1000
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                lastTransactionDate: 2020-10-20T13:10:09Z
                operations:
                - amount: 1000
                  cardNumber: 999999xxxxxx9999
                  rrn: "999999999999"
                  transactionDate: 2020-10-20T13:10:09Z
                  type: Debit
              schema:
                $ref: '#/components/schemas/TacqOperationResponse'
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить операции по терминалу за период
      tags:
      - TradeAcquiring
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v2/bank-accounts:
    get:
      deprecated: true
      description: 'Необходимо согласие пользователя на доступ к: "Информации о счетах
        компании". В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/bank-accounts/get,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.'
      operationId: getApiV2Bank-accounts
      responses:
        "200":
          content:
            application/json:
              examples:
                Расчетные счета:
                  value:
                  - accountNumber: "40802678901234567890"
                    accountType: Current
                    balance:
                      authorized: 0
                      otb: 45089
                      pendingPayments: 0
                      pendingRequisitions: 0
                    bankBik: "123456789"
                    currency: "643"
                    name: Валютный фунтовый счет
                    transitAccount:
                      accountNumber: "11223344556677889900"
                      balance: 123.23
              schema:
                items:
                  $ref: '#/components/schemas/AccountInfo1'
                type: array
          description: Расчетные счета
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить счета
      tags:
      - Excerpts
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
  /api/v3/bank-accounts:
    get:
      description: 'Необходимо согласие пользователя на доступ к: "Информации о счетах
        компании". В поле scope у токена должен присутствовать доступ вида opensme/inn/[{inn}]/kpp/[{kpp}]/bank-accounts/get,
        где {inn} — ИНН клиента, а {kpp} — КПП клиента.'
      operationId: getApiV3Bank-accounts
      responses:
        "200":
          content:
            application/json:
              examples:
                Расчетные счета:
                  value:
                  - accountNumber: "40802678901234567890"
                    accountType: Current
                    activationDate: 2010-08-03
                    balance:
                      authorized: 0
                      otb: 45089
                      pendingPayments: 0
                      pendingRequisitions: 0
                    bankBik: "123456789"
                    currency: "643"
                    name: Валютный фунтовый счет
                    transitAccount:
                      accountNumber: "11223344556677889900"
                      balance: 123.23
              schema:
                items:
                  $ref: '#/components/schemas/AccountInfo2'
                type: array
          description: Расчетные счета
        "400":
          content:
            application/json:
              example:
                errorCode: VALIDATION_ERROR
                errorId: retw6789
                errorMessage: Некорректно заполнен ИНН
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              example:
                errorCode: UNAUTHORIZED
                errorId: asdq3412
                errorMessage: Не хватает учетных данных
              schema:
                $ref: '#/components/schemas/AuthenticationFailedResponse'
          description: Ошибка аутентификации
        "403":
          content:
            application/json:
              example:
                errorCode: FORBIDDEN
                errorId: rtbe4567
                errorMessage: Неправильный Tls сертификат
              schema:
                $ref: '#/components/schemas/AuthorizationFailedResponse'
          description: Ошибка авторизации
        "422":
          content:
            application/json:
              example:
                errorCode: INSUFFICIENT_FUNDS
                errorId: bcde3412
                errorMessage: На балансе недостаточно средств
              schema:
                $ref: '#/components/schemas/BusinessErrorResponse'
          description: Ошибка при обработке данных
        "429":
          content:
            application/json:
              example:
                errorCode: TOO_MANY_REQUESTS
                errorId: acdf000
                errorMessage: Слишком много запросов. Попробуйте позже
              schema:
                $ref: '#/components/schemas/TooManyRequestsErrorResponse'
          description: Слишком много запросов
        "500":
          content:
            application/json:
              example:
                errorCode: INTERNAL_ERROR
                errorId: asdq3412
                errorMessage: Непредвиденная ошибка. Пожалуйста, попробуйте позже
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Ошибка сервера
      security:
      - httpAuth: []
      summary: Получить счета
      tags:
      - Excerpts
      x-accepts: application/json
    servers:
    - url: https://business.tinkoff.ru/openapi
components:
  schemas:
    AccountInfo:
      example:
        balance:
          pendingRequisitions: 5.962133916683182
          authorized: 0.8008281904610115
          otb: 6.027456183070403
          pendingPayments: 1.4658129805029452
        currency: currency
        accountNumber: accountNumber
      properties:
        accountNumber:
          description: Расчетный счет организации
          type: string
        balance:
          $ref: '#/components/schemas/Balance'
        currency:
          description: Код валюты счета по ОКВ (цифрами)
          type: string
      required:
      - accountNumber
      - balance
      - currency
      type: object
    AccountInfo1:
      example:
        bankBik: bankBik
        balance:
          pendingRequisitions: 5.962133916683182
          authorized: 0.8008281904610115
          otb: 6.027456183070403
          pendingPayments: 1.4658129805029452
        accountType: Current
        name: name
        currency: currency
        transitAccount:
          balance: balance
          accountNumber: accountNumber
        accountNumber: accountNumber
      properties:
        accountNumber:
          description: Расчетный счет организации
          type: string
        accountType:
          description: |2

            Тип счета. Может принимать одно из четырех значений:
            <ul>
            <li>Current - расчетный счет</li>
            <li>Tax - счет Тинькофф Бухгалтерии</li>
            <li>Tender - специальный счет для участия в госзакупках</li>
            <li>Overnight - счет Overnight </li>
            </ul>
          enum:
          - Current
          - Tax
          - Tender
          - Overnight
          type: string
          x-enum-varnames:
          - CURRENT
          - TAX
          - TENDER
          - OVERNIGHT
        balance:
          $ref: '#/components/schemas/Balance'
        bankBik:
          description: БИК банка
          pattern: \d{9}
          type: string
        currency:
          description: Код валюты счета по ОКВ (цифрами)
          type: string
        name:
          description: Наименование счета
          type: string
        transitAccount:
          $ref: '#/components/schemas/TransitAccount'
      required:
      - accountNumber
      - accountType
      - balance
      - bankBik
      - currency
      - name
      type: object
    AccountInfo2:
      example:
        bankBik: bankBik
        balance:
          pendingRequisitions: 5.962133916683182
          authorized: 0.8008281904610115
          otb: 6.027456183070403
          pendingPayments: 1.4658129805029452
        accountType: accountType
        name: name
        currency: currency
        transitAccount:
          balance: balance
          accountNumber: accountNumber
        accountNumber: accountNumber
        activationDate: 2000-01-23
      properties:
        accountNumber:
          description: Расчетный счет организации
          type: string
        accountType:
          description: |2

            Тип счета. Может принимать одно из следующих значений(список вариантов значений может пополняться):
            <ul>
            <li>Current - расчетный счет</li>
            <li>Tax - счет Тинькофф Бухгалтерии</li>
            <li>Overnight - счет Overnight </li>
            <li>Cashbox - бизнес-копилка </li>
            <li>Tender - специальный счет для участия в госзакупках </li>
            <li>Trust - специальный счет доверительного управляющего ПИФ </li>
            <li>Broker - специальный брокерский счет</li>
            <li>BankPaymentAgent - специальный счет банковского платежного агента </li>
            <li>PaymentAgent - счет платежного агента </li>
            <li>Nominal - номинальный счет </li>
            <li>NominalIpo - номинальный счет оператора инвестиционной платформы</li>
            <li>TrustManagementSmp - специальный счет доверительного управления </li>
            </ul>
          type: string
        activationDate:
          description: Дата активации
          format: date
          type: string
        balance:
          $ref: '#/components/schemas/Balance'
        bankBik:
          description: БИК банка
          pattern: \d{9}
          type: string
        currency:
          description: Код валюты счета по ОКВ (цифрами)
          type: string
        name:
          description: Наименование счета
          type: string
        transitAccount:
          $ref: '#/components/schemas/TransitAccount'
      required:
      - accountNumber
      - accountType
      - balance
      - bankBik
      - currency
      - name
      type: object
    ActiveOffer:
      example:
        numberOfRealised: 1
        trancheStatementCount: 7
        cashbackAmount: 5
        quantityGraceStatement: 1
        image1252: image1252
        merchantName: merchantName
        offerType: offerType
        merchantId: 4
        web: web
        boundMoneyMin: 6
        trancheDuration: 6
        id: 7
        numberOfContacts: 7
        merchantSubcategory: merchantSubcategory
        onlineSale: true
        advert:
          textFormatted: textFormatted
          text: text
          title: title
        boundMoneyMax: 0
        cashbackPercent: 5
        image280: image280
        closeDate: 2000-01-23T04:56:07.000+00:00
        single: true
        topBorder: 1
        phone: phone
        brandId: 1
        merchantCategories:
        - categoryType: categoryType
          code: code
          merchantCategoryWeight: 2
          imagePath: imagePath
          name: name
          categoryWeight: 3
          categoryId: 9
        - categoryType: categoryType
          code: code
          merchantCategoryWeight: 2
          imagePath: imagePath
          name: name
          categoryWeight: 3
          categoryId: 9
        openDate: 2000-01-23T04:56:07.000+00:00
        image626: image626
        clientRate: 2
      properties:
        advert:
          $ref: '#/components/schemas/ActiveOfferAdvert'
        boundMoneyMax:
          description: Ограничение по сумме покупке сверху
          format: int64
          type: integer
        boundMoneyMin:
          description: Ограничение по сумме покупке снизу
          format: int64
          type: integer
        brandId:
          description: Уникальный id бренда
          format: int64
          type: integer
        cashbackAmount:
          description: Фиксированный размер бонуса
          format: int64
          type: integer
        cashbackPercent:
          description: Процент начисления бонуса
          format: int64
          type: integer
        clientRate:
          description: Процентная ставка годовых на рассрочку
          format: int64
          type: integer
        closeDate:
          description: Дата завершения действия оффера для клиентов
          format: date-time
          type: string
        id:
          description: Уникальный id оффера
          format: int64
          type: integer
        image1252:
          description: Ссылка на картинку оффера размера 1252
          type: string
        image280:
          description: Ссылка на лейбл, лого
          type: string
        image626:
          description: Ссылка на картинку оффера размера 626
          type: string
        merchantCategories:
          description: Категории партнера
          items:
            $ref: '#/components/schemas/MerchantCategory'
          type: array
        merchantId:
          description: Уникальный id партнера
          format: int64
          type: integer
        merchantName:
          description: Наименование партнера
          type: string
        merchantSubcategory:
          description: Подкатегория партнера
          type: string
        numberOfContacts:
          description: Количество точек продаж
          type: integer
        numberOfRealised:
          description: Количество покупок, на которое распространяется спецпредложение
          format: int64
          type: integer
        offerType:
          description: Тип оффера. Доступные значения 'STANDARD', 'SPECIAL_CREDIT'
          type: string
        onlineSale:
          description: Флаг онлайн признака - оффер действует на покупки онлайн
          type: boolean
        openDate:
          description: Дата начала действия оффера для клиентов
          format: date-time
          type: string
        phone:
          description: Телефон партнера
          type: string
        quantityGraceStatement:
          description: Количество беспроцентных расчетных периодов
          format: int64
          type: integer
        single:
          description: Флаг оффера на одну покупку
          type: boolean
        topBorder:
          description: Верхняя планка кэшбэка
          format: int64
          type: integer
        trancheDuration:
          description: Срок начисления ставки по рассрочке. В днях
          format: int64
          type: integer
        trancheStatementCount:
          description: Длина рассрочки в расчетных периодах
          format: int64
          type: integer
        web:
          description: Сайт партнера
          type: string
      required:
      - id
      - merchantName
      - offerType
      - single
      type: object
    ActiveOfferAdvert:
      description: Рекламная информация оффера
      example:
        textFormatted: textFormatted
        text: text
        title: title
      properties:
        text:
          description: Рекламный текст оффера
          type: string
        textFormatted:
          description: Форматированный рекламный текст оффера
          type: string
        title:
          description: Рекламный заголовок оффера
          type: string
      type: object
    ActiveOffersResponse:
      example:
        data:
        - numberOfRealised: 1
          trancheStatementCount: 7
          cashbackAmount: 5
          quantityGraceStatement: 1
          image1252: image1252
          merchantName: merchantName
          offerType: offerType
          merchantId: 4
          web: web
          boundMoneyMin: 6
          trancheDuration: 6
          id: 7
          numberOfContacts: 7
          merchantSubcategory: merchantSubcategory
          onlineSale: true
          advert:
            textFormatted: textFormatted
            text: text
            title: title
          boundMoneyMax: 0
          cashbackPercent: 5
          image280: image280
          closeDate: 2000-01-23T04:56:07.000+00:00
          single: true
          topBorder: 1
          phone: phone
          brandId: 1
          merchantCategories:
          - categoryType: categoryType
            code: code
            merchantCategoryWeight: 2
            imagePath: imagePath
            name: name
            categoryWeight: 3
            categoryId: 9
          - categoryType: categoryType
            code: code
            merchantCategoryWeight: 2
            imagePath: imagePath
            name: name
            categoryWeight: 3
            categoryId: 9
          openDate: 2000-01-23T04:56:07.000+00:00
          image626: image626
          clientRate: 2
        - numberOfRealised: 1
          trancheStatementCount: 7
          cashbackAmount: 5
          quantityGraceStatement: 1
          image1252: image1252
          merchantName: merchantName
          offerType: offerType
          merchantId: 4
          web: web
          boundMoneyMin: 6
          trancheDuration: 6
          id: 7
          numberOfContacts: 7
          merchantSubcategory: merchantSubcategory
          onlineSale: true
          advert:
            textFormatted: textFormatted
            text: text
            title: title
          boundMoneyMax: 0
          cashbackPercent: 5
          image280: image280
          closeDate: 2000-01-23T04:56:07.000+00:00
          single: true
          topBorder: 1
          phone: phone
          brandId: 1
          merchantCategories:
          - categoryType: categoryType
            code: code
            merchantCategoryWeight: 2
            imagePath: imagePath
            name: name
            categoryWeight: 3
            categoryId: 9
          - categoryType: categoryType
            code: code
            merchantCategoryWeight: 2
            imagePath: imagePath
            name: name
            categoryWeight: 3
            categoryId: 9
          openDate: 2000-01-23T04:56:07.000+00:00
          image626: image626
          clientRate: 2
      properties:
        data:
          description: Офферы текущей страницы
          items:
            $ref: '#/components/schemas/ActiveOffer'
          type: array
      type: object
    Address:
      description: Адрес, по которому необходимо получить доступные интервалы для
        назначения встречи
      example:
        area: area
        country: country
        zipCode: zipCode
        city: city
        flat: flat
        street: street
        fullAddress: fullAddress
        construction: construction
        region: region
        house: house
        building: building
        settlement: settlement
      properties:
        area:
          description: Район
          type: string
        building:
          description: Корпус
          type: string
        city:
          description: Город
          type: string
        construction:
          description: Строение
          type: string
        country:
          description: Страна
          type: string
        flat:
          description: Квартира
          type: string
        fullAddress:
          description: Полный адрес
          type: string
        house:
          description: Дом
          type: string
        region:
          description: Регион
          type: string
        settlement:
          description: Поселение
          type: string
        street:
          description: Улица
          type: string
        zipCode:
          description: Почтовый индекс
          type: string
      required:
      - fullAddress
      type: object
    AddressResponse:
      example:
        country: country
        zipCode: zipCode
        fiasCode: fiasCode
        address: address
        city: city
        housing: housing
        addressType: RESIDENCE_ADDRESS
        latitude: 0.8008281904610115
        house: house
        building: building
        settlement: settlement
        claddrCode: claddrCode
        street: street
        district: district
        region: region
        apartment: apartment
        longitude: 6.027456183070403
        primary: true
      properties:
        address:
          description: Полный адрес
          type: string
        addressType:
          description: |2

            Тип адреса. Может принимать одно из трех значений:
            <ul>
            <li>REGISTRATION_ADDRESS - адрес регистрации</li>
            <li>WORK_ADDRESS - рабочий адрес</li>
            <li>RESIDENCE_ADDRESS - домашний адрес</li>
            </ul>
          enum:
          - RESIDENCE_ADDRESS
          - REGISTRATION_ADDRESS
          - WORK_ADDRESS
          type: string
          x-enum-varnames:
          - RESIDENCE_ADDRESS
          - REGISTRATION_ADDRESS
          - WORK_ADDRESS
        apartment:
          description: Квартира
          type: string
        building:
          description: Строение
          type: string
        city:
          description: Город
          type: string
        claddrCode:
          description: Код адреса в КЛАДР
          type: string
        country:
          description: Страна
          type: string
        district:
          description: Район
          type: string
        fiasCode:
          description: Код адреса в ФИАС
          type: string
        house:
          description: Номер дома
          type: string
        housing:
          description: Корпус
          type: string
        latitude:
          description: Широта
          format: double
          type: number
        longitude:
          description: Долгота
          format: double
          type: number
        primary:
          description: Является основным адресом
          type: boolean
        region:
          description: Регион
          type: string
        settlement:
          description: Населенный пункт
          type: string
        street:
          description: Улица
          type: string
        zipCode:
          description: Индекс
          type: string
      required:
      - addressType
      - primary
      type: object
    AddressesResponse:
      example:
        addresses:
        - country: country
          zipCode: zipCode
          fiasCode: fiasCode
          address: address
          city: city
          housing: housing
          addressType: RESIDENCE_ADDRESS
          latitude: 0.8008281904610115
          house: house
          building: building
          settlement: settlement
          claddrCode: claddrCode
          street: street
          district: district
          region: region
          apartment: apartment
          longitude: 6.027456183070403
          primary: true
        - country: country
          zipCode: zipCode
          fiasCode: fiasCode
          address: address
          city: city
          housing: housing
          addressType: RESIDENCE_ADDRESS
          latitude: 0.8008281904610115
          house: house
          building: building
          settlement: settlement
          claddrCode: claddrCode
          street: street
          district: district
          region: region
          apartment: apartment
          longitude: 6.027456183070403
          primary: true
      properties:
        addresses:
          description: Адреса физического лица
          items:
            $ref: '#/components/schemas/AddressResponse'
          type: array
      type: object
    AuthenticationFailedResponse:
      properties:
        errorCode:
          description: Код ошибки
          type: string
        errorId:
          description: Уникальный идентификатор ошибки
          type: string
        errorMessage:
          description: Текст ошибки
          type: string
      required:
      - errorCode
      - errorId
      - errorMessage
      type: object
    AuthorizationFailedResponse:
      properties:
        errorCode:
          description: Код ошибки
          type: string
        errorId:
          description: Уникальный идентификатор ошибки
          type: string
        errorMessage:
          description: Текст ошибки
          type: string
      required:
      - errorCode
      - errorId
      - errorMessage
      type: object
    Balance:
      description: Баланс счета
      example:
        pendingRequisitions: 5.962133916683182
        authorized: 0.8008281904610115
        otb: 6.027456183070403
        pendingPayments: 1.4658129805029452
      properties:
        authorized:
          description: Сумма авторизаций (захолдированные на счете средства)
          type: number
        otb:
          description: Доступный остаток
          type: number
        pendingPayments:
          description: Сумма платежей в картотеке клиента (собственные платежи)
          type: number
        pendingRequisitions:
          description: Сумма платежей в картотеке банка (требования к клиенту)
          type: number
      required:
      - authorized
      - otb
      - pendingPayments
      - pendingRequisitions
      type: object
    Bank:
      description: Информация о банке
      example:
        bankInn: bankInn
        corrAccount: corrAccount
        bankBic: bankBic
        bankName: bankName
        bankAddress: bankAddress
      properties:
        bankAddress:
          description: Адрес банка
          type: string
        bankBic:
          description: БИК
          type: string
        bankInn:
          description: ИНН
          type: string
        bankName:
          description: Название банка
          type: string
        corrAccount:
          description: Корреспондентский счет
          type: string
      required:
      - bankAddress
      - bankBic
      - bankInn
      - bankName
      - corrAccount
      type: object
    BankInfo:
      example:
        corAccount: corAccount
        bik: bik
        name: name
      properties:
        bik:
          description: БИК банка получателя
          pattern: \d{9}
          type: string
        corAccount:
          description: Корреспондентский счёт банка получателя
          pattern: \d{20}
          type: string
        name:
          description: Наименование банка получателя
          maxLength: 255
          minLength: 1
          type: string
      required:
      - bik
      - corAccount
      - name
      type: object
    BankInfo1:
      description: Банковская информация сотрудника
      example:
        accountNumber: accountNumber
        agreementNumber: agreementNumber
      properties:
        accountNumber:
          description: Номер счета сотрудника
          type: string
        agreementNumber:
          description: Номер договора сотрудника
          type: string
      type: object
    BankInfo2:
      description: Банковская информация самозанятого
      example:
        accountNumber: accountNumber
        agreementNumber: agreementNumber
      properties:
        accountNumber:
          description: Номер счета самозанятого
          type: string
        agreementNumber:
          description: Номер договора самозанятого
          type: string
      type: object
    BankStatement:
      example:
        income: 0.8008281904610115
        saldoOut: 5.637376656633329
        accountNumber: accountNumber
        operation:
        - date: 2000-01-23
          taxPeriod: taxPeriod
          creatorStatus: creatorStatus
          recipientInn: recipientInn
          paymentType: paymentType
          recipientKpp: recipientKpp
          taxEvidence: taxEvidence
          recipientAccount: recipientAccount
          payerCorrAccount: payerCorrAccount
          operationId: operationId
          payerBic: payerBic
          payerName: payerName
          id: id
          uin: uin
          taxDocNumber: taxDocNumber
          taxType: taxType
          amount: 6.027456183070403
          payerBank: payerBank
          payerKpp: payerKpp
          payerInn: payerInn
          recipientBank: recipientBank
          executionOrder: executionOrder
          payerAccount: payerAccount
          recipientCorrAccount: recipientCorrAccount
          oktmo: oktmo
          kbk: kbk
          recipient: recipient
          operationType: operationType
          paymentPurpose: paymentPurpose
          taxDocDate: taxDocDate
          chargeDate: 2000-01-23
          drawDate: 2000-01-23
          recipientBic: recipientBic
        - date: 2000-01-23
          taxPeriod: taxPeriod
          creatorStatus: creatorStatus
          recipientInn: recipientInn
          paymentType: paymentType
          recipientKpp: recipientKpp
          taxEvidence: taxEvidence
          recipientAccount: recipientAccount
          payerCorrAccount: payerCorrAccount
          operationId: operationId
          payerBic: payerBic
          payerName: payerName
          id: id
          uin: uin
          taxDocNumber: taxDocNumber
          taxType: taxType
          amount: 6.027456183070403
          payerBank: payerBank
          payerKpp: payerKpp
          payerInn: payerInn
          recipientBank: recipientBank
          executionOrder: executionOrder
          payerAccount: payerAccount
          recipientCorrAccount: recipientCorrAccount
          oktmo: oktmo
          kbk: kbk
          recipient: recipient
          operationType: operationType
          paymentPurpose: paymentPurpose
          taxDocDate: taxDocDate
          chargeDate: 2000-01-23
          drawDate: 2000-01-23
          recipientBic: recipientBic
        saldoIn: 5.962133916683182
        outcome: 1.4658129805029452
      properties:
        accountNumber:
          description: Расчетный счет организации
          type: string
        income:
          description: Обороты входящих платежей
          type: number
        operation:
          description: Список операций по счету
          items:
            $ref: '#/components/schemas/BankStatementOperation'
          type: array
        outcome:
          description: Обороты исходящих платежей
          type: number
        saldoIn:
          description: Баланс на начало периода
          type: number
        saldoOut:
          description: Баланс на конец периода
          type: number
      required:
      - accountNumber
      - income
      - outcome
      - saldoIn
      - saldoOut
      type: object
    BankStatementOperation:
      example:
        date: 2000-01-23
        taxPeriod: taxPeriod
        creatorStatus: creatorStatus
        recipientInn: recipientInn
        paymentType: paymentType
        recipientKpp: recipientKpp
        taxEvidence: taxEvidence
        recipientAccount: recipientAccount
        payerCorrAccount: payerCorrAccount
        operationId: operationId
        payerBic: payerBic
        payerName: payerName
        id: id
        uin: uin
        taxDocNumber: taxDocNumber
        taxType: taxType
        amount: 6.027456183070403
        payerBank: payerBank
        payerKpp: payerKpp
        payerInn: payerInn
        recipientBank: recipientBank
        executionOrder: executionOrder
        payerAccount: payerAccount
        recipientCorrAccount: recipientCorrAccount
        oktmo: oktmo
        kbk: kbk
        recipient: recipient
        operationType: operationType
        paymentPurpose: paymentPurpose
        taxDocDate: taxDocDate
        chargeDate: 2000-01-23
        drawDate: 2000-01-23
        recipientBic: recipientBic
      properties:
        amount:
          description: Сумма платежа
          type: number
        chargeDate:
          description: Дата поступления средств на р/с получателя
          format: date
          type: string
        creatorStatus:
          description: Статус составителя расчетного документа
          type: string
        date:
          description: Дата документа
          format: date
          type: string
        drawDate:
          description: Дата списания средств с р/с плательщика
          format: date
          type: string
        executionOrder:
          description: Очередность платежа
          type: string
        id:
          description: Номер документа
          type: string
        kbk:
          description: Код бюджетной классификации
          type: string
        oktmo:
          description: Код ОКТМО территории, на которой мобилизуются денежные средства
            от уплаты налога, сбора и иного платежа
          type: string
        operationId:
          description: Уникальный идентификатор операции
          type: string
        operationType:
          description: 'Условное обозначение (шифр) документа, проводимого по счету
            в кредитной организации. Подробнее: http://www.consultant.ru/document/cons_doc_LAW_213488/f0d58093feca12dbef02bd44fd633f1c94b49da1/'
          pattern: \d{2}
          type: string
        payerAccount:
          description: Номер счета плательщика
          type: string
        payerBank:
          description: Банк плательщика
          type: string
        payerBic:
          description: БИК плательщика
          type: string
        payerCorrAccount:
          description: Кор.счет плательщика
          type: string
        payerInn:
          description: ИНН плательщика
          type: string
        payerKpp:
          description: КПП плательщика
          type: string
        payerName:
          description: Имя плательщика
          type: string
        paymentPurpose:
          description: Назначение платежа
          type: string
        paymentType:
          description: Вид платежа
          type: string
        recipient:
          description: Получатель платежа
          type: string
        recipientAccount:
          description: Номер счета получателя платежа
          type: string
        recipientBank:
          description: Банк получателя платежа
          type: string
        recipientBic:
          description: БИК получателя платежа
          type: string
        recipientCorrAccount:
          description: Кор.счет получателя платежа
          type: string
        recipientInn:
          description: ИНН получателя платежа
          type: string
        recipientKpp:
          description: КПП получателя
          type: string
        taxDocDate:
          description: Дата налогового документа
          type: string
        taxDocNumber:
          description: Номер налогового документа
          type: string
        taxEvidence:
          description: Основание налогового платежа
          type: string
        taxPeriod:
          description: Налоговый период / код таможенного органа
          type: string
        taxType:
          description: Тип налогового платежа
          type: string
        uin:
          description: 'Уникальный идентификатор платежа. Подробнее: http://www.consultant.ru/law/podborki/unikalnyj_identifikator_platezha/'
          type: string
      required:
      - amount
      - chargeDate
      - creatorStatus
      - date
      - drawDate
      - id
      - operationId
      - operationType
      - payerBank
      - payerBic
      - payerName
      - paymentPurpose
      - recipient
      - recipientAccount
      - recipientBank
      - recipientBic
      type: object
    BusinessErrorResponse:
      properties:
        errorCode:
          description: Код ошибки
          type: string
        errorDetails:
          additionalProperties:
            type: string
          type: object
        errorId:
          description: Уникальный идентификатор ошибки
          type: string
        errorMessage:
          description: Текст ошибки
          type: string
      required:
      - errorCode
      - errorId
      - errorMessage
      type: object
    CancelTaskRequest:
      example:
        reason: reason
      properties:
        reason:
          description: Причина отмены задания
          type: string
      required:
      - reason
      type: object
    CardInfoResponse:
      example:
        cardLastFourDigits: cardLastFourDigits
        cardBin: cardBin
        accountNumber: accountNumber
        embossedName: embossedName
        isActive: true
        status: NORM
        ucid: 0
      properties:
        accountNumber:
          description: Номер рассчётного счёта, к которому привязана карта
          type: string
        cardBin:
          description: Первые 6 цифр номера карты (BIN карты)
          type: string
        cardLastFourDigits:
          description: Последние 4 цифры номера карты
          type: string
        embossedName:
          description: Имя держателя карты
          type: string
        isActive:
          description: Флаг активации карты
          type: boolean
        status:
          description: |2-

            Статус карты:<ul>
            <li>"NORM" &ndash; карта активна</li>
            <li>"CLOSED" &ndash; карта неактивна</li>
            <li>"BLOCKED" &ndash; карта заблокирована</li>
            </ul>
          enum:
          - NORM
          - CLOSED
          - BLOCKED
          type: string
          x-enum-varnames:
          - NORM
          - CLOSED
          - BLOCKED
        ucid:
          description: Уникальный идентификатор карты
          format: int64
          type: integer
      required:
      - accountNumber
      - cardBin
      - cardLastFourDigits
      - embossedName
      - isActive
      - status
      - ucid
      type: object
    CardInfoSeqResponse:
      example:
        totalNumber: 5
        cards:
        - cardLastFourDigits: cardLastFourDigits
          cardBin: cardBin
          accountNumber: accountNumber
          embossedName: embossedName
          isActive: true
          status: NORM
          ucid: 0
        - cardLastFourDigits: cardLastFourDigits
          cardBin: cardBin
          accountNumber: accountNumber
          embossedName: embossedName
          isActive: true
          status: NORM
          ucid: 0
        offset: 1
        limit: 6
      properties:
        cards:
          description: Список карт компании
          items:
            $ref: '#/components/schemas/CardInfoResponse'
          type: array
        limit:
          description: Количество карт на странице
          type: integer
        offset:
          description: Количество пропущенных карт
          type: integer
        totalNumber:
          description: Общее количество карт
          type: integer
      required:
      - limit
      - offset
      - totalNumber
      type: object
    CardLimitsResponse:
      example:
        cashLimit:
          limitValue: 6.027456183070403
          limitPeriod: DAY
          limitRemain: 0.8008281904610115
        spendLimit:
          limitValue: 5.962133916683182
          limitPeriod: DAY
          limitRemain: 1.4658129805029452
        ucid: 5
      properties:
        cashLimit:
          $ref: '#/components/schemas/CashLimit'
        spendLimit:
          $ref: '#/components/schemas/SpendLimit'
        ucid:
          description: Уникальный идентификатор карты
          format: int64
          type: integer
      required:
      - cashLimit
      - spendLimit
      - ucid
      type: object
    CashLimit:
      description: Объект с информацией о лимите на снятия наличных
      example:
        limitValue: 6.027456183070403
        limitPeriod: DAY
        limitRemain: 0.8008281904610115
      properties:
        limitPeriod:
          description: |2-

            Период обновления доступного остатка лимита на снятия наличных:<ul>
            <li>"DAY" &ndash; доступный остаток станет равным лимиту в начале следующих суток</li>
            <li>"MONTH" &ndash; доступный остаток станет равным лимиту в начале следующего месяца</li>
            <li>"IRREGULAR" &ndash; доступный остаток станет равным лимиту только при обновлении лимита</li>
            <li>"CUSTOM" &ndash; период обновления лимита вручную установлен в дополнительное состояние, узнать которое вы можете у вашего персонального менеджера</li>
            </ul>
          enum:
          - DAY
          - MONTH
          - IRREGULAR
          - CUSTOM
          type: string
          x-enum-varnames:
          - DAY
          - MONTH
          - IRREGULAR
          - CUSTOM
        limitRemain:
          description: Доступный остаток лимита на снятия наличных в валюте счёта,
            к которому привязана карта
          type: number
        limitValue:
          description: Лимит на снятия наличных в валюте счёта, к которому привязана
            карта
          type: number
      required:
      - limitPeriod
      - limitRemain
      - limitValue
      type: object
    CashbackBalanceRequest:
      example:
        phoneNumber: phoneNumber
      properties:
        phoneNumber:
          description: Номер телефона клиента в формате E.164
          type: string
      required:
      - phoneNumber
      type: object
    CashbackBalanceResponse:
      example:
        monthCashback: monthCashback
        balance: balance
        allTimeCashback: allTimeCashback
      properties:
        allTimeCashback:
          description: Кэшбэк заработанный за всё время
          type: string
        balance:
          description: Текущий баланс кэшбэка клиента
          type: string
        monthCashback:
          description: Кэшбэк заработанный за календарный месяц
          type: string
      required:
      - allTimeCashback
      - balance
      - monthCashback
      type: object
    CashbackCancellationInfo:
      oneOf:
      - $ref: '#/components/schemas/CashbackLimitError'
      - $ref: '#/components/schemas/CashbackNoOffersAvailable'
      - $ref: '#/components/schemas/DuplicatedError'
      - $ref: '#/components/schemas/InternalError'
      - $ref: '#/components/schemas/ReceiptError'
      - $ref: '#/components/schemas/ReceiptRequestError'
      - $ref: '#/components/schemas/ValidationError'
    CashbackHistoryItem:
      example:
        receipt:
          date: 2000-01-23T04:56:07.000+00:00
          qrCodeAsString: qrCodeAsString
        cashback:
        - date: 2000-01-23T04:56:07.000+00:00
          amount: amount
          offerId: 0
        - date: 2000-01-23T04:56:07.000+00:00
          amount: amount
          offerId: 0
        status: PAID
      properties:
        cancellationInfo:
          $ref: '#/components/schemas/CashbackCancellationInfo'
        cashback:
          description: Детали кэшбэка за чек
          items:
            $ref: '#/components/schemas/CashbackInfoHistoryItem'
          type: array
        receipt:
          $ref: '#/components/schemas/ReceiptHistoryItem'
        status:
          description: |2

            Статус обработки чека. Может принимать следующие значения:
            <ul>
            <li>PENDING - в обработке</li>
            <li>CANCELED - отменен</li>
            <li>PAID - оплачен</li>
            </ul>
          enum:
          - PAID
          - CANCELED
          - PENDING
          type: string
          x-enum-varnames:
          - PAID
          - CANCELED
          - PENDING
      required:
      - receipt
      - status
      type: object
    CashbackHistoryRequest:
      example:
        phoneNumber: phoneNumber
        offset: 6
        limit: 0
      properties:
        limit:
          description: Максимальное количество элементов в ответе
          format: int64
          type: integer
        offset:
          description: Номер элемента(смещение), начиная с которого возвращать результат
          format: int64
          type: integer
        phoneNumber:
          description: Номер телефона клиента в формате E.164
          type: string
      required:
      - limit
      - offset
      - phoneNumber
      type: object
    CashbackHistoryResponse:
      example:
        data:
        - receipt:
            date: 2000-01-23T04:56:07.000+00:00
            qrCodeAsString: qrCodeAsString
          cashback:
          - date: 2000-01-23T04:56:07.000+00:00
            amount: amount
            offerId: 0
          - date: 2000-01-23T04:56:07.000+00:00
            amount: amount
            offerId: 0
          status: PAID
        - receipt:
            date: 2000-01-23T04:56:07.000+00:00
            qrCodeAsString: qrCodeAsString
          cashback:
          - date: 2000-01-23T04:56:07.000+00:00
            amount: amount
            offerId: 0
          - date: 2000-01-23T04:56:07.000+00:00
            amount: amount
            offerId: 0
          status: PAID
      properties:
        data:
          description: История начисления кэшбэка по чекам
          items:
            $ref: '#/components/schemas/CashbackHistoryItem'
          type: array
      type: object
    CashbackInfoHistoryItem:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        amount: amount
        offerId: 0
      properties:
        amount:
          description: Сумма кэшбэка
          type: string
        date:
          description: Дата начисления кэшбэка
          format: date-time
          type: string
        offerId:
          description: В рамках какого оффера было начисление
          format: int64
          type: integer
      required:
      - amount
      - date
      - offerId
      type: object
    CashbackLimitError:
      properties:
        message:
          description: Превышен лимит
          type: string
        type:
          description: CASHBACK_LIMIT_ERROR
          type: string
      required:
      - message
      - type
      type: object
    CashbackNoOffersAvailable:
      properties:
        message:
          description: Офферы для данного чека не найдены
          type: string
        type:
          description: CASHBACK_NO_OFFERS_AVAILABLE
          type: string
      required:
      - message
      - type
      type: object
    ClientMerchantCategory:
      example:
        merchantCategoryWeight: 7
        categoryWeight: 2
        categoryId: 5
      properties:
        categoryId:
          description: Id категории
          format: int64
          type: integer
        categoryWeight:
          description: Вес категории для клиента
          type: integer
        merchantCategoryWeight:
          description: Вес партнера в категории для клиента
          type: integer
      required:
      - categoryId
      type: object
    ClientOffer:
      example:
        cbAmount: 0
        countOfRealised: 1
        web: web
        weight: 9
        id: 5
        merchantCategories:
        - merchantCategoryWeight: 7
          categoryWeight: 2
          categoryId: 5
        - merchantCategoryWeight: 7
          categoryWeight: 2
          categoryId: 5
        viewDate: 2000-01-23T04:56:07.000+00:00
        cbPercent: 6
      properties:
        cbAmount:
          description: Фиксированный размер бонуса
          format: int64
          type: integer
        cbPercent:
          description: Процент начисления бонуса
          format: int64
          type: integer
        countOfRealised:
          description: Количество совершённых покупок по спецпредложению
          type: integer
        id:
          description: Уникальный id оффера
          format: int64
          type: integer
        merchantCategories:
          description: Список категорий партнера у клиента
          items:
            $ref: '#/components/schemas/ClientMerchantCategory'
          type: array
        viewDate:
          description: Дата просмотра оффера
          format: date-time
          type: string
        web:
          description: Персонализированная ссылка для клиента
          type: string
        weight:
          description: Вес партнера для клиента. Относительная величина для персонального
            ранжирования списка офферов
          type: integer
      required:
      - id
      type: object
    ClientOffersRequest:
      example:
        phoneNumber: phoneNumber
        region: region
      properties:
        phoneNumber:
          description: Номер телефона клиента в формате E.164
          type: string
        region:
          description: Регион клиента
          pattern: \d{2}
          type: string
      required:
      - phoneNumber
      - region
      type: object
    ClientOffersResponse:
      example:
        data:
        - cbAmount: 0
          countOfRealised: 1
          web: web
          weight: 9
          id: 5
          merchantCategories:
          - merchantCategoryWeight: 7
            categoryWeight: 2
            categoryId: 5
          - merchantCategoryWeight: 7
            categoryWeight: 2
            categoryId: 5
          viewDate: 2000-01-23T04:56:07.000+00:00
          cbPercent: 6
        - cbAmount: 0
          countOfRealised: 1
          web: web
          weight: 9
          id: 5
          merchantCategories:
          - merchantCategoryWeight: 7
            categoryWeight: 2
            categoryId: 5
          - merchantCategoryWeight: 7
            categoryWeight: 2
            categoryId: 5
          viewDate: 2000-01-23T04:56:07.000+00:00
          cbPercent: 6
      properties:
        data:
          description: Клиентские офферы текущей страницы
          items:
            $ref: '#/components/schemas/ClientOffer'
          type: array
      type: object
    CompanyInfoResponse:
      example:
        bank:
          bankInn: bankInn
          corrAccount: corrAccount
          bankBic: bankBic
          bankName: bankName
          bankAddress: bankAddress
        opf: opf
        city: city
        name: name
        registrationDate: 2000-01-23
        requisites:
          ogrn: ogrn
          address: address
          foreignName: foreignName
          inn: inn
          fullName: fullName
          kpp: kpp
      properties:
        bank:
          $ref: '#/components/schemas/Bank'
        city:
          description: Город
          type: string
        name:
          description: Название компании
          type: string
        opf:
          description: Организационно-правовая форма
          type: string
        registrationDate:
          description: Дата регистрации
          format: date
          type: string
        requisites:
          $ref: '#/components/schemas/Requisites'
      required:
      - bank
      - city
      - name
      - requisites
      type: object
    Contact:
      example:
        firstName: firstName
        lastName: lastName
        role: role
        documents:
        - null
        - null
        phones:
        - number: number
          type: MOBILE
        - number: number
          type: MOBILE
        middleName: middleName
        id: id
        birthDate: 2000-01-23
      properties:
        birthDate:
          description: Дата рождения
          format: date
          type: string
        documents:
          description: Документы удостоверяющие личность. Для роли REALTOR может быть
            пустым
          items:
            $ref: '#/components/schemas/IdentificationDocument'
          type: array
        firstName:
          description: Имя
          type: string
        id:
          description: Уникальный идентификатор контакта
          type: string
        lastName:
          description: Фамилия
          type: string
        middleName:
          description: Отчество
          type: string
        phones:
          description: Телефон
          items:
            $ref: '#/components/schemas/Phone'
          type: array
        role:
          description: Роль
          type: string
      required:
      - firstName
      - id
      - lastName
      - role
      type: object
    CreateAddress:
      example:
        country: country
        city: city
        street: street
        district: district
        postalCode: postalCode
        construction: construction
        state: state
        type: Жительства
        house: house
        apartment: apartment
        building: building
        settlement: settlement
      properties:
        apartment:
          description: Квартира
          type: string
        building:
          description: Здание
          type: string
        city:
          description: Город
          type: string
        construction:
          description: Корпус
          type: string
        country:
          description: Страна
          type: string
        district:
          description: Район
          type: string
        house:
          description: Дом
          type: string
        postalCode:
          description: Индекс
          type: string
        settlement:
          description: Населенный пункт
          type: string
        state:
          description: Регион
          type: string
        street:
          description: Улица
          type: string
        type:
          description: Тип адреса
          enum:
          - Жительства
          - Регистрации
          - Работы
          type: string
          x-enum-varnames:
          - ZHITEL_STVA
          - REGISTRATSII
          - RABOTY
      required:
      - postalCode
      - state
      - type
      type: object
    CreateAddress1:
      example:
        country: country
        city: city
        street: street
        district: district
        postalCode: postalCode
        construction: construction
        state: state
        type: Жительства
        house: house
        apartment: apartment
        building: building
        settlement: settlement
      properties:
        apartment:
          description: Квартира
          type: string
        building:
          description: Здание
          type: string
        city:
          description: Город
          type: string
        construction:
          description: Корпус
          type: string
        country:
          description: Страна
          type: string
        district:
          description: Район
          type: string
        house:
          description: Дом
          type: string
        postalCode:
          description: Индекс
          type: string
        settlement:
          description: Населенный пункт
          type: string
        state:
          description: Регион
          type: string
        street:
          description: Улица
          type: string
        type:
          description: Тип адреса
          enum:
          - Жительства
          - Регистрации
          type: string
          x-enum-varnames:
          - ZHITEL_STVA
          - REGISTRATSII
      required:
      - postalCode
      - state
      - type
      type: object
    CreateAndSendInvoiceRequest:
      example:
        dueDate: 2000-01-23
        invoiceNumber: invoiceNumber
        accountNumber: accountNumber
        invoiceDate: 2000-01-23
        items:
        - amount: 0.8008281904610115
          unit: unit
          price: 6.027456183070403
          name: name
          vat: None
        - amount: 0.8008281904610115
          unit: unit
          price: 6.027456183070403
          name: name
          vat: None
        payer:
          inn: inn
          name: name
          kpp: kpp
        contacts:
        - email: email
        - email: email
      properties:
        accountNumber:
          description: Рублевый расчетный счет отправителя. Если счет не указан, то
            для выставления счета будет использоваться главный счет компании.
          pattern: ^(\d{20}|\d{22})$
          type: string
        contacts:
          description: Контакты для получения счета
          items:
            $ref: '#/components/schemas/Email'
          type: array
        dueDate:
          description: Срок оплаты. Должен быть не меньше даты выставления счета.
          format: date
          type: string
        invoiceDate:
          description: Дата выставления счета. Если не указана, счет выставляется
            текущей датой.
          format: date
          type: string
        invoiceNumber:
          description: Номер счета
          pattern: ^\d{1,15}$
          type: string
        items:
          description: Позиции счета
          items:
            $ref: '#/components/schemas/InvoiceItemInfo'
          type: array
        payer:
          $ref: '#/components/schemas/InvoicePayerInfo'
      required:
      - invoiceNumber
      type: object
    CreateAndSendInvoiceResponse:
      example:
        pdfUrl: pdfUrl
      properties:
        pdfUrl:
          description: Ссылка на pdf выставленного счета
          type: string
      required:
      - pdfUrl
      type: object
    CreateDocument:
      example:
        date: 2000-01-23
        division: division
        number: number
        serial: serial
        organization: organization
        expireDate: 2000-01-23
        type: Паспорт
      properties:
        date:
          description: Дата
          format: date
          type: string
        division:
          description: Код подразделения
          type: string
        expireDate:
          description: Дата истечения
          format: date
          type: string
        number:
          description: Номер документа
          type: string
        organization:
          description: Кем выдан
          type: string
        serial:
          description: Серия
          type: string
        type:
          description: Тип документа
          enum:
          - Паспорт
          - Иностранный паспорт
          - Загр. паспорт иностранного гр.
          - Служебный/официальный паспорт
          - Дипломатический паспорт
          - Миграционная карта
          - Разр. на временное проживание
          - Виза
          - Вид на жительство
          type: string
          x-enum-varnames:
          - PASPORT
          - INOSTRANNYJ_PASPORT
          - ZAGR_PASPORT_INOSTRANNOGO_GR
          - SLUZHEBNYJ_OFITSIAL_NYJ_PASPORT
          - DIPLOMATICHESKIJ_PASPORT
          - MIGRATSIONNAJA_KARTA
          - RAZR_NA_VREMENNOE_PROZHIVANIE
          - VIZA
          - VID_NA_ZHITEL_STVO
      required:
      - date
      - organization
      - serial
      - type
      type: object
    CreateDocument1:
      example:
        date: 2000-01-23
        division: division
        number: number
        serial: serial
        organization: organization
        expireDate: 2000-01-23
        type: Паспорт
      properties:
        date:
          description: Дата
          format: date
          type: string
        division:
          description: Код подразделения
          type: string
        expireDate:
          description: Дата истечения
          format: date
          type: string
        number:
          description: Номер документа
          type: string
        organization:
          description: Кем выдан
          type: string
        serial:
          description: Серия
          type: string
        type:
          description: Тип документа
          enum:
          - Паспорт
          - Иностранный паспорт
          - Загр. паспорт иностранного гр.
          - Служебный/официальный паспорт
          - Дипломатический паспорт
          - Миграционная карта
          - Разр. на временное проживание
          - Виза
          - Вид на жительство
          type: string
          x-enum-varnames:
          - PASPORT
          - INOSTRANNYJ_PASPORT
          - ZAGR_PASPORT_INOSTRANNOGO_GR
          - SLUZHEBNYJ_OFITSIAL_NYJ_PASPORT
          - DIPLOMATICHESKIJ_PASPORT
          - MIGRATSIONNAJA_KARTA
          - RAZR_NA_VREMENNOE_PROZHIVANIE
          - VIZA
          - VID_NA_ZHITEL_STVO
      required:
      - date
      - organization
      - serial
      - type
      type: object
    CreateEmployeeResultResponse:
      example:
        employeeResults:
        - firstName: firstName
          lastName: lastName
          number: 6
          employeeId: 0
          middleName: middleName
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
          status: CREATED
        - firstName: firstName
          lastName: lastName
          number: 6
          employeeId: 0
          middleName: middleName
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
          status: CREATED
      properties:
        employeeResults:
          description: Список результатов создания сотрудников
          items:
            $ref: '#/components/schemas/EmployeesResponse'
          type: array
      type: object
    CreateEmployeesRequest:
      example:
        correlationId: correlationId
        employees:
        - lastName: lastName
          addresses:
          - country: country
            city: city
            street: street
            district: district
            postalCode: postalCode
            construction: construction
            state: state
            type: Жительства
            house: house
            apartment: apartment
            building: building
            settlement: settlement
          - country: country
            city: city
            street: street
            district: district
            postalCode: postalCode
            construction: construction
            state: state
            type: Жительства
            house: house
            apartment: apartment
            building: building
            settlement: settlement
          documents:
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          citizenship: citizenship
          phones:
          - number: number
            type: Мобильный
          - number: number
            type: Мобильный
          birthDate: 2000-01-23
          jobInfo:
            position: position
          birthPlace: birthPlace
          firstName: firstName
          number: 0
          latinFirstName: latinFirstName
          middleName: middleName
          latinLastName: latinLastName
          email: email
        - lastName: lastName
          addresses:
          - country: country
            city: city
            street: street
            district: district
            postalCode: postalCode
            construction: construction
            state: state
            type: Жительства
            house: house
            apartment: apartment
            building: building
            settlement: settlement
          - country: country
            city: city
            street: street
            district: district
            postalCode: postalCode
            construction: construction
            state: state
            type: Жительства
            house: house
            apartment: apartment
            building: building
            settlement: settlement
          documents:
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          citizenship: citizenship
          phones:
          - number: number
            type: Мобильный
          - number: number
            type: Мобильный
          birthDate: 2000-01-23
          jobInfo:
            position: position
          birthPlace: birthPlace
          firstName: firstName
          number: 0
          latinFirstName: latinFirstName
          middleName: middleName
          latinLastName: latinLastName
          email: email
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
        employees:
          description: Список сотрудников на создание
          items:
            $ref: '#/components/schemas/EmployeeCreateData'
          type: array
      required:
      - correlationId
      type: object
    CreateEmployeesResponse:
      example:
        correlationId: correlationId
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
      required:
      - correlationId
      type: object
    CreateJobInfo:
      description: Информация о работе
      example:
        position: position
      properties:
        position:
          description: Должность
          type: string
      required:
      - position
      type: object
    CreateMeetingRequest:
      example:
        commentForAgent: commentForAgent
        appointmentId: appointmentId
        intervalStartTime: intervalStartTime
        intervalEndTime: intervalEndTime
      properties:
        appointmentId:
          description: Идентификатор назначения встречи
          type: string
        commentForAgent:
          description: Комментарий ко встрече для представителя
          type: string
        intervalEndTime:
          description: Время конца интервала
          type: string
        intervalStartTime:
          description: Время начала интервала
          type: string
      required:
      - appointmentId
      - intervalEndTime
      - intervalStartTime
      type: object
    CreateMeetingResponse:
      example:
        meetingId: meetingId
      properties:
        meetingId:
          description: Идентификатор назначенной встречи
          type: string
      required:
      - meetingId
      type: object
    CreatePaymentDraftRequest:
      example:
        bankBik: bankBik
        date: 2000-01-23T04:56:07.000+00:00
        amount: 0.8008281904610115
        taxPayerStatus: taxPayerStatus
        bankAcnt: bankAcnt
        taxPeriod: taxPeriod
        documentNumber: documentNumber
        recipientCorrAccountNumber: recipientCorrAccountNumber
        inn: inn
        kpp: kpp
        revenueTypeCode: "1"
        accountNumber: accountNumber
        executionOrder: 1
        oktmo: oktmo
        taxEvidence: taxEvidence
        collectionAmountNumber: 6.027456183070403
        kbk: kbk
        recipientName: recipientName
        paymentPurpose: paymentPurpose
        uin: uin
        taxDocDate: taxDocDate
        taxDocNumber: taxDocNumber
      properties:
        accountNumber:
          description: Номер счета плательщика
          type: string
        amount:
          description: Сумма платежа
          type: number
        bankAcnt:
          description: Номер счета получателя
          type: string
        bankBik:
          description: БИК банка
          type: string
        collectionAmountNumber:
          description: Удержанная сумма в рублях. Актуально только при платежах в
            пользу физлиц.
          type: number
        date:
          description: Дата и время исполнения платежа. Может быть в будущем, либо
            данное поле может быть не передано. **Если поле не передано, подписанный
            документ будет принят к исполнению немедленно.**
          format: date-time
          type: string
        documentNumber:
          description: Номер распоряжения, определяемый клиентом.
          pattern: ^(\d{1,6})$
          type: string
        executionOrder:
          description: Очередность платежа
          maximum: 5
          minimum: 1
          type: integer
        inn:
          description: ИНН получателя. Если платеж выполняется в пользу физ. лица,
            и его ИНН неизвестен, в поле ИНН необходимо указать значение - "0". Во
            всех остальных случаях необходимо передавать фактический ИНН получателя.
          pattern: ^(\d{12}|\d{10}|0{1})$
          type: string
        kbk:
          description: Код бюджетной классификации. Поле платежки 104. Если платеж
            не налоговый, в запросе поставьте 0.
          type: string
        kpp:
          description: КПП. Если у получателя платежа нет КПП (например, это физлицо
            или ИП), то укажите КПП "0"
          pattern: ^(\d{9}|0)$
          type: string
        oktmo:
          description: Код ОКТМО территории, на которой мобилизуются денежные средства
            от уплаты налога, сбора и иного платежа. Если платеж не налоговый, в запросе
            поставьте 0.
          type: string
        paymentPurpose:
          description: Назначение платежа
          maxLength: 210
          minLength: 1
          type: string
        recipientCorrAccountNumber:
          description: Корреспондентский счёт банка получателя. В случае налогового
            платежа обязательно указывается номер счета банка получателя средств (номер
            банковского счета, входящего в состав единого казначейского счета (ЕКС))
            (подробнее https://www.nalog.ru/rn50/news/activities_fts/10104005/)
          type: string
        recipientName:
          description: Получатель
          type: string
        revenueTypeCode:
          description: 'Код вида выплаты. Обязательно заполняется при платежах в пользу
            физлиц. Подробнее: https://www.audit-it.ru/news/account/1013406.html'
          enum:
          - "1"
          - "2"
          - "3"
          type: string
          x-enum-varnames:
          - _1
          - _2
          - _3
        taxDocDate:
          description: Дата налогового документа. Поле платежки 109. Формат — ДД.ММ.ГГГГ.
            Если платеж не налоговый, в запросе поставьте 0.
          type: string
        taxDocNumber:
          description: Номер налогового документа. Поле платежки 108. Если платеж
            не налоговый, в запросе поставьте 0.
          type: string
        taxEvidence:
          description: Основание налогового платежа. Поле платежки 106. Если платеж
            не налоговый, в запросе поставьте 0.
          type: string
        taxPayerStatus:
          description: Статус составителя расчетного документа. Поле платежки 101.
            Если платеж не налоговый, в запросе поставьте 0.
          type: string
        taxPeriod:
          description: Налоговый период. Поле платежки 107. Формат — ДД.ММ.ГГГГ, первые
            два символа могут быть буквами. Если платеж не налоговый, в запросе поставьте
            0.
          type: string
        uin:
          description: Уникальный идентификатор платежа. Если платеж не налоговый,
            в запросе поставьте 0.
          type: string
      required:
      - accountNumber
      - amount
      - bankAcnt
      - bankBik
      - documentNumber
      - inn
      - kbk
      - kpp
      - oktmo
      - paymentPurpose
      - recipientName
      - taxDocDate
      - taxDocNumber
      - taxEvidence
      - taxPayerStatus
      - taxPeriod
      - uin
      type: object
    CreatePaymentDraftResponse:
      example:
        documentId: documentId
      properties:
        documentId:
          description: Идентификатор созданного черновика
          type: string
      required:
      - documentId
      type: object
    CreatePaymentInfo:
      example:
        number: 1
        collectionAmount: 0.8008281904610115
        employeeInfo:
          firstName: firstName
          lastName: lastName
          employeeId: 6
          middleName: middleName
        revenueTypeCode: "1"
        sum: 5.962133916683182
        paymentPurpose: paymentPurpose
        accountNumber: accountNumber
        periodStart: 2000-01-23
        periodEnd: 2000-01-23
      properties:
        accountNumber:
          description: Номер счета сотрудника
          type: string
        collectionAmount:
          description: Удержанная сумма
          type: number
        employeeInfo:
          $ref: '#/components/schemas/EmployeeInfo'
        number:
          description: Идентификатор платежа на стороне клиента
          type: integer
        paymentPurpose:
          description: Назначение платежа данному сотруднику в рамках зарплатного
            реестра
          type: string
        periodEnd:
          description: Конец периода платежа
          format: date
          type: string
        periodStart:
          description: Начало периода платежа
          format: date
          type: string
        revenueTypeCode:
          description: Код вида дохода
          enum:
          - "1"
          - "2"
          - "3"
          type: string
          x-enum-varnames:
          - _1
          - _2
          - _3
        sum:
          description: Сумма платежа
          type: number
      required:
      - accountNumber
      - employeeInfo
      - number
      - paymentPurpose
      - sum
      type: object
    CreatePaymentRegistryRequest:
      example:
        companyAccountNumber: companyAccountNumber
        payments:
        - number: 1
          collectionAmount: 0.8008281904610115
          employeeInfo:
            firstName: firstName
            lastName: lastName
            employeeId: 6
            middleName: middleName
          revenueTypeCode: "1"
          sum: 5.962133916683182
          paymentPurpose: paymentPurpose
          accountNumber: accountNumber
          periodStart: 2000-01-23
          periodEnd: 2000-01-23
        - number: 1
          collectionAmount: 0.8008281904610115
          employeeInfo:
            firstName: firstName
            lastName: lastName
            employeeId: 6
            middleName: middleName
          revenueTypeCode: "1"
          sum: 5.962133916683182
          paymentPurpose: paymentPurpose
          accountNumber: accountNumber
          periodStart: 2000-01-23
          periodEnd: 2000-01-23
        correlationId: correlationId
        loadDate: loadDate
      format: UUID
      properties:
        companyAccountNumber:
          description: "\nНомер счёта компании, с которого будут списаны деньги, д\
            ля оплаты реестра (при наличии РКО в Тинькофф).<br>\nЕсли номер счёта\
            \ не передан - средства будут списаны с основного счёта компании.\n  \
            \      "
          type: string
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
        loadDate:
          description: Дата отправки реестра
          type: string
        payments:
          description: Список платежей внутри реестра
          items:
            $ref: '#/components/schemas/CreatePaymentInfo'
          type: array
        registryCreateType:
          $ref: '#/components/schemas/EmployeeRegistryCreateTypeRequest'
      required:
      - correlationId
      type: object
    CreatePaymentRegistryResponse:
      example:
        correlationId: correlationId
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
      required:
      - correlationId
      type: object
    CreatePaymentRegistryResultResponse:
      example:
        paymentRegistryId: 6
        error:
          fieldName: fieldName
          errorDescription: errorDescription
        paymentErrors:
        - number: 0
          accountNumber: accountNumber
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
        - number: 0
          accountNumber: accountNumber
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
        status: CREATED
      properties:
        error:
          $ref: '#/components/schemas/FieldValidationError'
        paymentErrors:
          description: Платежи внутри реестра, содержащие ошибки
          items:
            $ref: '#/components/schemas/PaymentError'
          type: array
        paymentRegistryId:
          description: Идентификатор платежного реестра
          type: integer
        status:
          description: Статус создания платежного реестра
          enum:
          - CREATED
          - ERROR
          - QUEUED
          type: string
          x-enum-varnames:
          - CREATED
          - ERROR
          - QUEUED
      required:
      - status
      type: object
    CreatePaymentRequest:
      example:
        amount: 0.8008281904610115
        collectionAmount: 6.027456183070403
        purpose: purpose
        documentNumber: 1
        dueDate: 2000-01-23T04:56:07.000+00:00
        revenueTypeCode: "1"
        tax:
          thirdParty:
            inn: inn
            kpp: kpp
          period: period
          evidence: evidence
          oktmo: oktmo
          docNumber: docNumber
          kbk: kbk
          docDate: docDate
          payerStatus: payerStatus
        executionOrder: 3
        meta: '{}'
        from:
          accountNumber: accountNumber
        id: id
        to:
          bik: bik
          corrAccountNumber: corrAccountNumber
          inn: inn
          name: name
          bankName: bankName
          kpp: kpp
          accountNumber: accountNumber
        uin: uin
      properties:
        amount:
          description: Сумма платежа в рублях
          type: number
        collectionAmount:
          description: Удержанная сумма в рублях
          type: number
        documentNumber:
          description: Номер распоряжения, определяемый клиентом. Заполняется на усмотрение
            плательщика
          minimum: 1
          type: integer
        dueDate:
          description: Дата до которой необходимо провести платёж, при неуспешных
            попытках платежа он будет повторён вплоть до указанной даты. Если дату
            не передать, то платеж не будет повторён в случае неуспешной попытки.
            Время на проведение платежа не может быть больше 30 дней.
          format: date-time
          type: string
        executionOrder:
          description: Очерёдность платежа
          maximum: 5
          minimum: 1
          type: integer
        from:
          $ref: '#/components/schemas/PayerRequisites'
        id:
          description: Идентификатор платежа. Должен быть уникален в пределах интеграции
          maxLength: 64
          minLength: 1
          type: string
        meta:
          description: Дополнительные метаданные в формате JSON. Сохраняются на создании
            платежа и возвращаются при получении статуса
          type: object
        purpose:
          description: "Назначение платежа. \nВАЖНО: При заполнении назначения пла\
            тежа для налоговых платежей за третьих лиц необходимо следовать шаблон\
            у: \nИНН того, кто перечисляет//КПП того, кто перечисляет//Наименовани\
            е лица, за которого происходит оплата//назначение платежа. \nПодробнее\
            : https://glavkniga.ru/situations/s509587"
          maxLength: 210
          minLength: 1
          type: string
        revenueTypeCode:
          description: 'Код вида выплаты. Подробнее: http://www.consultant.ru/document/cons_doc_LAW_353568/527cf8edd2262cb7068cafd44ed596d9a05dd237/'
          enum:
          - "1"
          - "2"
          - "3"
          type: string
          x-enum-varnames:
          - _1
          - _2
          - _3
        tax:
          $ref: '#/components/schemas/TaxPaymentParameters'
        to:
          $ref: '#/components/schemas/ReceiverRequisites'
        uin:
          description: "Уникальный идентификатор платежа. Поле платежки 22. \nВАЖН\
            О: При налоговом платеже поле обязательно должно быть заполнено. \nПод\
            робнее: https://www.glavbukh.ru/art/98739-uin-v-platejnom-poruchenii-2021"
          pattern: \d{20}|\d{25}|0
          type: string
      required:
      - amount
      - from
      - id
      - purpose
      - to
      type: object
    CreatePhone:
      example:
        number: number
        type: Мобильный
      properties:
        number:
          description: Номер телефона
          type: string
        type:
          description: Тип телефона
          enum:
          - Мобильный
          - По месту жительства
          - Рабочий
          type: string
          x-enum-varnames:
          - MOBIL_NYJ
          - PO_MESTU_ZHITEL_STVA
          - RABOCHIJ
      required:
      - number
      - type
      type: object
    CreatePhone1:
      example:
        number: number
        type: Мобильный
      properties:
        number:
          description: Номер телефона
          type: string
        type:
          description: Тип телефона
          enum:
          - Мобильный
          - По месту жительства
          - Рабочий
          type: string
          x-enum-varnames:
          - MOBIL_NYJ
          - PO_MESTU_ZHITEL_STVA
          - RABOCHIJ
      required:
      - number
      - type
      type: object
    CreateSbpPaymentRequest:
      example:
        amount: 0.8008281904610115
        purpose: purpose
        documentNumber: 1
        from:
          accountNumber: accountNumber
        revenueTypeCode: "1"
        id: id
        to:
          firstName: firstName
          lastName: lastName
          bankId: bankId
          phone: phone
          middleName: middleName
      properties:
        amount:
          description: Сумма платежа в рублях
          type: number
        documentNumber:
          description: Номер распоряжения, определяемый клиентом. Заполняется на усмотрение
            плательщика
          minimum: 1
          type: integer
        from:
          $ref: '#/components/schemas/SbpPayerRequisites'
        id:
          description: |2-

            Идентификатор платежа. Должен быть уникален в пределах интеграции как для платежей через СБП,
            так и <a href="#operation/PaymentsCorePay">платежей по банковским реквизитам</a>.
          maxLength: 64
          minLength: 1
          type: string
        purpose:
          description: Назначение платежа, обязательна информация по НДС
          maxLength: 210
          minLength: 1
          type: string
        revenueTypeCode:
          description: 'Код вида выплаты. Подробнее: http://www.consultant.ru/document/cons_doc_LAW_353568/527cf8edd2262cb7068cafd44ed596d9a05dd237/'
          enum:
          - "1"
          - "2"
          - "3"
          type: string
          x-enum-varnames:
          - _1
          - _2
          - _3
        to:
          $ref: '#/components/schemas/SbpReceiverRequisites'
      required:
      - amount
      - id
      - purpose
      - to
      type: object
    CreateSelfEmployed:
      example:
        firstName: firstName
        lastName: lastName
        number: 0
        recipientId: 6
        middleName: middleName
        errors:
        - fieldName: fieldName
          errorDescription: errorDescription
        - fieldName: fieldName
          errorDescription: errorDescription
        status: CREATED
      properties:
        errors:
          description: Список ошибок
          items:
            $ref: '#/components/schemas/FieldValidationError1'
          type: array
        firstName:
          description: Имя
          type: string
        lastName:
          description: Фамилия
          type: string
        middleName:
          description: Отчество
          type: string
        number:
          description: Номер самозанятого, переданный клиентом при создании
          type: integer
        recipientId:
          description: Идентификатор самозанятого. Может не прийти, если при создании
            самозанятого возникли ошибки.
          type: integer
        status:
          description: Статус создания:<br><ul><li>QUEUED - самозанятый в данный момент
            стоит в очереди на создание</li><li>CREATED - самозанятый создан</li><li>ERROR
            - самозанятый не был создан (ошибки перечислены в поле <b>errors</b>)</li><ul>
          enum:
          - CREATED
          - ERROR
          - QUEUED
          type: string
          x-enum-varnames:
          - CREATED
          - ERROR
          - QUEUED
      required:
      - firstName
      - lastName
      - number
      - status
      type: object
    CreateSelfEmployedData:
      example:
        lastName: lastName
        addresses:
        - country: country
          city: city
          street: street
          district: district
          postalCode: postalCode
          construction: construction
          state: state
          type: Жительства
          house: house
          apartment: apartment
          building: building
          settlement: settlement
        - country: country
          city: city
          street: street
          district: district
          postalCode: postalCode
          construction: construction
          state: state
          type: Жительства
          house: house
          apartment: apartment
          building: building
          settlement: settlement
        documents:
        - date: 2000-01-23
          division: division
          number: number
          serial: serial
          organization: organization
          expireDate: 2000-01-23
          type: Паспорт
        - date: 2000-01-23
          division: division
          number: number
          serial: serial
          organization: organization
          expireDate: 2000-01-23
          type: Паспорт
        registrationInfo:
          oktmo: oktmo
          activityCodes:
          - activityCodes
          - activityCodes
        citizenship: citizenship
        phones:
        - number: number
          type: Мобильный
        - number: number
          type: Мобильный
        birthDate: 2000-01-23
        birthPlace: birthPlace
        firstName: firstName
        number: 0
        latinFirstName: latinFirstName
        middleName: middleName
        latinLastName: latinLastName
        email: email
      properties:
        addresses:
          description: 'Необходимо указать следующие адреса: Жительства, Регистрации'
          items:
            $ref: '#/components/schemas/CreateAddress1'
          type: array
        birthDate:
          description: Дата рождения
          format: date
          type: string
        birthPlace:
          description: Место рождения
          type: string
        citizenship:
          description: Гражданство
          type: string
        documents:
          description: |
            <br>
            <b>Для граждан РФ</b> необходимо указать:
            <ul>
              <li>Данные паспорта</li>
            </ul>
            <b>Для иностранных граждан</b> необходимо указать:
            <ul>
              <li>Один из основных документов: "Иностранный паспорт", "Загр. паспорт иностранного гр.", "Служебный/официальный паспорт", "Дипломатический паспорт"</li>
              <li>Один из миграционных документов: "Миграционная карта", "Разр. на временное проживание", "Вид на жительство"</li>
            </ul>
          items:
            $ref: '#/components/schemas/CreateDocument1'
          type: array
        email:
          description: Электронная почта
          type: string
        firstName:
          description: Имя (кириллица)
          type: string
        lastName:
          description: Фамилия (кириллица)
          type: string
        latinFirstName:
          description: Имя (латиница)
          type: string
        latinLastName:
          description: Фамилия (латиница)
          type: string
        middleName:
          description: Отчество (кириллица)
          type: string
        number:
          description: Идентификатор самозанятого на стороне клиента
          type: integer
        phones:
          description: 'Необходимо указать: Мобильный телефон'
          items:
            $ref: '#/components/schemas/CreatePhone1'
          type: array
        registrationInfo:
          $ref: '#/components/schemas/CreateSelfEmployedRegistrationInfo'
      required:
      - birthDate
      - birthPlace
      - citizenship
      - firstName
      - lastName
      - number
      type: object
    CreateSelfEmployedRegistrationInfo:
      description: Если значение передано, Тинькофф поставит исполнителя на учет как
        самозанятого. Функция доступна клиентам, которые получили от исполнителей
        согласие на регистрацию
      example:
        oktmo: oktmo
        activityCodes:
        - activityCodes
        - activityCodes
      properties:
        activityCodes:
          description: Коды активностей
          items:
            type: string
          type: array
        oktmo:
          description: ОКТМО
          type: string
      required:
      - activityCodes
      - oktmo
      type: object
    CreateSelfEmployedRequest:
      example:
        recipients:
        - lastName: lastName
          addresses:
          - country: country
            city: city
            street: street
            district: district
            postalCode: postalCode
            construction: construction
            state: state
            type: Жительства
            house: house
            apartment: apartment
            building: building
            settlement: settlement
          - country: country
            city: city
            street: street
            district: district
            postalCode: postalCode
            construction: construction
            state: state
            type: Жительства
            house: house
            apartment: apartment
            building: building
            settlement: settlement
          documents:
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          registrationInfo:
            oktmo: oktmo
            activityCodes:
            - activityCodes
            - activityCodes
          citizenship: citizenship
          phones:
          - number: number
            type: Мобильный
          - number: number
            type: Мобильный
          birthDate: 2000-01-23
          birthPlace: birthPlace
          firstName: firstName
          number: 0
          latinFirstName: latinFirstName
          middleName: middleName
          latinLastName: latinLastName
          email: email
        - lastName: lastName
          addresses:
          - country: country
            city: city
            street: street
            district: district
            postalCode: postalCode
            construction: construction
            state: state
            type: Жительства
            house: house
            apartment: apartment
            building: building
            settlement: settlement
          - country: country
            city: city
            street: street
            district: district
            postalCode: postalCode
            construction: construction
            state: state
            type: Жительства
            house: house
            apartment: apartment
            building: building
            settlement: settlement
          documents:
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          registrationInfo:
            oktmo: oktmo
            activityCodes:
            - activityCodes
            - activityCodes
          citizenship: citizenship
          phones:
          - number: number
            type: Мобильный
          - number: number
            type: Мобильный
          birthDate: 2000-01-23
          birthPlace: birthPlace
          firstName: firstName
          number: 0
          latinFirstName: latinFirstName
          middleName: middleName
          latinLastName: latinLastName
          email: email
        correlationId: correlationId
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
        recipients:
          description: Список самозанятых на создание
          items:
            $ref: '#/components/schemas/CreateSelfEmployedData'
          type: array
      required:
      - correlationId
      type: object
    CreateSelfEmployedResponse:
      example:
        correlationId: correlationId
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
      required:
      - correlationId
      type: object
    CreateSelfEmployedResultResponse:
      example:
        recipientResults:
        - firstName: firstName
          lastName: lastName
          number: 0
          recipientId: 6
          middleName: middleName
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
          status: CREATED
        - firstName: firstName
          lastName: lastName
          number: 0
          recipientId: 6
          middleName: middleName
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
          status: CREATED
      properties:
        recipientResults:
          description: Список результатов создания самозанятых
          items:
            $ref: '#/components/schemas/CreateSelfEmployed'
          type: array
      type: object
    CreateTaskRequest:
      example:
        template: template
        commentForAgent: commentForAgent
        contacts:
        - firstName: firstName
          lastName: lastName
          role: role
          documents:
          - null
          - null
          phones:
          - number: number
            type: MOBILE
          - number: number
            type: MOBILE
          middleName: middleName
          id: id
          birthDate: 2000-01-23
        - firstName: firstName
          lastName: lastName
          role: role
          documents:
          - null
          - null
          phones:
          - number: number
            type: MOBILE
          - number: number
            type: MOBILE
          middleName: middleName
          id: id
          birthDate: 2000-01-23
      properties:
        commentForAgent:
          description: Комментарий к заданию для представителя
          type: string
        contacts:
          description: Группа объектов с информацией о данных каждого участника задания,
            подлежащего удостоверению на встрече
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        template:
          description: Шаблон, определяющий бизнес-логику задания
          type: string
      required:
      - template
      type: object
    CreateTaskResponse:
      example:
        id: id
      properties:
        id:
          description: Уникальный идентификатор задания
          type: string
      required:
      - id
      type: object
    DebitAccount:
      example:
        bank:
          corAccount: corAccount
          bik: bik
          name: name
        name: name
        accountNumber: accountNumber
      properties:
        accountNumber:
          description: Счёт получателя платежа
          type: string
        bank:
          $ref: '#/components/schemas/BankInfo'
        name:
          description: Получатель (ФИО)
          type: string
      required:
      - accountNumber
      - bank
      - name
      type: object
    DebitAccountsResponse:
      example:
        accounts:
        - bank:
            corAccount: corAccount
            bik: bik
            name: name
          name: name
          accountNumber: accountNumber
        - bank:
            corAccount: corAccount
            bik: bik
            name: name
          name: name
          accountNumber: accountNumber
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/DebitAccount'
          type: array
      type: object
    DeliveryTask:
      example:
        subResolution: subResolution
        template: template
        documents:
        - id: id
          type: type
        - id: id
          type: type
        meetResult: meetResult
        id: id
        resolution: resolution
        status: status
      properties:
        documents:
          description: Группа объектов с информацией о документах, относящихся к заданию.
            Может быть пустым, если документы не нужны в качестве результатов задания
          items:
            $ref: '#/components/schemas/DeliveryTaskDocument'
          type: array
        id:
          description: Идентификатор задания
          type: string
        meetResult:
          type: string
        resolution:
          description: Результат задания
          type: string
        status:
          description: Статус задания
          type: string
        subResolution:
          description: Детальное описание результата задания
          type: string
        template:
          description: Шаблон задания
          type: string
      required:
      - id
      - status
      - template
      type: object
    DeliveryTaskDocument:
      example:
        id: id
        type: type
      properties:
        id:
          description: Идентификатор документа
          type: string
        type:
          description: Тип документа
          type: string
      required:
      - id
      - type
      type: object
    Document:
      example:
        date: 2000-01-23
        division: division
        number: number
        serial: serial
        organization: organization
        expireDate: 2000-01-23
        type: Паспорт
      properties:
        date:
          description: Дата
          format: date
          type: string
        division:
          description: Код подразделения
          type: string
        expireDate:
          description: Дата истечения
          format: date
          type: string
        number:
          description: Номер документа
          type: string
        organization:
          description: Кем выдан
          type: string
        serial:
          description: Серия
          type: string
        type:
          description: Тип документа
          enum:
          - Паспорт
          - Иностранный паспорт
          - Загр. паспорт иностранного гр.
          - Служебный/официальный паспорт
          - Дипломатический паспорт
          - Миграционная карта
          - Разр. на временное проживание
          - Виза
          - Вид на жительство
          type: string
          x-enum-varnames:
          - PASPORT
          - INOSTRANNYJ_PASPORT
          - ZAGR_PASPORT_INOSTRANNOGO_GR
          - SLUZHEBNYJ_OFITSIAL_NYJ_PASPORT
          - DIPLOMATICHESKIJ_PASPORT
          - MIGRATSIONNAJA_KARTA
          - RAZR_NA_VREMENNOE_PROZHIVANIE
          - VIZA
          - VID_NA_ZHITEL_STVO
      required:
      - type
      type: object
    Document1:
      example:
        date: 2000-01-23
        division: division
        number: number
        serial: serial
        organization: organization
        expireDate: 2000-01-23
        type: Паспорт
      properties:
        date:
          description: Дата
          format: date
          type: string
        division:
          description: Код подразделения
          type: string
        expireDate:
          description: Дата истечения
          format: date
          type: string
        number:
          description: Номер документа
          type: string
        organization:
          description: Кем выдан
          type: string
        serial:
          description: Серия
          type: string
        type:
          description: Тип документа
          enum:
          - Паспорт
          - Иностранный паспорт
          - Загр. паспорт иностранного гр.
          - Служебный/официальный паспорт
          - Дипломатический паспорт
          - Миграционная карта
          - Разр. на временное проживание
          - Виза
          - Вид на жительство
          type: string
          x-enum-varnames:
          - PASPORT
          - INOSTRANNYJ_PASPORT
          - ZAGR_PASPORT_INOSTRANNOGO_GR
          - SLUZHEBNYJ_OFITSIAL_NYJ_PASPORT
          - DIPLOMATICHESKIJ_PASPORT
          - MIGRATSIONNAJA_KARTA
          - RAZR_NA_VREMENNOE_PROZHIVANIE
          - VIZA
          - VID_NA_ZHITEL_STVO
      required:
      - type
      type: object
    DriverLicenseResponse:
      example:
        docNumber: docNumber
        issueDate: 2000-01-23
      properties:
        docNumber:
          description: Номер документа водительского удостоверения
          type: string
        issueDate:
          description: Дата выдачи водительского удостоверения
          format: date
          type: string
      required:
      - docNumber
      type: object
    DriverLicensesResponse:
      example:
        licenses:
        - docNumber: docNumber
          issueDate: 2000-01-23
        - docNumber: docNumber
          issueDate: 2000-01-23
      properties:
        licenses:
          description: Водительские удостоверения физического лица
          items:
            $ref: '#/components/schemas/DriverLicenseResponse'
          type: array
      type: object
    DuplicatedError:
      properties:
        message:
          description: Данный чек уже обработан
          type: string
        type:
          description: DUPLICATED_RECEIPT
          type: string
      required:
      - message
      - type
      type: object
    Email:
      example:
        email: email
      properties:
        email:
          description: e-mail
          type: string
      type: object
    Employee:
      example:
        bankInfo:
          accountNumber: accountNumber
          agreementNumber: agreementNumber
        firstName: firstName
        lastName: lastName
        documents:
        - date: 2000-01-23
          division: division
          number: number
          serial: serial
          organization: organization
          expireDate: 2000-01-23
          type: Паспорт
        - date: 2000-01-23
          division: division
          number: number
          serial: serial
          organization: organization
          expireDate: 2000-01-23
          type: Паспорт
        phones:
        - number: number
          type: Мобильный
        - number: number
          type: Мобильный
        middleName: middleName
        id: 0
        birthDate: 2000-01-23
        jobInfo:
          position: position
        status: PROCESSING
      properties:
        bankInfo:
          $ref: '#/components/schemas/BankInfo1'
        birthDate:
          description: Дата рождения
          format: date
          type: string
        documents:
          description: Документы
          items:
            $ref: '#/components/schemas/Document'
          type: array
        firstName:
          description: Имя
          type: string
        id:
          description: Идентификатор сотрудника
          type: integer
        jobInfo:
          $ref: '#/components/schemas/JobInfo'
        lastName:
          description: Фамилия
          type: string
        middleName:
          description: Отчество
          type: string
        phones:
          description: Номера телефонов
          items:
            $ref: '#/components/schemas/Phone1'
          type: array
        status:
          description: Статус сотрудника:<br><ul><li>ERROR - Ошибка создания анкеты
            сотрудника</li><li>DRAFT - Анкета сотрудника готова к отправке</li><li>PROCESSING_ERROR
            - Ошибка отправки анкеты (обатитесь к персональному менеджеру для уточнения
            причины)</li><li>PROCESSING - Обрабатываем анкету сотрудника</li><li>REJECTED
            - Отказ в открытии счета (конечный статус добавления)</li><li>MTNG_WAIT
            - Сотрудник ожидает назначения встречи для доставки карты </li><li>MTNG_SCHD
            - Встреча для доставки карты сотруднику назначена</li><li>MTNG_CANC -
            Встреча для доставки карты сотруднику отменена</li><li>ACTIVE - Сотрудник
            добавлен (конечный статус добавления)</li><li>FIRED - Сотрудник уволен</li><li>DELETED
            - Сотрудник удален из Зарплатного проекта</li><ul>
          enum:
          - PROCESSING
          - DRAFT
          - PROCESSING_ERROR
          - ACTIVE
          - ERROR
          - REJECTED
          - FIRED
          - DELETED
          - MTNG_SCHD
          - MTNG_WAIT
          - MTNG_CANC
          type: string
          x-enum-varnames:
          - PROCESSING
          - DRAFT
          - PROCESSING_ERROR
          - ACTIVE
          - ERROR
          - REJECTED
          - FIRED
          - DELETED
          - MTNG_SCHD
          - MTNG_WAIT
          - MTNG_CANC
      required:
      - bankInfo
      - firstName
      - id
      - lastName
      - status
      type: object
    EmployeeCreateData:
      example:
        lastName: lastName
        addresses:
        - country: country
          city: city
          street: street
          district: district
          postalCode: postalCode
          construction: construction
          state: state
          type: Жительства
          house: house
          apartment: apartment
          building: building
          settlement: settlement
        - country: country
          city: city
          street: street
          district: district
          postalCode: postalCode
          construction: construction
          state: state
          type: Жительства
          house: house
          apartment: apartment
          building: building
          settlement: settlement
        documents:
        - date: 2000-01-23
          division: division
          number: number
          serial: serial
          organization: organization
          expireDate: 2000-01-23
          type: Паспорт
        - date: 2000-01-23
          division: division
          number: number
          serial: serial
          organization: organization
          expireDate: 2000-01-23
          type: Паспорт
        citizenship: citizenship
        phones:
        - number: number
          type: Мобильный
        - number: number
          type: Мобильный
        birthDate: 2000-01-23
        jobInfo:
          position: position
        birthPlace: birthPlace
        firstName: firstName
        number: 0
        latinFirstName: latinFirstName
        middleName: middleName
        latinLastName: latinLastName
        email: email
      properties:
        addresses:
          description: 'Необходимо указать следующие адреса: Жительства, Регистрации,
            Работы'
          items:
            $ref: '#/components/schemas/CreateAddress'
          type: array
        birthDate:
          description: Дата рождения
          format: date
          type: string
        birthPlace:
          description: Место рождения
          type: string
        citizenship:
          description: Гражданство
          type: string
        documents:
          description: |
            <br>
            <b>Для граждан РФ</b> необходимо указать:
            <ul>
              <li>Данные паспорта</li>
            </ul>
            <b>Для иностранных граждан</b> необходимо указать:
            <ul>
              <li>Один из основных документов: "Иностранный паспорт", "Загр. паспорт иностранного гр.", "Служебный/официальный паспорт", "Дипломатический паспорт"</li>
              <li>Один из миграционных документов: "Миграционная карта", "Разр. на временное проживание", "Вид на жительство"</li>
            </ul>
          items:
            $ref: '#/components/schemas/CreateDocument'
          type: array
        email:
          description: Электронная почта
          type: string
        firstName:
          description: Имя (кириллица)
          type: string
        jobInfo:
          $ref: '#/components/schemas/CreateJobInfo'
        lastName:
          description: Фамилия (кириллица)
          type: string
        latinFirstName:
          description: Имя (латиница)
          type: string
        latinLastName:
          description: Фамилия (латиница)
          type: string
        middleName:
          description: Отчество (кириллица)
          type: string
        number:
          description: Идентификатор сотрудника на стороне клиента
          type: integer
        phones:
          description: 'Необходимо указать: Мобильный телефон'
          items:
            $ref: '#/components/schemas/CreatePhone'
          type: array
      required:
      - birthDate
      - birthPlace
      - citizenship
      - firstName
      - jobInfo
      - lastName
      - number
      type: object
    EmployeeInfo:
      description: Данные сотрудника, находящегося в статусах ACTIVE или FIRED
      example:
        firstName: firstName
        lastName: lastName
        employeeId: 6
        middleName: middleName
      properties:
        employeeId:
          description: Идентификатор сотрудника. Возвращается в случае, если реестр
            в статусах DRAFT, ACCEPTED, PART_EXEC, EXECUTED
          type: integer
        firstName:
          description: Имя (кириллица)
          type: string
        lastName:
          description: Фамилия (кириллица)
          type: string
        middleName:
          description: Отчество (кириллица)
          type: string
      required:
      - firstName
      - lastName
      type: object
    EmployeeRegistryCreateTypeRequest:
      description: |2

        Может принимать одно из двух значений:
        <ul>
        <li>IGNORE_ERRORS - реестр будет создан из всех корректных платежей, его идентификатор вернется в поле paymentRegistryId метода /create/result. В случае если корректных платежей не оказалось, реестр не будет создан</li>
        <li>FAIL_ERRORS - при наличии ошибочных платежей реестр создан не будет. По умолчанию "FAIL_ERRORS"</li>
        </ul>
      oneOf:
      - $ref: '#/components/schemas/FailErrors'
      - $ref: '#/components/schemas/IgnoreErrors'
    EmployeeResponse:
      example:
        employees:
        - bankInfo:
            accountNumber: accountNumber
            agreementNumber: agreementNumber
          firstName: firstName
          lastName: lastName
          documents:
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          phones:
          - number: number
            type: Мобильный
          - number: number
            type: Мобильный
          middleName: middleName
          id: 0
          birthDate: 2000-01-23
          jobInfo:
            position: position
          status: PROCESSING
        - bankInfo:
            accountNumber: accountNumber
            agreementNumber: agreementNumber
          firstName: firstName
          lastName: lastName
          documents:
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          phones:
          - number: number
            type: Мобильный
          - number: number
            type: Мобильный
          middleName: middleName
          id: 0
          birthDate: 2000-01-23
          jobInfo:
            position: position
          status: PROCESSING
      properties:
        employees:
          description: Список сотрудников
          items:
            $ref: '#/components/schemas/Employee'
          type: array
      type: object
    EmployeesInfoRequest:
      example:
        employeeIds:
        - 0
        - 0
      properties:
        employeeIds:
          items:
            type: integer
          type: array
      type: object
    EmployeesResponse:
      example:
        firstName: firstName
        lastName: lastName
        number: 6
        employeeId: 0
        middleName: middleName
        errors:
        - fieldName: fieldName
          errorDescription: errorDescription
        - fieldName: fieldName
          errorDescription: errorDescription
        status: CREATED
      properties:
        employeeId:
          description: Идентификатор сотрудника в Зарплатном Проекте. Может не прийти,
            если при создании сотрудника возникли ошибки.
          type: integer
        errors:
          description: Список ошибок
          items:
            $ref: '#/components/schemas/FieldValidationError'
          type: array
        firstName:
          description: Имя
          type: string
        lastName:
          description: Фамилия
          type: string
        middleName:
          description: Отчество
          type: string
        number:
          description: Номер сотрудника, переданный клиентом при создании
          type: integer
        status:
          description: Статус создания:<br><ul><li>QUEUED - сотрудник в данный момент
            стоит в очереди на создание</li><li>CREATED - сотрудник создан в Зарплатном
            Проекте</li><li>ERROR - сотрудник не был создан в Зарплатном Проекте (ошибки
            перечислены в поле <b>errors</b>)</li><ul>
          enum:
          - CREATED
          - ERROR
          - QUEUED
          type: string
          x-enum-varnames:
          - CREATED
          - ERROR
          - QUEUED
      required:
      - firstName
      - lastName
      - number
      - status
      type: object
    Empty:
      type: object
    EmptyResponse:
      type: object
    Error:
      properties:
        status:
          description: Статус заявки на перевыпуск виртуальной карты. status = ERROR
            - произошла ошибка при обработке заявки, попробуйте отправить новую
          type: string
      required:
      - status
      type: object
    ErrorResponse:
      description: Общая ошибка, произошедшая при создании реестра
      example:
        errorMessage: errorMessage
        errorCode: errorCode
      properties:
        errorCode:
          description: Код ошибки
          type: string
        errorMessage:
          description: Описание ошибки
          type: string
      required:
      - errorCode
      - errorMessage
      type: object
    FailErrors:
      type: object
    FailErrors1:
      type: object
    FieldValidationError:
      example:
        fieldName: fieldName
        errorDescription: errorDescription
      properties:
        errorDescription:
          description: Описание ошибки
          type: string
        fieldName:
          description: Наименование поля, в котором возникла ошибка, на русском языке
          type: string
      required:
      - errorDescription
      - fieldName
      type: object
    FieldValidationError1:
      example:
        fieldName: fieldName
        errorDescription: errorDescription
      properties:
        errorDescription:
          description: Описание ошибки
          type: string
        fieldName:
          description: Наименование поля, в котором возникла ошибка, на русском языке
          type: string
      required:
      - errorDescription
      - fieldName
      type: object
    GetIntervalsRequest:
      example:
        address:
          area: area
          country: country
          zipCode: zipCode
          city: city
          flat: flat
          street: street
          fullAddress: fullAddress
          construction: construction
          region: region
          house: house
          building: building
          settlement: settlement
        taskIds:
        - taskIds
        - taskIds
      properties:
        address:
          $ref: '#/components/schemas/Address'
        taskIds:
          description: Cписок идентификаторов заданий, по которым необходимо получить
            доступные интервалы для назначения встреч
          items:
            type: string
          type: array
      required:
      - address
      type: object
    GetIntervalsResponse:
      example:
        intervals:
        - startInterval: startInterval
          endInterval: endInterval
        - startInterval: startInterval
          endInterval: endInterval
        appointmentId: appointmentId
        timeOffset: timeOffset
      properties:
        appointmentId:
          description: Идентификатор назначения встречи
          type: string
        intervals:
          description: Cписок объектов, содержащих информацию о начале и окончании
            временного интервала
          items:
            $ref: '#/components/schemas/Interval'
          type: array
        timeOffset:
          description: Временная зона адреса, для которого выбирается временной интервал,
            в формате ISO 8601, например, "+03:00"
          type: string
      required:
      - appointmentId
      - timeOffset
      type: object
    IdentificationDocument:
      oneOf:
      - $ref: '#/components/schemas/Passport'
    IdentificationStatusResponse:
      example:
        isIdentified: true
      properties:
        isIdentified:
          description: Идентифицирован ли пользователь
          type: boolean
      required:
      - isIdentified
      type: object
    IgnoreErrors:
      type: object
    IgnoreErrors1:
      type: object
    InProgress:
      properties:
        status:
          description: Статус заявки на перевыпуск виртуальной карты. status = IN_PROGRESS
            - заявка в работе, проверьте результат через некоторое время (обычно заявка
            исполняется в течение 5 минут)
          type: string
      required:
      - status
      type: object
    InnResponse:
      example:
        inn: inn
      properties:
        inn:
          description: ИНН
          pattern: ^(\d{12})$
          type: string
      type: object
    InternalError:
      properties:
        message:
          description: Внутренняя ошибка сервера
          type: string
        type:
          description: INTERNAL_ERROR
          type: string
      required:
      - message
      - type
      type: object
    InternalServerErrorResponse:
      properties:
        errorCode:
          description: Код ошибки
          type: string
        errorDetails:
          additionalProperties:
            type: string
          type: object
        errorId:
          description: Уникальный идентификатор ошибки
          type: string
        errorMessage:
          description: Текст ошибки
          type: string
      required:
      - errorCode
      - errorCode
      - errorId
      - errorMessage
      - errorMessage
      type: object
    Interval:
      example:
        startInterval: startInterval
        endInterval: endInterval
      properties:
        endInterval:
          description: Время окончания интервала, локальное время в формате ISO 8601
          type: string
        startInterval:
          description: Время начала интервала, локальное время в формате ISO 8601
          type: string
      required:
      - endInterval
      - startInterval
      type: object
    InvalidRequestResponse:
      properties:
        errorCode:
          type: string
        errorDetails:
          additionalProperties:
            type: string
          type: object
        errorId:
          type: string
        errorMessage:
          type: string
      required:
      - errorCode
      - errorId
      - errorMessage
      type: object
    InvoiceItemInfo:
      example:
        amount: 0.8008281904610115
        unit: unit
        price: 6.027456183070403
        name: name
        vat: None
      properties:
        amount:
          description: Количество единиц
          type: number
        name:
          description: Наименование
          type: string
        price:
          description: Цена за единицу в рублях
          type: number
        unit:
          description: Единицы измерения
          type: string
        vat:
          description: НДС, "None" -- Без НДС
          enum:
          - None
          - "0"
          - "10"
          - "18"
          - "20"
          type: string
          x-enum-varnames:
          - NONE
          - _0
          - _10
          - _18
          - _20
      required:
      - amount
      - name
      - price
      - unit
      - vat
      type: object
    InvoicePayerInfo:
      description: Информация о плательщике
      example:
        inn: inn
        name: name
        kpp: kpp
      properties:
        inn:
          description: Инн плательщика
          pattern: ^(\d{12}|\d{10})$
          type: string
        kpp:
          description: Кпп плательщика
          pattern: ^(\d{9})$
          type: string
        name:
          description: Наименование плательщика
          maxLength: 512
          minLength: 1
          type: string
      type: object
    JobInfo:
      description: Информация о работе
      example:
        position: position
      properties:
        position:
          description: Должность
          type: string
      type: object
    Map_String:
      additionalProperties:
        type: string
      type: object
    MerchantCategory:
      example:
        categoryType: categoryType
        code: code
        merchantCategoryWeight: 2
        imagePath: imagePath
        name: name
        categoryWeight: 3
        categoryId: 9
      properties:
        categoryId:
          description: Id категории.
          format: int64
          type: integer
        categoryType:
          description: Тип категории. Доступные значения 'STANDARD', 'PROMO'.
          type: string
        categoryWeight:
          description: Вес категории.
          type: integer
        code:
          description: Код категории.
          type: string
        imagePath:
          description: Ссылка на картинку категории.
          type: string
        merchantCategoryWeight:
          description: Вес партнера в категории.
          type: integer
        name:
          description: Наименование категории.
          type: string
      required:
      - categoryId
      - categoryType
      - categoryWeight
      - code
      - imagePath
      - merchantCategoryWeight
      - name
      type: object
    OfferViewRequest:
      example:
        phoneNumber: phoneNumber
        offerId: 0
      properties:
        offerId:
          description: Id просмотренного оффера
          format: int64
          type: integer
        phoneNumber:
          description: Номер телефона клиента в формате E.164
          type: string
      required:
      - offerId
      - phoneNumber
      type: object
    Operation:
      example:
        amount: 0
        transactionDate: 2000-01-23T04:56:07.000+00:00
        type: Debit
        cardNumber: cardNumber
        rrn: rrn
      properties:
        amount:
          description: Сумма операции
          format: int64
          type: integer
        cardNumber:
          description: Номер карты
          type: string
        rrn:
          description: Идентификатор банковской транзакции
          type: string
        transactionDate:
          description: Дата совершения операции в UTC(формат yyyy-MM-ddTHH:mm:ssZ)
          format: date-time
          type: string
        type:
          description: Тип операции
          enum:
          - Debit
          - Credit
          - Other
          type: string
          x-enum-varnames:
          - DEBIT
          - CREDIT
          - OTHER
      required:
      - amount
      - cardNumber
      - rrn
      - transactionDate
      - type
      type: object
    Passport:
      properties:
        divisionName:
          description: Подразделение
          type: string
        issueDate:
          description: Дата выдачи документа
          format: date
          type: string
        number:
          description: Номер документа
          type: string
        series:
          description: Серия документа
          type: string
        type:
          description: Тип документа
          enum:
          - PASSPORT
          type: string
          x-enum-varnames:
          - PASSPORT
      required:
      - number
      - series
      - type
      type: object
    PassportResponse:
      example:
        birthPlace: birthPlace
        numberOfChildren: 0
        serialNumber: serialNumber
        unitName: unitName
        citizenship: citizenship
        unitCode: unitCode
        marriageDate: 2000-01-23
        issueDate: 2000-01-23
        birthDate: 2000-01-23
        maritalStatus: maritalStatus
        resident: true
        validTo: 2000-01-23
      properties:
        birthDate:
          description: Дата рождения
          format: date
          type: string
        birthPlace:
          description: Место рождения
          type: string
        citizenship:
          description: Гражданство
          type: string
        issueDate:
          description: Дата выдачи
          format: date
          type: string
        maritalStatus:
          description: Семейное положение
          type: string
        marriageDate:
          description: Дата регистрации брака
          format: date
          type: string
        numberOfChildren:
          description: Количество детей
          type: integer
        resident:
          description: Является гражданином РФ
          type: boolean
        serialNumber:
          description: Серия и номер
          type: string
        unitCode:
          description: Код подразделения
          type: string
        unitName:
          description: Название подразделения
          type: string
        validTo:
          description: Время действия паспорта
          format: date
          type: string
      type: object
    PayerRequisites:
      description: Реквизиты плательщика
      example:
        accountNumber: accountNumber
      properties:
        accountNumber:
          description: Номер расчетного счета
          pattern: ^(\d{20}|\d{22})$
          type: string
      required:
      - accountNumber
      type: object
    PaymentError:
      example:
        number: 0
        accountNumber: accountNumber
        errors:
        - fieldName: fieldName
          errorDescription: errorDescription
        - fieldName: fieldName
          errorDescription: errorDescription
      properties:
        accountNumber:
          description: Номер счёта сотрудника
          type: string
        errors:
          description: Ошибки валидации
          items:
            $ref: '#/components/schemas/FieldValidationError'
          type: array
        number:
          description: Идентификатор платежа, переданный клиентом при создании
          type: integer
      required:
      - number
      type: object
    PaymentError1:
      example:
        number: 0
        accountNumber: accountNumber
        errors:
        - fieldName: fieldName
          errorDescription: errorDescription
        - fieldName: fieldName
          errorDescription: errorDescription
      properties:
        accountNumber:
          description: Номер счёта самозанятого
          type: string
        errors:
          description: Ошибки валидации
          items:
            $ref: '#/components/schemas/FieldValidationError'
          type: array
        number:
          description: Идентификатор платежа, переданный клиентом при создании
          type: integer
      required:
      - number
      type: object
    PaymentInfo:
      example:
        number: 0
        employeeInfo:
          firstName: firstName
          lastName: lastName
          employeeId: 6
          middleName: middleName
        sum: 6.027456183070403
        paymentPurpose: paymentPurpose
        accountNumber: accountNumber
        periodStart: 2000-01-23
        periodEnd: 2000-01-23
        status: ACCEPTED
      properties:
        accountNumber:
          description: Номер счета сотрудника
          type: string
        employeeInfo:
          $ref: '#/components/schemas/EmployeeInfo'
        number:
          description: Идентификатор платежа на стороне клиента
          type: integer
        paymentPurpose:
          description: Назначение платежа
          type: string
        periodEnd:
          description: Конец периода платежа
          format: date
          type: string
        periodStart:
          description: Начало периода платежа
          format: date
          type: string
        status:
          description: Статус платежа:<br><ul><li>WAITING - Платёж ожидает отправки
            реестра</li><li>ACCEPTED - Платёж ожидает исполнения реестра</li><li>EXECUTED
            - Платёж исполнен</li><li>REJECTED - Платёж отклонён банком</li><li>CANCELLED
            - Платёж отменён</li><li>DELETED - Платёж удалён</li><ul>
          enum:
          - ACCEPTED
          - EXECUTED
          - REJECTED
          - CANCELLED
          - DELETED
          - WAITING
          type: string
          x-enum-varnames:
          - ACCEPTED
          - EXECUTED
          - REJECTED
          - CANCELLED
          - DELETED
          - WAITING
        sum:
          description: Сумма платежа
          type: number
      required:
      - employeeInfo
      - status
      - sum
      type: object
    PaymentRegistry:
      example:
        totalSum: 5.962133916683182
        companyAccountNumber: companyAccountNumber
        payments:
        - number: 0
          employeeInfo:
            firstName: firstName
            lastName: lastName
            employeeId: 6
            middleName: middleName
          sum: 6.027456183070403
          paymentPurpose: paymentPurpose
          accountNumber: accountNumber
          periodStart: 2000-01-23
          periodEnd: 2000-01-23
          status: ACCEPTED
        - number: 0
          employeeInfo:
            firstName: firstName
            lastName: lastName
            employeeId: 6
            middleName: middleName
          sum: 6.027456183070403
          paymentPurpose: paymentPurpose
          accountNumber: accountNumber
          periodStart: 2000-01-23
          periodEnd: 2000-01-23
          status: ACCEPTED
        paymentsCount: 1
        loadDate: loadDate
        status: DRAFT
      properties:
        companyAccountNumber:
          description: "\nНомер счёта компании, с которого будут списаны деньги, д\
            ля оплаты реестра (при наличии РКО в Тинькофф).<br>\nЕсли номер счёта\
            \ не передан - средства будут списаны с основного счёта компании.\n  \
            \      "
          type: string
        loadDate:
          description: Дата отправки реестра
          type: string
        payments:
          description: Список платежей внутри реестра
          items:
            $ref: '#/components/schemas/PaymentInfo'
          type: array
        paymentsCount:
          description: Кол-во платежей в реестре
          type: integer
        status:
          description: Статус платежного реестра:<br><ul><li>DRAFT - Платежный реестр
            готов к отправке</li><li>ERROR - Ошибка создания платежного реестра</li><li>ACCEPTED
            - Реестр ожидает поступления денежных средств</li><li>EXECUTED - Реестр
            исполнен</li><li>PART_EXEC - Реестр исполнен частично</li><li>REJECTED
            - Реестр отклонён банком</li><li>CANCELLED - Реестр отменён</li><li>DELETED
            - Реестр удалён</li><ul>
          enum:
          - DRAFT
          - ERROR
          - ACCEPTED
          - EXECUTED
          - PART_EXEC
          - REJECTED
          - CANCELLED
          - DELETED
          type: string
          x-enum-varnames:
          - DRAFT
          - ERROR
          - ACCEPTED
          - EXECUTED
          - PART_EXEC
          - REJECTED
          - CANCELLED
          - DELETED
        totalSum:
          description: Общая сумма платежей в реестре
          type: number
      required:
      - paymentsCount
      - status
      - totalSum
      type: object
    PaymentRegistrySubmitRequest:
      example:
        correlationId: correlationId
        paymentRegistryId: 0
      format: UUID
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
        paymentRegistryId:
          description: Идентификатор платежного реестра
          type: integer
      required:
      - correlationId
      - paymentRegistryId
      type: object
    PaymentRegistrySubmitResponse:
      example:
        correlationId: correlationId
      format: UUID
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
      required:
      - correlationId
      type: object
    PaymentRegistrySubmitResultResponse:
      example:
        paymentRegistryId: 6
        error:
          errorMessage: errorMessage
          errorCode: errorCode
        paymentErrors:
        - number: 0
          accountNumber: accountNumber
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
        - number: 0
          accountNumber: accountNumber
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
        status: ACCEPTED
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        paymentErrors:
          description: Платежи внутри реестра, содержащие ошибки
          items:
            $ref: '#/components/schemas/SubmitPaymentError'
          type: array
        paymentRegistryId:
          description: Идентификатор платежного реестра
          type: integer
        status:
          description: Статус подписания платежного реестра
          enum:
          - ACCEPTED
          - ERROR
          - IN_PROGRESS
          type: string
          x-enum-varnames:
          - ACCEPTED
          - ERROR
          - IN_PROGRESS
      required:
      - paymentRegistryId
      - status
      type: object
    PaymentStatusResponse:
      example:
        meta: '{}'
        status: IN_PROGRESS
      properties:
        meta:
          description: Дополнительные метаданные в формате JSON. Сохраняются на создании
            платежа и возвращаются при получении статуса
          type: object
        status:
          enum:
          - IN_PROGRESS
          - EXECUTED
          - FAILED
          - CANCELLED
          type: string
          x-enum-varnames:
          - IN_PROGRESS
          - EXECUTED
          - FAILED
          - CANCELLED
      required:
      - status
      type: object
    Phone:
      example:
        number: number
        type: MOBILE
      properties:
        number:
          description: Номер телефона в формате +7xxxxxxxxxx
          pattern: ^((\+7)([0-9]){10})$
          type: string
        type:
          description: Тип телефона
          enum:
          - MOBILE
          - HOME
          - WORK
          - OTHER
          type: string
          x-enum-varnames:
          - MOBILE
          - HOME
          - WORK
          - OTHER
      required:
      - number
      - type
      type: object
    Phone1:
      example:
        number: number
        type: Мобильный
      properties:
        number:
          description: Номер телефона
          type: string
        type:
          description: Тип телефона
          enum:
          - Мобильный
          - По месту жительства
          - Рабочий
          type: string
          x-enum-varnames:
          - MOBIL_NYJ
          - PO_MESTU_ZHITEL_STVA
          - RABOCHIJ
      required:
      - type
      type: object
    Phone2:
      example:
        number: number
        type: Мобильный
      properties:
        number:
          description: Номер телефона
          type: string
        type:
          description: Тип телефона
          enum:
          - Мобильный
          - По месту жительства
          - Рабочий
          type: string
          x-enum-varnames:
          - MOBIL_NYJ
          - PO_MESTU_ZHITEL_STVA
          - RABOCHIJ
      required:
      - type
      type: object
    Ready:
      properties:
        info:
          $ref: '#/components/schemas/ReissuedVirtualCardInfo'
        status:
          description: Статус заявки на перевыпуск виртуальной карты. status = READY
            - карта успешно перевыпущена, вы можете ей пользоваться
          type: string
      required:
      - info
      - status
      type: object
    ReceiptError:
      properties:
        message:
          description: Некорректный чек
          type: string
        type:
          description: RECEIPT_ERROR
          type: string
      required:
      - message
      - type
      type: object
    ReceiptHistoryItem:
      description: Детали чека
      example:
        date: 2000-01-23T04:56:07.000+00:00
        qrCodeAsString: qrCodeAsString
      properties:
        date:
          description: Дата фиксации чека в системе
          format: date-time
          type: string
        qrCodeAsString:
          description: Строковое представление информации из qr кода
          type: string
      required:
      - date
      - qrCodeAsString
      type: object
    ReceiptRequestError:
      properties:
        message:
          description: Ошибка обращения в ФНС
          type: string
        type:
          description: RECEIPT_REQUEST_ERROR
          type: string
      required:
      - message
      - type
      type: object
    ReceiverRequisites:
      description: Реквизиты получателя платежа
      example:
        bik: bik
        corrAccountNumber: corrAccountNumber
        inn: inn
        name: name
        bankName: bankName
        kpp: kpp
        accountNumber: accountNumber
      properties:
        accountNumber:
          description: Номер расчетного счета
          pattern: ^(\d{20}|\d{22})$
          type: string
        bankName:
          description: Наименование банка получателя
          maxLength: 255
          minLength: 1
          type: string
        bik:
          description: БИК банка получателя
          pattern: \d{9}
          type: string
        corrAccountNumber:
          description: Корреспондентский счёт банка получателя
          pattern: \d{20}
          type: string
        inn:
          description: |2

            ИНН получателя. Если платеж выполняется в пользу физ. лица,
            и его ИНН неизвестен, в поле ИНН необходимо указать значение - "0".
            Во всех остальных случаях необходимо передавать фактический ИНН получателя.
          pattern: ^(\d{12}|\d{10}|0{1})$
          type: string
        kpp:
          description: КПП получателя
          pattern: ^(\d{9})$
          type: string
        name:
          description: Получатель
          type: string
      required:
      - accountNumber
      - bankName
      - bik
      - corrAccountNumber
      - inn
      - name
      type: object
    RegistrationInfo:
      description: Информация, использовавшаяся при постановке на учет
      example:
        oktmo: oktmo
        activityCodes:
        - activityCodes
        - activityCodes
      properties:
        activityCodes:
          description: Коды активностей
          items:
            type: string
          type: array
        oktmo:
          description: ОКТМО
          type: string
      required:
      - oktmo
      type: object
    ReissueVirtualCardRequest:
      example:
        ucid: 0
      properties:
        ucid:
          description: Уникальный идентификатор карты
          format: int64
          type: integer
      required:
      - ucid
      type: object
    ReissueVirtualCardResponse:
      example:
        correlationId: correlationId
      properties:
        correlationId:
          description: Идентификатор заявки на перевыпуск виртуальной карты
          type: string
      required:
      - correlationId
      type: object
    ReissueVirtualCardResultResponse:
      oneOf:
      - $ref: '#/components/schemas/Error'
      - $ref: '#/components/schemas/InProgress'
      - $ref: '#/components/schemas/Ready'
    ReissuedVirtualCardInfo:
      description: Данные перевыпущенной карты. Присутствует в ответе, если status
        = READY
      properties:
        cardBin:
          description: Первые 6 цифр номера новой карты (BIN карты)
          type: string
        cardLastFourDigits:
          description: Последние 4 цифры номера новой карты
          type: string
        newUcid:
          description: Уникальный идентификатор новой карты
          format: int64
          type: integer
        oldUcid:
          description: Уникальный идентификатор старой карты
          format: int64
          type: integer
      required:
      - cardBin
      - cardLastFourDigits
      - newUcid
      - oldUcid
      type: object
    Requisites:
      description: Реквизиты компании
      example:
        ogrn: ogrn
        address: address
        foreignName: foreignName
        inn: inn
        fullName: fullName
        kpp: kpp
      properties:
        address:
          description: Адрес
          type: string
        foreignName:
          description: Зарубежное имя компании
          type: string
        fullName:
          description: Полное имя компании
          type: string
        inn:
          description: ИНН
          pattern: ^(\d{12}|\d{10})$
          type: string
        kpp:
          description: КПП
          type: string
        ogrn:
          description: ОГРН
          type: string
      required:
      - address
      - fullName
      - inn
      type: object
    SbpPayerRequisites:
      description: Реквизиты плательщика
      example:
        accountNumber: accountNumber
      properties:
        accountNumber:
          description: Номер расчетного счета для списания. Если не указан, то перевод
            будет осуществляться с главного счета компании.
          pattern: ^(\d{20}|\d{22})$
          type: string
      type: object
    SbpReceiverRequisites:
      description: Реквизиты получателя платежа
      example:
        firstName: firstName
        lastName: lastName
        bankId: bankId
        phone: phone
        middleName: middleName
      properties:
        bankId:
          description: Идентификатор банка в системе быстрых платежей
          pattern: ^[\d\w]{12}$
          type: string
        firstName:
          description: Имя получателя
          maxLength: 100
          minLength: 1
          type: string
        lastName:
          description: Фамилия получателя
          maxLength: 100
          minLength: 1
          type: string
        middleName:
          description: Отчество получателя
          maxLength: 100
          minLength: 1
          type: string
        phone:
          description: Номер мобильного телефона получателя
          pattern: ^\+7\d{10}$
          type: string
      required:
      - bankId
      - firstName
      - lastName
      - phone
      type: object
    SelfEmployed:
      example:
        bankInfo:
          accountNumber: accountNumber
          agreementNumber: agreementNumber
        firstName: firstName
        lastName: lastName
        documents:
        - date: 2000-01-23
          division: division
          number: number
          serial: serial
          organization: organization
          expireDate: 2000-01-23
          type: Паспорт
        - date: 2000-01-23
          division: division
          number: number
          serial: serial
          organization: organization
          expireDate: 2000-01-23
          type: Паспорт
        registrationInfo:
          oktmo: oktmo
          activityCodes:
          - activityCodes
          - activityCodes
        phones:
        - number: number
          type: Мобильный
        - number: number
          type: Мобильный
        middleName: middleName
        selfEmployedStatus: REGISTRATION_WAIT
        id: 0
        birthDate: 2000-01-23
        status: PROCESSING
      properties:
        bankInfo:
          $ref: '#/components/schemas/BankInfo2'
        birthDate:
          description: Дата рождения
          format: date
          type: string
        documents:
          description: Документы
          items:
            $ref: '#/components/schemas/Document1'
          type: array
        firstName:
          description: Имя
          type: string
        id:
          description: Идентификатор самозанятого
          type: integer
        lastName:
          description: Фамилия
          type: string
        middleName:
          description: Отчество
          type: string
        phones:
          description: Номера телефонов
          items:
            $ref: '#/components/schemas/Phone2'
          type: array
        registrationInfo:
          $ref: '#/components/schemas/RegistrationInfo'
        selfEmployedStatus:
          description: Статус самозанятости (в будущем возможно разширение возможных
            статусов):<br><ul><li>ACTIVE - Получатель самозанятый, привязан к Тинькофф.
            Доступны выплаты с чеками</li><li>NOT_ACTIVE - Получатель не самозанятый
            или не привязан к Тинькофф. Выплаты с чеками недоступны</li><li>REGISTRATION_WAIT
            - Получатель ожидает постановки на учет в качестве самозанятого. Статус
            возможен в случае, если в методе создания самозанятого было передано значение
            registrationInfo</li><li>NOT_CONFIRM - Статус самозанятости неизвестен</li><ul>
          enum:
          - REGISTRATION_WAIT
          - NOT_CONFIRM
          - NOT_ACTIVE
          - ACTIVE
          type: string
          x-enum-varnames:
          - REGISTRATION_WAIT
          - NOT_CONFIRM
          - NOT_ACTIVE
          - ACTIVE
        status:
          description: Статус самозанятого:<br><ul><li>ERROR - Ошибка создания анкеты
            самозанятого</li><li>DRAFT - Анкета самозанятого готова к отправке</li><li>PROCESSING_ERROR
            - Ошибка отправки анкеты (обатитесь к персональному менеджеру для уточнения
            причины)</li><li>PROCESSING - Обрабатываем анкету самозанятого</li><li>REJECTED
            - Отказ в открытии счета (конечный статус добавления)</li><li>MTNG_WAIT
            - Самозанятый ожидает назначения встречи для доставки карты </li><li>MTNG_SCHD
            - Встреча для доставки карты самозанятому назначена</li><li>MTNG_CANC
            - Встреча для доставки карты самозанятому отменена</li><li>ACTIVE - Самозанятый
            добавлен (конечный статус добавления)</li><li>DELETED - Самозанятый удален</li><ul>
          enum:
          - PROCESSING
          - DRAFT
          - PROCESSING_ERROR
          - ACTIVE
          - ERROR
          - REJECTED
          - DELETED
          - MTNG_SCHD
          - MTNG_WAIT
          - MTNG_CANC
          type: string
          x-enum-varnames:
          - PROCESSING
          - DRAFT
          - PROCESSING_ERROR
          - ACTIVE
          - ERROR
          - REJECTED
          - DELETED
          - MTNG_SCHD
          - MTNG_WAIT
          - MTNG_CANC
      required:
      - bankInfo
      - firstName
      - id
      - lastName
      - selfEmployedStatus
      - status
      type: object
    SelfEmployedCreatePaymentInfo:
      example:
        number: 6
        collectionAmount: 0.8008281904610115
        selfEmployedInfo:
          firstName: firstName
          lastName: lastName
          recipientId: 1
          middleName: middleName
        revenueTypeCode: "1"
        sum: 5.962133916683182
        paymentPurpose: paymentPurpose
        accountNumber: accountNumber
      properties:
        accountNumber:
          description: Номер счета самозанятого
          type: string
        collectionAmount:
          description: Удержанная сумма
          type: number
        number:
          description: Идентификатор платежа на стороне клиента
          type: integer
        paymentPurpose:
          description: Назначение платежа
          type: string
        revenueTypeCode:
          description: Код вида дохода
          enum:
          - "1"
          - "2"
          - "3"
          type: string
          x-enum-varnames:
          - _1
          - _2
          - _3
        selfEmployedInfo:
          $ref: '#/components/schemas/SelfEmployeeInfo'
        sum:
          description: Сумма платежа в рублях
          type: number
      required:
      - accountNumber
      - number
      - paymentPurpose
      - selfEmployedInfo
      - sum
      type: object
    SelfEmployedCreatePaymentRegistryRequest:
      example:
        taxHolding: true
        payments:
        - number: 6
          collectionAmount: 0.8008281904610115
          selfEmployedInfo:
            firstName: firstName
            lastName: lastName
            recipientId: 1
            middleName: middleName
          revenueTypeCode: "1"
          sum: 5.962133916683182
          paymentPurpose: paymentPurpose
          accountNumber: accountNumber
        - number: 6
          collectionAmount: 0.8008281904610115
          selfEmployedInfo:
            firstName: firstName
            lastName: lastName
            recipientId: 1
            middleName: middleName
          revenueTypeCode: "1"
          sum: 5.962133916683182
          paymentPurpose: paymentPurpose
          accountNumber: accountNumber
        correlationId: correlationId
        loadDate: loadDate
      format: UUID
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
        loadDate:
          description: Дата отправки реестра
          type: string
        payments:
          description: Список платежей внутри реестра
          items:
            $ref: '#/components/schemas/SelfEmployedCreatePaymentInfo'
          type: array
        registryCreateType:
          $ref: '#/components/schemas/SelfEmployedRegistryCreateTypeRequest'
        taxHolding:
          description: Если true, то Тинькофф переведет 6% от суммы платежа на налоговую
            копилку для последующей оплаты налогов. Если false, самозанятый получит
            полную сумму и налог удержан не будет. По умолчанию false.
          type: boolean
      required:
      - correlationId
      type: object
    SelfEmployedCreatePaymentRegistryResponse:
      example:
        correlationId: correlationId
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
      required:
      - correlationId
      type: object
    SelfEmployedCreatePaymentRegistryResultResponse:
      example:
        paymentRegistryId: 6
        error:
          fieldName: fieldName
          errorDescription: errorDescription
        paymentErrors:
        - number: 0
          accountNumber: accountNumber
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
        - number: 0
          accountNumber: accountNumber
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
        status: CREATED
      properties:
        error:
          $ref: '#/components/schemas/FieldValidationError'
        paymentErrors:
          description: Платежи внутри реестра, содержащие ошибки
          items:
            $ref: '#/components/schemas/PaymentError1'
          type: array
        paymentRegistryId:
          description: Идентификатор платежного реестра
          type: integer
        status:
          description: Статус создания платежного реестра
          enum:
          - CREATED
          - ERROR
          - QUEUED
          type: string
          x-enum-varnames:
          - CREATED
          - ERROR
          - QUEUED
      required:
      - status
      type: object
    SelfEmployedFiscalizePaymentRegistryRequest:
      example:
        correlationId: correlationId
        paymentRegistryId: 0
      format: UUID
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
        paymentRegistryId:
          description: Номер платежного реестра
          type: integer
      required:
      - correlationId
      - paymentRegistryId
      type: object
    SelfEmployedFiscalizePaymentRegistryResponse:
      example:
        correlationId: correlationId
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
      required:
      - correlationId
      type: object
    SelfEmployedFiscalizePaymentRegistryResultResponse:
      example:
        error:
          errorMessage: errorMessage
          errorCode: errorCode
        status: FINISHED
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        status:
          description: Статус регистрации дохода по реестру
          enum:
          - FINISHED
          - ERROR
          - IN_PROGRESS
          type: string
          x-enum-varnames:
          - FINISHED
          - ERROR
          - IN_PROGRESS
      required:
      - status
      type: object
    SelfEmployedInfoRequest:
      example:
        recipientIds:
        - 0
        - 0
      properties:
        recipientIds:
          description: Список идентификаторов самозанятых
          items:
            type: integer
          type: array
      type: object
    SelfEmployedPaymentInfo:
      example:
        number: 6
        collectionAmount: 0.8008281904610115
        selfEmployedInfo:
          firstName: firstName
          lastName: lastName
          recipientId: 1
          middleName: middleName
        revenueTypeCode: "1"
        sum: 1.4658129805029452
        paymentPurpose: paymentPurpose
        accountNumber: accountNumber
        status: ACCEPTED
      properties:
        accountNumber:
          description: Номер счета самозанятого
          type: string
        collectionAmount:
          description: Удержанная сумма
          type: number
        number:
          description: Идентификатор платежа на стороне клиента. Не возвращается в
            случае, если платежный реестр был создан через Личный Кабинет
          type: integer
        paymentPurpose:
          description: Назначение платежа
          type: string
        revenueTypeCode:
          description: Код вида дохода
          enum:
          - "1"
          - "2"
          - "3"
          type: string
          x-enum-varnames:
          - _1
          - _2
          - _3
        selfEmployedInfo:
          $ref: '#/components/schemas/SelfEmployeeInfo'
        status:
          description: Статус платежа:<br><ul><li>WAITING - Платёж ожидает отправки
            реестра</li><li>ACCEPTED - Платёж ожидает исполнения реестра</li><li>EXECUTED
            - Платёж исполнен</li><li>REJECTED - Платёж отклонён банком</li><li>CANCELLED
            - Платёж отменён</li><li>DELETED - Платёж удалён</li><ul>
          enum:
          - ACCEPTED
          - EXECUTED
          - REJECTED
          - CANCELLED
          - DELETED
          - WAITING
          type: string
          x-enum-varnames:
          - ACCEPTED
          - EXECUTED
          - REJECTED
          - CANCELLED
          - DELETED
          - WAITING
        sum:
          description: Сумма платежа
          type: number
      required:
      - selfEmployedInfo
      - status
      - sum
      type: object
    SelfEmployedPaymentRegistry:
      example:
        totalSum: 5.637376656633329
        payments:
        - number: 6
          collectionAmount: 0.8008281904610115
          selfEmployedInfo:
            firstName: firstName
            lastName: lastName
            recipientId: 1
            middleName: middleName
          revenueTypeCode: "1"
          sum: 1.4658129805029452
          paymentPurpose: paymentPurpose
          accountNumber: accountNumber
          status: ACCEPTED
        - number: 6
          collectionAmount: 0.8008281904610115
          selfEmployedInfo:
            firstName: firstName
            lastName: lastName
            recipientId: 1
            middleName: middleName
          revenueTypeCode: "1"
          sum: 1.4658129805029452
          paymentPurpose: paymentPurpose
          accountNumber: accountNumber
          status: ACCEPTED
        paymentsCount: 5
        loadDate: loadDate
        status: DRAFT
      properties:
        loadDate:
          description: Дата исполнения реестра
          type: string
        payments:
          description: Список платежей внутри реестра
          items:
            $ref: '#/components/schemas/SelfEmployedPaymentInfo'
          type: array
        paymentsCount:
          description: Кол-во платежей в реестре
          type: integer
        status:
          description: Статус платежного реестра:<br><ul><li>DRAFT - Платежный реестр
            готов к отправке</li><li>ERROR - Ошибка создания платежного реестра</li><li>ACCEPTED
            - Реестр ожидает поступления денежных средств</li><li>EXECUTED - Реестр
            исполнен</li><li>PART_EXEC - Реестр исполнен частично</li><li>REJECTED
            - Реестр отклонён банком</li><li>CANCELLED - Реестр отменён</li><li>DELETED
            - Реестр удалён</li><ul>
          enum:
          - DRAFT
          - ERROR
          - ACCEPTED
          - EXECUTED
          - PART_EXEC
          - REJECTED
          - CANCELLED
          - DELETED
          type: string
          x-enum-varnames:
          - DRAFT
          - ERROR
          - ACCEPTED
          - EXECUTED
          - PART_EXEC
          - REJECTED
          - CANCELLED
          - DELETED
        totalSum:
          description: Общая сумма платежей в реестре
          type: number
      required:
      - paymentsCount
      - status
      - totalSum
      type: object
    SelfEmployedPaymentRegistryResultSubmitResponse:
      example:
        paymentRegistryId: 0
        error:
          errorMessage: errorMessage
          errorCode: errorCode
        paymentErrors:
        - number: 0
          accountNumber: accountNumber
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
        - number: 0
          accountNumber: accountNumber
          errors:
          - fieldName: fieldName
            errorDescription: errorDescription
          - fieldName: fieldName
            errorDescription: errorDescription
        status: ACCEPTED
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        paymentErrors:
          description: Платежи внутри реестра, содержащие ошибки
          items:
            $ref: '#/components/schemas/SubmitPaymentError'
          type: array
        paymentRegistryId:
          description: Идентификатор платежного реестра
          type: integer
        status:
          description: Статус подписания платежного реестра
          enum:
          - ACCEPTED
          - ERROR
          - IN_PROGRESS
          type: string
          x-enum-varnames:
          - ACCEPTED
          - ERROR
          - IN_PROGRESS
      required:
      - paymentRegistryId
      - status
      type: object
    SelfEmployedPaymentRegistrySubmitRequest:
      example:
        correlationId: correlationId
        paymentRegistryId: 0
      format: UUID
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
        paymentRegistryId:
          description: Идентификатор платежного реестра
          type: integer
      required:
      - correlationId
      - paymentRegistryId
      type: object
    SelfEmployedPaymentRegistrySubmitResponse:
      example:
        correlationId: correlationId
      format: UUID
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
      required:
      - correlationId
      type: object
    SelfEmployedReceipt:
      example:
        number: 0
        selfEmployedInfo:
          firstName: firstName
          lastName: lastName
          recipientId: 6
          middleName: middleName
        link: link
        error:
          errorMessage: errorMessage
          errorCode: errorCode
        status: IN_PROGRESS
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        link:
          description: Ссылка на чек
          type: string
        number:
          description: Идентификатор платежа на стороне клиента
          type: integer
        selfEmployedInfo:
          $ref: '#/components/schemas/SelfEmployeeInfo1'
        status:
          description: Результат регистрации дохода:<br><ul><li>IN_PROGRESS - Доход
            регистрируется.</li><li>SUCCESS - Доход был успешно зарегистрирован, возвращается
            fnsLink.</li><li>CANCELED - Чек был сторнирован, возвращается fnsLink.</li><li>FISCALIZE_FAILED
            - Доход не удалось зарегистрировать в налоговой.</li><li>ERROR - Не удалось
            получить статус наличия зарегистрированного дохода. <br>Возвращается в
            случае внутренней ошибки, или если по платежу еще не регистрировался доход.<br>Для
            повторной регистрации можно вызвать /fiscalize по реестру<br><a href="#operation/SelfEmployedFiscalizePaymentRegistry">Получить
            результат регистрации дохода по реестру самозанятых</a>.</li><ul>
          enum:
          - IN_PROGRESS
          - SUCCESS
          - CANCELED
          - FISCALIZE_FAILED
          - ERROR
          type: string
          x-enum-varnames:
          - IN_PROGRESS
          - SUCCESS
          - CANCELED
          - FISCALIZE_FAILED
          - ERROR
      required:
      - number
      - selfEmployedInfo
      - status
      type: object
    SelfEmployedReceipts:
      example:
        receipts:
        - number: 0
          selfEmployedInfo:
            firstName: firstName
            lastName: lastName
            recipientId: 6
            middleName: middleName
          link: link
          error:
            errorMessage: errorMessage
            errorCode: errorCode
          status: IN_PROGRESS
        - number: 0
          selfEmployedInfo:
            firstName: firstName
            lastName: lastName
            recipientId: 6
            middleName: middleName
          link: link
          error:
            errorMessage: errorMessage
            errorCode: errorCode
          status: IN_PROGRESS
        error:
          errorMessage: errorMessage
          errorCode: errorCode
        status: FINISHED
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        receipts:
          description: Результат регистрации дохода
          items:
            $ref: '#/components/schemas/SelfEmployedReceipt'
          type: array
        status:
          description: Статус запроса на получение чеков
          enum:
          - FINISHED
          - IN_PROGRESS
          - ERROR
          type: string
          x-enum-varnames:
          - FINISHED
          - IN_PROGRESS
          - ERROR
      required:
      - status
      type: object
    SelfEmployedReceiptsRequest:
      example:
        correlationId: correlationId
        paymentRegistryId: 0
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
        paymentRegistryId:
          description: Номер платежного реестра. Необходимо, чтобы ранее по реестру
            была проведена регистрация дохода
          type: integer
      required:
      - correlationId
      - paymentRegistryId
      type: object
    SelfEmployedReceiptsResponse:
      example:
        correlationId: correlationId
      properties:
        correlationId:
          description: Идентификатор, связывающий запрос создания с запросом получения
            ответа
          type: string
      required:
      - correlationId
      type: object
    SelfEmployedRegistryCreateTypeRequest:
      description: |2

        Может принимать одно из двух значений:
        <ul>
        <li>IGNORE_ERRORS - реестр будет создан из всех корректных платежей, его идентификатор вернется в поле paymentRegistryId метода /create/result. В случае если корректных платежей не оказалось, реестр не будет создан</li>
        <li>FAIL_ERRORS - при наличии ошибочных платежей реестр создан не будет. По умолчанию "FAIL_ERRORS"</li>
        </ul>
      oneOf:
      - $ref: '#/components/schemas/FailErrors1'
      - $ref: '#/components/schemas/IgnoreErrors1'
    SelfEmployedResponse:
      example:
        recipients:
        - bankInfo:
            accountNumber: accountNumber
            agreementNumber: agreementNumber
          firstName: firstName
          lastName: lastName
          documents:
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          registrationInfo:
            oktmo: oktmo
            activityCodes:
            - activityCodes
            - activityCodes
          phones:
          - number: number
            type: Мобильный
          - number: number
            type: Мобильный
          middleName: middleName
          selfEmployedStatus: REGISTRATION_WAIT
          id: 0
          birthDate: 2000-01-23
          status: PROCESSING
        - bankInfo:
            accountNumber: accountNumber
            agreementNumber: agreementNumber
          firstName: firstName
          lastName: lastName
          documents:
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          - date: 2000-01-23
            division: division
            number: number
            serial: serial
            organization: organization
            expireDate: 2000-01-23
            type: Паспорт
          registrationInfo:
            oktmo: oktmo
            activityCodes:
            - activityCodes
            - activityCodes
          phones:
          - number: number
            type: Мобильный
          - number: number
            type: Мобильный
          middleName: middleName
          selfEmployedStatus: REGISTRATION_WAIT
          id: 0
          birthDate: 2000-01-23
          status: PROCESSING
      properties:
        recipients:
          description: Список самозанятых
          items:
            $ref: '#/components/schemas/SelfEmployed'
          type: array
      type: object
    SelfEmployedStatusResponse:
      example:
        isSelfEmployed: true
      properties:
        isSelfEmployed:
          description: Является ли пользователь самозанятым
          type: boolean
      required:
      - isSelfEmployed
      type: object
    SelfEmployeeInfo:
      description: Данные самозанятого
      example:
        firstName: firstName
        lastName: lastName
        recipientId: 1
        middleName: middleName
      properties:
        firstName:
          description: Имя (кириллица)
          type: string
        lastName:
          description: Фамилия (кириллица)
          type: string
        middleName:
          description: Отчество (кириллица)
          type: string
        recipientId:
          description: Идентификатор самозанятого. Возвращается в случае, если реестр
            в статусах DRAFT, ACCEPTED, PART_EXEC, EXECUTED
          type: integer
      required:
      - firstName
      - lastName
      type: object
    SelfEmployeeInfo1:
      description: Данные самозанятого
      example:
        firstName: firstName
        lastName: lastName
        recipientId: 6
        middleName: middleName
      properties:
        firstName:
          description: Имя (кириллица)
          type: string
        lastName:
          description: Фамилия (кириллица)
          type: string
        middleName:
          description: Отчество (кириллица)
          type: string
        recipientId:
          description: Идентификатор самозанятого
          type: integer
      required:
      - firstName
      - lastName
      type: object
    SendReceiptRequest:
      example:
        phoneNumber: phoneNumber
        qrCodeAsString: qrCodeAsString
        offerId: 0
      properties:
        offerId:
          description: id оффера, в рамках которого клиент предполагает получить кэшбэк
          format: int64
          type: integer
        phoneNumber:
          description: Номер телефона клиента в формате E.164
          type: string
        qrCodeAsString:
          description: Содержимое qr кода чека
          type: string
      required:
      - phoneNumber
      - qrCodeAsString
      type: object
    SendReceiptResponse:
      example:
        totalBalance: totalBalance
        cashbackAmount: cashbackAmount
        offerIds:
        - 0
        - 0
      properties:
        cashbackAmount:
          description: Кэшбэк, начисленный за чек
          type: string
        offerIds:
          description: Список офферов, за которые начислен кэшбэк
          items:
            format: int64
            type: integer
          type: array
        totalBalance:
          description: Текущий баланс кэшбэка клиента
          type: string
      required:
      - cashbackAmount
      - totalBalance
      type: object
    SetLimitRequest:
      example:
        limitValue: 0.8008281904610115
        limitPeriod: DAY
      properties:
        limitPeriod:
          description: |2-

            Период обновления доступного остатка:<ul>
            <li>"DAY" &ndash; доступный остаток станет равным лимиту в начале следующих суток</li>
            <li>"MONTH" &ndash; доступный остаток станет равным лимиту в начале следующего месяца</li>
            <li>"IRREGULAR" &ndash; доступный остаток станет равным лимиту только при обновлении лимита</li>
            </ul>
          enum:
          - DAY
          - MONTH
          - IRREGULAR
          type: string
          x-enum-varnames:
          - DAY
          - MONTH
          - IRREGULAR
        limitValue:
          description: Величина лимита в валюте счёта, к которому привязана карта.
            До двух дробных знаков.
          type: number
      required:
      - limitPeriod
      - limitValue
      type: object
    SmePaymentsCoreMetaObject:
      description: Дополнительные метаданные в формате JSON. Сохраняются на создании
        платежа и возвращаются при получении статуса
      type: object
    SnilsResponse:
      example:
        snils: snils
      properties:
        snils:
          description: СНИЛС
          pattern: ^(\d{11})$
          type: string
      type: object
    SpendLimit:
      description: Объект с информацией о расходном лимите
      example:
        limitValue: 5.962133916683182
        limitPeriod: DAY
        limitRemain: 1.4658129805029452
      properties:
        limitPeriod:
          description: |2-

            Период обновления доступного остатка расходного лимита:<ul>
            <li>"DAY" &ndash; доступный остаток станет равным лимиту в начале следующих суток</li>
            <li>"MONTH" &ndash; доступный остаток станет равным лимиту в начале следующего месяца</li>
            <li>"IRREGULAR" &ndash; доступный остаток станет равным лимиту только при обновлении лимита</li>
            <li>"CUSTOM" &ndash; период обновления лимита вручную установлен в дополнительное состояние, узнать которое вы можете у вашего персонального менеджера</li>
            </ul>
          enum:
          - DAY
          - MONTH
          - IRREGULAR
          - CUSTOM
          type: string
          x-enum-varnames:
          - DAY
          - MONTH
          - IRREGULAR
          - CUSTOM
        limitRemain:
          description: Доступный остаток расходного лимита в валюте счёта, к которому
            привязана карта
          type: number
        limitValue:
          description: Лимит на покупки и снятия наличных в валюте счёта, к которому
            привязана карта
          type: number
      required:
      - limitPeriod
      - limitRemain
      - limitValue
      type: object
    SubmitPaymentError:
      example:
        number: 0
        accountNumber: accountNumber
        errors:
        - fieldName: fieldName
          errorDescription: errorDescription
        - fieldName: fieldName
          errorDescription: errorDescription
      properties:
        accountNumber:
          description: Номер счёта сотрудника
          type: string
        errors:
          description: Ошибки валидации
          items:
            $ref: '#/components/schemas/FieldValidationError'
          type: array
        number:
          description: Идентификатор платежа, переданный клиентом при создании
          type: integer
      required:
      - number
      type: object
    TacqOperationResponse:
      example:
        operations:
        - amount: 0
          transactionDate: 2000-01-23T04:56:07.000+00:00
          type: Debit
          cardNumber: cardNumber
          rrn: rrn
        - amount: 0
          transactionDate: 2000-01-23T04:56:07.000+00:00
          type: Debit
          cardNumber: cardNumber
          rrn: rrn
        lastTransactionDate: 2000-01-23T04:56:07.000+00:00
      properties:
        lastTransactionDate:
          description: Последняя дата совершения транзакции для выборки в UTC (формат
            yyyy-MM-ddTHH:mm:ssZ)
          format: date-time
          type: string
        operations:
          description: Список операций по терминалу
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      type: object
    TaxPaymentParameters:
      description: Реквизиты для уплаты налогов
      example:
        thirdParty:
          inn: inn
          kpp: kpp
        period: period
        evidence: evidence
        oktmo: oktmo
        docNumber: docNumber
        kbk: kbk
        docDate: docDate
        payerStatus: payerStatus
      properties:
        docDate:
          description: |-
            Дата налогового документа. Поле платежки 109. Формат — ДД.ММ.ГГГГ или 0.
            Подробнее :https://www.nalog.ru/rn40/news/tax_doc_news/4604512/
          pattern: \d{2}\.\d{2}\.\d{4}|0
          type: string
        docNumber:
          description: 'Номер налогового документа. Поле платежки 108. Поле может
            принимать следующие значения: 0 - погашается текущая задолженность по
            налогам (страховым сборам) или речь идет о добровольной уплате недоимки.
            ТР - Означает выставленное требование налоговых органов. При обнаружении
            недоимки инспекция вправе прислать налогоплательщику документ с указанием
            вида налога или страхового взноса и суммы на перечисление. РС - Погашение
            задолженности в рассрочку. В соответствии с п. 3 ст. 61 НК РФ налогоплательщики,
            не имеющие возможность погасить задолженность перед бюджетом вовремя,
            могут получить рассрочку. ОТ - Номер решения об отсрочке текущего платежа,
            принятого налоговым органом. В некоторых обстоятельствах субъекты не имеют
            возможности уплатить сумму начисленного налога полностью в срок. РТ -
            Указывается номер принятого налоговиками решения о реструктуризации. В
            случае невозможности погашения организацией задолженности по налогам и
            пеням она может воспользоваться льготными условиями в соответствии с принятым
            графиком погашения долговых обязательств. ПБ - Номер дела по вынесенному
            арбитражным судом решению. Иногда между налогоплательщиками и контролирующими
            органами возникают споры по поводу правильности начисления и полноты уплаты
            бюджетных обязательств. ПР - Используется номер решения о приостановлении
            взыскания при погашении плательщиком этой задолженности. АП - Подразумевается
            номер акта выездной или камеральной проверки, в результате которой произошло
            доначисление налогов, пеней и штрафов. АР - Оплата по номеру исполнительного
            документа, выданного в результате возбужденного дела. ИН - Номер решения
            о предоставлении инвестиционного налогового кредита — еще одного способа
            изменения установленного срока уплаты по налогам. Помимо отсрочки исполнения
            платежа, он несет в себе некоторые признаки бюджетного кредитования с
            последующей уплатой начисленных процентов и основной суммы долга. ТЛ -
            Проставляется номер определения арбитражного суда, удовлетворяющего заявление
            о погашении требований к должнику. Подробнее: https://glavkniga.ru/situations/s503634'
          pattern: '[A-Za-zА-Яа-я]{2}|0'
          type: string
        evidence:
          description: 'Основание налогового платежа. Поле платежки 106. Поле может
            принимать следующие значения: ТП – платежи текущего года; ЗД – добровольное
            погашение задолженности по истекшим налоговым, расчетным (отчетным) периодам
            при отсутствии требования налогового органа об уплате налогов (сборов);
            БФ – текущий платеж физического лица – клиента банка (владельца счета),
            уплачиваемый со своего банковского счета; ТР – погашение задолженности
            по требованию налогового органа об уплате налогов (сборов); РС – погашение
            рассроченной задолженности; ОТ – погашение отсроченной задолженности;
            РТ – погашение реструктурируемой задолженности; ПБ – погашение должником
            задолженности в ходе процедур, применяемых в деле о банкротстве; ПР –
            погашение задолженности, приостановленной к взысканию; АП – погашение
            задолженности по акту проверки; АР – погашение задолженности по исполнительному
            документу; ИН – погашение инвестиционного налогового кредита; ТЛ - погашение
            учредителем (участником) должника, собственником имущества должника -
            унитарного предприятия или третьим лицом задолженности в ходе процедур,
            применяемых в деле о банкротстве; ЗТ - погашение текущей задолженности
            в ходе процедур, применяемых в деле о банкротстве. 0 - при незнании основания
            платежа. Подробнее: https://glavkniga.ru/situations/s503643?mailing_uuid=e25da053-42e1-46c5-8559-f7407dc0c8ca&utm_news_date=2020-09-22'
          pattern: '[A-Za-zА-Яа-я]{2}|0'
          type: string
        kbk:
          description: 'Код бюджетной классификации. Поле платежки 104. Подробнее:
            https://buhguru.com/spravka-info/kbk-2021.html'
          pattern: \d{20}
          type: string
        oktmo:
          description: "Код ОКТМО территории, на которой мобилизуются денежные сре\
            дства от уплаты налога, сбора и иного платежа. Поле платежки 105. \nПо\
            дробнее: https://nalog-nalog.ru/uplata_nalogov/rekvizity_dlya_uplaty_nalogov_vznosov/oktmo_v_platezhnom_poruchenii_nyuansy/"
          pattern: \d{8}|\d{11}
          type: string
        payerStatus:
          description: 'Статус составителя расчетного документа. Поле платежки 101.
            ВАЖНО: При оплате налога за третьих лиц указывается налоговый статус человека,
            за которого происходит оплата. Поле может принимать следующие значения:
            01 — налогоплательщик (плательщик сборов) — юрлицо; 02 — налоговый агент;
            08 — плательщик-юрлицо (ИП), осуществляющий уплату страховых взносов и
            иных платежей в бюджетную систему РФ; 09 — налогоплательщик (плательщик
            сборов) — ИП; 14 — налогоплательщик, производящий выплаты физическим лицам;
            24 — плательщик-физлицо, осуществляющий уплату страховых взносов и иных
            платежей в бюджетную систему РФ. Подробнее: https://www.nalog.ru/create_business/ip/in_progress/payment_order/step17/'
          pattern: \d{2}
          type: string
        period:
          description: "Налоговый период. Поле платежки 107. \nФормат — ДД.ММ.ГГГГ\
            , первые два символа могут быть буквами или цифрами; а также поле може\
            т быть передано 0. \nПодробнее: https://www.nalog.ru/rn40/news/tax_doc_news/6181298/"
          pattern: ([A-Za-zА-Яа-я]{2}|\d{2})\.\d{2}\.\d{4}|0
          type: string
        thirdParty:
          $ref: '#/components/schemas/TaxThirdParty'
      required:
      - docDate
      - docNumber
      - evidence
      - kbk
      - oktmo
      - payerStatus
      - period
      type: object
    TaxThirdParty:
      description: 'Реквизиты для оплаты налогов за третьих лиц. Подробнее: https://glavkniga.ru/situations/s509587'
      example:
        inn: inn
        kpp: kpp
      properties:
        inn:
          description: ИНН третьего лица.
          pattern: ^(\d{12}|\d{10}|0{1})$
          type: string
        kpp:
          description: КПП третьего лица.
          pattern: ^(\d{9}|0)$
          type: string
      required:
      - inn
      - kpp
      type: object
    TooManyRequestsErrorResponse:
      properties:
        errorCode:
          description: Код ошибки
          type: string
        errorId:
          description: Уникальный идентификатор ошибки
          type: string
        errorMessage:
          description: Текст ошибки
          type: string
      required:
      - errorCode
      - errorId
      - errorMessage
      type: object
    TransitAccount:
      description: Информация о транзитном счете. Актуально для валютных счетов
      example:
        balance: balance
        accountNumber: accountNumber
      properties:
        accountNumber:
          description: Номер транзитного банковского счета
          type: string
        balance:
          description: Текущий остаток по транзитному счету
          type: string
      required:
      - accountNumber
      - balance
      type: object
    UploadTaskFileRequest:
      properties:
        content:
          format: binary
          type: string
        description:
          type: string
        prevDocId:
          type: string
        taskId:
          type: string
        type:
          type: string
      required:
      - content
      - taskId
      - type
      type: object
    UploadTaskFileResponse:
      example:
        id: id
      properties:
        id:
          description: Идентификатор документа
          type: string
      required:
      - id
      type: object
    ValidationError:
      properties:
        message:
          description: Ошибка валидации запроса
          type: string
        type:
          description: VALIDATION_ERROR
          type: string
      required:
      - message
      - type
      type: object
  securitySchemes:
    httpAuth:
      scheme: bearer
      type: http
x-tagGroups:
- name: 'Методы:'
  tags:
  - Зарплатный проект
  - Самозанятые
  - Выставление счетов
  - Платежи
  - Компании
  - Счета и выписки
  - Торговый эквайринг
  - Бизнес-карты
  - Информация о пользователе
  - Партнерская доставка
  - Cпецпредложения и кэшбэк

